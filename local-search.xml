<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mikrotik Routeros 7.15 CF DDNS 脚本</title>
    <link href="/2024/08/06/rosddns/"/>
    <url>/2024/08/06/rosddns/</url>
    
    <content type="html"><![CDATA[<p>Miktotik Routeros利用脚本能够方便实现DDNS功能。如果你的域名托管在cloudflare平台，可以直接使用下述脚本，适用于最新版的Mikrotik Routeros 7.15，将脚本执行与PPPoE UP事件关联即可。</p><h1 id="IPv4版本"><a href="#IPv4版本" class="headerlink" title="IPv4版本"></a>IPv4版本</h1><p>具备IPv4公网地址的网友推荐此脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Cloudflare Dynamic DNS update script</span><br><span class="hljs-comment"># Required policy: read, write, test, policy</span><br><span class="hljs-comment"># Add this script to scheduler</span><br><span class="hljs-comment"># Install DigiCert root CA or disable check-certificate</span><br><span class="hljs-comment"># Configuration ---------------------------------------------------------------------</span><br><br>:<span class="hljs-built_in">local</span> TOKEN <span class="hljs-string">&quot;*********************************&quot;</span><br>:<span class="hljs-built_in">local</span> ZONEID <span class="hljs-string">&quot;********************************&quot;</span><br>:<span class="hljs-built_in">local</span> RECORDID <span class="hljs-string">&quot;******************************&quot;</span><br>:<span class="hljs-built_in">local</span> RECORDNAME <span class="hljs-string">&quot;****************************&quot;</span><br>:<span class="hljs-built_in">local</span> WANIF <span class="hljs-string">&quot;*********************************&quot;</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------</span><br><br>:global IP4NEW<br>:global IP4CUR<br><br>:<span class="hljs-built_in">local</span> url <span class="hljs-string">&quot;https://api.cloudflare.com/client/v4/zones/<span class="hljs-variable">$ZONEID</span>/dns_records/<span class="hljs-variable">$RECORDID</span>/&quot;</span><br><br>:<span class="hljs-keyword">if</span> ([/interface get <span class="hljs-variable">$WANIF</span> value-name=running]) <span class="hljs-keyword">do</span>=&#123;<br><span class="hljs-comment"># Get the current public IP</span><br>    :<span class="hljs-built_in">local</span> currentIP [/ip address get [/ip address find interface=<span class="hljs-variable">$WANIF</span> ] address];<br>    :<span class="hljs-built_in">set</span> IP4NEW [:pick <span class="hljs-variable">$currentIP</span> 0 [:find <span class="hljs-variable">$currentIP</span> <span class="hljs-string">&quot;/&quot;</span>]];<br><span class="hljs-comment"># Check if IP has changed</span><br>    :<span class="hljs-keyword">if</span> (<span class="hljs-variable">$IP4NEW</span> != <span class="hljs-variable">$IP4CUR</span>) <span class="hljs-keyword">do</span>=&#123;<br>        :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: Public IP changed to <span class="hljs-variable">$IP4NEW</span>, updating&quot;</span><br>        :<span class="hljs-built_in">local</span> cfapi [/tool fetch http-method=put mode=https url=<span class="hljs-variable">$url</span> check-certificate=no output=user as-value \<br>            http-header-field=<span class="hljs-string">&quot;Authorization: Bearer <span class="hljs-variable">$TOKEN</span>,Content-Type: application/json&quot;</span> \<br>            http-data=<span class="hljs-string">&quot;&#123;&quot;</span><span class="hljs-built_in">type</span><span class="hljs-string">&quot;:&quot;</span>A<span class="hljs-string">&quot;,&quot;</span>name<span class="hljs-string">&quot;:&quot;</span><span class="hljs-variable">$RECORDNAME</span><span class="hljs-string">&quot;,&quot;</span>content<span class="hljs-string">&quot;:&quot;</span><span class="hljs-variable">$IP4NEW</span><span class="hljs-string">&quot;,&quot;</span>ttl<span class="hljs-string">&quot;:120,&quot;</span>proxied<span class="hljs-string">&quot;:false&#125;&quot;</span>]<br>        :<span class="hljs-built_in">set</span> IP4CUR <span class="hljs-variable">$IP4NEW</span><br>        :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: Host <span class="hljs-variable">$RECORDNAME</span> updated with IP <span class="hljs-variable">$IP4CUR</span>&quot;</span><br>    &#125;  <span class="hljs-keyword">else</span>=&#123;<br>        :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: Previous IP <span class="hljs-variable">$IP4NEW</span> not changed, quitting&quot;</span><br>    &#125;<br>&#125; <span class="hljs-keyword">else</span>=&#123;<br>    :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: <span class="hljs-variable">$WANIF</span> is not currently running, quitting&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>简单介绍下变量含义，星号内容自行替换：</p><ul><li>TOKEN：Cloudflare管理后台中自行创建的API Token，安全起见不要用Global API KEY。</li><li>ZONEID：对应Cloudflare域名管理“overview”页面右下能直接看到的 Zone ID值。</li><li>RECORDID：动态域名解析的ID值。注意，对于同一个域名，不同解析类型的ID值也不同，例如A记录和AAAA记录的ID值就不一样。可以在Cloudflare控制面板中手动创建一条解析记录，然后到Cloudfalre的Audit LOG中查看对应ID值。</li><li>RECORDNAME：具体动态域名。</li><li>WANIF：对应WAN的网口名称。routeros中一般默认为 <strong>pppoe-out1</strong>。</li></ul><h1 id="IPv6版本"><a href="#IPv6版本" class="headerlink" title="IPv6版本"></a>IPv6版本</h1><p>没有公网IPv4地址，但是有公网IPv6地址的网友可以使用这个脚本。一般而言，国内家宽可以从ISP获取到60长度前缀，记得在IPv6 Addreess List中给WAN接口分配地址，默认 <strong>::&#x2F;64</strong> 即可，Mikrotik Routeros会结合前缀自动计算并分配地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Cloudflare Dynamic DNS update script</span><br><span class="hljs-comment"># Required policy: read, write, test, policy</span><br><span class="hljs-comment"># Add this script to scheduler</span><br><span class="hljs-comment"># Install DigiCert root CA or disable check-certificate</span><br><span class="hljs-comment"># Configuration ---------------------------------------------------------------------</span><br><br>:<span class="hljs-built_in">local</span> TOKEN <span class="hljs-string">&quot;*********************************&quot;</span><br>:<span class="hljs-built_in">local</span> ZONEID <span class="hljs-string">&quot;********************************&quot;</span><br>:<span class="hljs-built_in">local</span> RECORD6ID <span class="hljs-string">&quot;*****************************&quot;</span><br>:<span class="hljs-built_in">local</span> RECORDNAME <span class="hljs-string">&quot;****************************&quot;</span><br>:<span class="hljs-built_in">local</span> WANIF <span class="hljs-string">&quot;*********************************&quot;</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------</span><br><br>:global IP6NEW<br>:global IP6CUR<br><br>:<span class="hljs-built_in">local</span> url6 <span class="hljs-string">&quot;https://api.cloudflare.com/client/v4/zones/<span class="hljs-variable">$ZONEID</span>/dns_records/<span class="hljs-variable">$RECORD6ID</span>/&quot;</span><br><br>:<span class="hljs-keyword">if</span> ([/interface get <span class="hljs-variable">$WANIF</span> value-name=running]) <span class="hljs-keyword">do</span>=&#123;<br><span class="hljs-comment"># Get the current public IP</span><br>    :<span class="hljs-built_in">local</span> currentIP [/ipv6/address/get [:pick [find global interface=<span class="hljs-variable">$WANIF</span>] 0 ] address ]<br>    :<span class="hljs-built_in">set</span> IP6NEW [:pick <span class="hljs-variable">$currentIP</span> 0 [:find <span class="hljs-variable">$currentIP</span> <span class="hljs-string">&quot;/&quot;</span>]];<br><span class="hljs-comment"># Check if IP has changed</span><br>    :<span class="hljs-keyword">if</span> (<span class="hljs-variable">$IP6NEW</span> != <span class="hljs-variable">$IP6CUR</span>) <span class="hljs-keyword">do</span>=&#123;<br>        :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: Public IPv6 address changed to <span class="hljs-variable">$IP6NEW</span>, updating&quot;</span><br>        :<span class="hljs-built_in">local</span> cfapi [/tool fetch http-method=put mode=https url=<span class="hljs-variable">$url6</span> check-certificate=no output=user as-value \<br>            http-header-field=<span class="hljs-string">&quot;Authorization: Bearer <span class="hljs-variable">$TOKEN</span>,Content-Type: application/json&quot;</span> \<br>            http-data=<span class="hljs-string">&quot;&#123;\&quot;type\&quot;:\&quot;AAAA\&quot;,\&quot;name\&quot;:\&quot;<span class="hljs-variable">$RECORDNAME</span>\&quot;,\&quot;content\&quot;:\&quot;<span class="hljs-variable">$IP6NEW</span>\&quot;,\&quot;ttl\&quot;:120,\&quot;proxied\&quot;:false&#125;&quot;</span>]<br>        :<span class="hljs-built_in">set</span> IP6CUR <span class="hljs-variable">$IP6NEW</span><br>        :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: Host <span class="hljs-variable">$RECORDNAME</span> updated with IP <span class="hljs-variable">$IP6CUR</span>&quot;</span><br>    &#125;  <span class="hljs-keyword">else</span>=&#123;<br>        :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: Previous IPv6 <span class="hljs-variable">$IP6NEW</span> not changed, quitting&quot;</span><br>    &#125;<br>&#125; <span class="hljs-keyword">else</span>=&#123;<br>    :<span class="hljs-built_in">log</span> info <span class="hljs-string">&quot;CF-DDNS: <span class="hljs-variable">$WANIF</span> is not currently running, quitting&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>上述脚本直接从本地获取公网地址，不像许多脚本那样<strong>fetch</strong>外部API查询，故可靠性、安全性更优越。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ROS</tag>
      
      <tag>cloudflare</tag>
      
      <tag>DDNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ST-LINK V2 刷 Gnuk 资料整理（施工中）</title>
    <link href="/2024/08/05/gnuk/"/>
    <url>/2024/08/05/gnuk/</url>
    
    <content type="html"><![CDATA[<p>最近看到几篇用ST-LINK V2 刷 Gnuk的文章很感兴趣。在实际动手之前，先搜罗整理一些资料：</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li><a href="https://blog.darkthread.net/blog/low-cost-diy-usb-security-key/">超省资安强化方案 - 比鸡排便宜的自制 USB 实体密钥</a></li><li><a href="https://blog.darkthread.net/blog/flash-gnuk-notes/">按钮版 Gnuk 实体密钥刻录笔记</a></li><li><a href="https://blog.dylanwu.space/2020/01/24/stm32-gnuk.html">ST-LINK V2 刷 Gnuk 拾遗</a></li><li><a href="https://techie-s.work/posts/2021/04/homemade-gnuk/">用 ST-Link 自制 GnuK</a></li><li><a href="https://www.cnblogs.com/tibrella/p/17816505.html">ST-Link v2 刷写 GNUK，年轻人的第一个 OpenPGP 智能卡！</a></li><li><a href="https://techie-s.work/posts/2021/05/homemade-gnuk-with-stdongle/">Homemade GnuK with ST-Dongle</a></li><li><a href="https://blog.indexyz.me/diy-gnuk-token/">DIY 一个 Gnuk Token</a></li><li><a href="https://kgame.tw/gnupg/stm32-gnuk/">ST-LINK V2 刷 Gnuk</a></li></ol><p>以下内容均梳理自上述资料。</p><h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><h2 id="ST-LINK-V2-MCU类型"><a href="#ST-LINK-V2-MCU类型" class="headerlink" title="ST-LINK V2 MCU类型"></a>ST-LINK V2 MCU类型</h2><p>MCU须为 <strong>STM32F103C8T6</strong> ，其具备128kb Flash。其他型号不能保障FLASH大小为128kb，如果不幸买到64kb版本就<strong>不能刷</strong>最新版Gnuk。至少需要购买两只ST-LINK V2，一只作为编程器，另一只作为刷Gnuk的对象。</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>ST-LINK V2外部接口基本一致，重点在于内部。内部主板必须引出<strong>DIO</strong>和<strong>CLK</strong>否则<strong>不能刷</strong>。</p><h2 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h2><p>电脑连接作为编程器的ST-LINK V2无需赘言，USB直连即可。两只ST-LINK V2需要连接四条线：</p><ul><li>SWDIO : 尾插连接主板对应触点</li><li>SWCLK : 尾插连接主板对应触点</li><li>GND : 尾插直连即可</li><li>3.3v : 尾插直连即可</li></ul><h2 id="确认开关"><a href="#确认开关" class="headerlink" title="确认开关"></a>确认开关</h2><p>将鼠标微动开关焊接在尾插CLK与3.3V之间即可。</p><h1 id="固件编译"><a href="#固件编译" class="headerlink" title="固件编译"></a>固件编译</h1><p>以下操作在 <strong>Ubuntu 24.04</strong> 中进行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install gcc-arm-none-eabi picolibc-arm-none-eabi<br>git <span class="hljs-built_in">clone</span> --recursive https://salsa.debian.org/gnuk-team/gnuk/gnuk.git gnuk<br><span class="hljs-built_in">cd</span> gnuk/src<br>curl -O https://techie-s.work/shares/gnuk/0001-add-pa5-as-switch-pin-for-st-dongle.patch<br>patch ../chopstx/contrib/ackbtn-stm32f103.c &lt; ./0001-add-pa5-as-switch-pin-for-st-dongle.patch<br>./configure --vidpid=234b:0000 --target=ST_DONGLE<br>make build/gnuk-vidpid.bin<br></code></pre></td></tr></table></figure><p>执行结束后，在build目录下得到 <strong>gnuk-vidpid.bin</strong> 文件，它便是待烧录的固件文件。 </p><pre><code class="hljs">./configure --vidpid=234b:0000 --target=ST_DONGLE 输出内容：Header file is: board-st-dongle.hConfigured for bare system (no-DFU)CERT.3 Data Object is NOT supportedLife cycle management is NOT supportedAcknowledge button is supportedKDF DO is required before key import/generation</code></pre><h1 id="固件烧录"><a href="#固件烧录" class="headerlink" title="固件烧录"></a>固件烧录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install openocd<br><span class="hljs-built_in">cd</span> ~/gnuk<br>vi openocd.cfg<br></code></pre></td></tr></table></figure><p>openocd.cfg内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cfg">telnet_port 4444<br>source [find interface/stlink-v2.cfg]<br>source [find target/stm32f1x.cfg]<br>set WORKAREASIZE 0x10000<br></code></pre></td></tr></table></figure><p>执行openocd，然后执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs telnet">stm32f1x unlock 0<br>reset halt<br>flash write_bank 0 ./src/build/gnuk-vidpid.bin 0<br>stm32f1x lock 0<br>reset halt<br></code></pre></td></tr></table></figure><h1 id="Gnuk卡使用"><a href="#Gnuk卡使用" class="headerlink" title="Gnuk卡使用"></a>Gnuk卡使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install scdaemon pcscd<br></code></pre></td></tr></table></figure><p>安装必要工具后参照教程使用。</p><h1 id="Gnuk重新写入"><a href="#Gnuk重新写入" class="headerlink" title="Gnuk重新写入"></a>Gnuk重新写入</h1><p>按照相同方式连线，并短接MCU 7 (NRST) 和 8  (VSSA) 针脚，然后进入openocd执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs telnet">reset halt<br>stm32f1x unlock 0<br>reset halt<br>stm32f1x mass_erase 0<br>flash write_bank 0 ./src/build/gnuk-vidpid.bin 0<br>stm32f1x lock 0<br>reset halt<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Gnuk</tag>
      
      <tag>ST-LINK V2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用dnsapi签发证书</title>
    <link href="/2024/08/02/dnsapi/"/>
    <url>/2024/08/02/dnsapi/</url>
    
    <content type="html"><![CDATA[<p>acme支持多种签发证书方式，之前使用的是手动创建TXT记录这种方式，过程稍显繁琐，可以使用dnsapi进行简化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> CF_Token=<span class="hljs-string">&quot;*******************************&quot;</span><br>./acme.sh --issue --dns dns_cf --server letsencrypt -d domain.com<br></code></pre></td></tr></table></figure><p>注意 <strong>CF_Token</strong> 会被acme.sh自动保存于 <strong>~&#x2F;.acme.sh&#x2F;account.conf</strong>，请妥善保管谨防泄漏。</p>]]></content>
    
    
    
    <tags>
      
      <tag>acme</tag>
      
      <tag>letsencrypt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openwrt旁路由防火墙配置</title>
    <link href="/2024/08/02/openwrtfw/"/>
    <url>/2024/08/02/openwrtfw/</url>
    
    <content type="html"><![CDATA[<p>我的主路由是一台运行Mikrotik Routeros 7.15 的工控小主机，i3-5010U + 4G 内存 + 8G MSATA SSD+ 32G SATA SSD配置。原本打算通过container运行 <strong>mosdns</strong>和<strong>Adguard home</strong>，但是routeros的container实在难用，所以后来这部分功能转移到了openwrt旁路由中。</p><p>运行openwrt的设备为一台J800小主机，单螃蟹网卡。在 <code>cgi-bin/luci/admin/network/firewall</code> 页面中，需要进行如下设置：</p><p><strong>常规设置</strong>部分：</p><ul><li>启用 SYN-flood 防御：关闭</li><li>丢弃无效数据包：关闭</li><li>启用FullCone-NAT：停用</li><li>入站数据：接受</li><li>出站数据：接受</li><li>转发：接受</li></ul><p><strong>区域</strong>设置里面同样把入站数据、出站数据和转发全部设置成接受，IP 动态伪装和MSS 钳制都关掉。如果不这样设置，在外面通过wireguard连接到主路由routeros后，会发现无法访问旁路由LUCI页面，也无法使用openwrt旁路由提供的DNS功能。</p><p>上述设置不难理解。旁路由不发生NAT，所以 <strong>IP 动态伪装</strong>（masquerade）和<strong>FullCone-NAT</strong>关掉。 <strong>MSS 钳制</strong>已由主路由routeros实现，不需要openwrt画蛇添足，所以关掉。至于 <strong>SYN-flood 防御</strong>、<strong>丢弃无效数据包</strong>同样是主路由（边界路由）才需要考虑，这里统统关掉。入站、出站、转发没有理由设置门槛，自然全部接受，至此旁路由防火墙就配置完毕了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>openwrt</tag>
      
      <tag>firewall</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用uci配置openwrt旁路由</title>
    <link href="/2024/08/01/uci/"/>
    <url>/2024/08/01/uci/</url>
    
    <content type="html"><![CDATA[<p>默认配置下，openwrt的LAN接口IP地址为192.168.1.1，并对外提供DHCP服务，显然该配置不适用于旁路由。这种情况下想连接到LUCI配置很不方便，还好可以使用uci轻松搞定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">uci <span class="hljs-built_in">set</span> dhcp.lan.ignore=<span class="hljs-string">&quot;1&quot;</span><br>uci commit dhcp<br>uci <span class="hljs-built_in">set</span> network.lan.proto=<span class="hljs-string">&quot;dhcp&quot;</span><br>uci commit network<br>service network restart<br></code></pre></td></tr></table></figure><p>在openwrt终端中执行上述命令即可。这些命令由两部分构成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">uci <span class="hljs-built_in">set</span> dhcp.lan.ignore=<span class="hljs-string">&quot;1&quot;</span><br>uci commit dhcp<br>service dnsmasq restart<br></code></pre></td></tr></table></figure><p>这一部分关闭了LAN接口的DHCP服务器，我们不希望同一网段中存在多个DHCP服务器。 <code>service dnsmasq restart</code> 顾名思义重启了dnsmasq服务，当然在 <code>service network restart</code> 存在的情况下可以省略，毕竟后者重启了整个网络，自然也包含dnsmasq。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">uci <span class="hljs-built_in">set</span> network.lan.proto=<span class="hljs-string">&quot;dhcp&quot;</span><br>uci commit network<br>service network restart<br></code></pre></td></tr></table></figure><p>这一部分将LAN接口的网络协议修改成为DHCP，即由主路由DHCP服务器分配。你当然可以手动分配，不过我更偏好这种方式。</p><p>如此一来，我们的openwrt就完成了初步设置，可以访问LUCI界面进行后续操作。</p>]]></content>
    
    
    
    <tags>
      
      <tag>openwrt</tag>
      
      <tag>uci</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生存确认</title>
    <link href="/2024/07/31/wsl2/"/>
    <url>/2024/07/31/wsl2/</url>
    
    <content type="html"><![CDATA[<p>N久没更新，抓住7月的尾巴出来冒个泡。。。hexo编译平台由R3300M迁移到了WSL2，Windows 11用了一阵子还挺好用。WSL2胜任编译openwrt之类任务，Hyper-V运行虚拟机丝滑流畅。系统本身对P106-100的调度也不错，封面图就是用Stable Diffusion本地跑出来的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>WSL2</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>emby部署ssl证书</title>
    <link href="/2024/03/22/emby/"/>
    <url>/2024/03/22/emby/</url>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>2022年双十一时候购买了绿联DX4600，打算替换掉运行接近十年的 HP ProLiant MicroServer Gen8 。但是绿联这个openwrt用起来真是一言难尽，体验远不及刷了黑裙的HP ProLiant MicroServer Gen8。本次emby配置在Gen8上进行。</p><h1 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h1><p>假设你有一个名为 <strong>domain.com</strong> 的顶级域名，并使用cloudflare解析。现在打算申请 <strong>nas.domain.com</strong> 的证书给群晖使用，那么可以这样操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --issue -d nas.domain.com --dns  --yes-I-know-dns-manual-mode-enough-go-ahead-please<br>acme.sh --renew -d nas.domain.com --yes-I-know-dns-manual-mode-enough-go-ahead-please<br></code></pre></td></tr></table></figure><p><strong>acme.sh</strong>请提前安装。证书签发过程中会提示创建一个TXT记录用于验证域名归属，按提示操作即可。结束后，得到的证书文件保存在 <code>~/.acme.sh/nas.domain.com_ecc</code> 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro ~]$ <span class="hljs-built_in">ls</span> -l ~/.acme.sh/nas.domain.com_ecc<br>total 40<br>drwxr-xr-x 2 marly marly 4096 Mar 21 15:59 backup<br>-rw-r--r-- 1 marly marly 2668 Mar 21 16:08 ca.cer<br>-rw-r--r-- 1 marly marly 4112 Mar 21 16:08 fullchain.cer<br>-rw-r--r-- 1 marly marly 1444 Mar 21 16:08 nas.domain.com.cer<br>-rw-r--r-- 1 marly marly  687 Mar 21 16:08 nas.domain.com.conf<br>-rw-r--r-- 1 marly marly  465 Mar 21 16:07 nas.domain.com.csr<br>-rw-r--r-- 1 marly marly  186 Mar 21 16:07 nas.domain.com.csr.conf<br>-rw------- 1 marly marly  227 Mar 21 16:06 nas.domain.com.key<br></code></pre></td></tr></table></figure><p>群晖实现https登录需要导入这三个文件：</p><pre><code class="hljs">nas.domain.com.key ，对应私钥，第一行；nas.domain.com.cer ，对应证书，第二行；ca.cer ， 对应中间证书，第三行。</code></pre><p>此三者缺一不可。之前我只导入了前两项，结果VLC播放视频总是提示证书错误。后来导入 <strong>ca.cer</strong> 解决了问题。</p><h1 id="为emby生成证书"><a href="#为emby生成证书" class="headerlink" title="为emby生成证书"></a>为emby生成证书</h1><p>emby默认用http协议通过8096端口访问，而且无法直接利用群晖系统中已经配置好的证书，需要生成pfx格式证书并在管理页面导入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> ~/.acme.sh/nas.domain.com_ecc<br>$ openssl pkcs12 -<span class="hljs-built_in">export</span> -out nas.domain.com.pfx -inkey nas.domain.com.key -<span class="hljs-keyword">in</span> nas.domain.com.cer <span class="hljs-comment">#证书密码可自行设置或不填，如果设置密码，emby中也要对应填写</span><br></code></pre></td></tr></table></figure><p>如此导入后重启emby套件，即可实现通过8920端口以https协议访问emby。</p>]]></content>
    
    
    
    <tags>
      
      <tag>synology</tag>
      
      <tag>emby</tag>
      
      <tag>let&#39;s encrypt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>manjaro arm运行wireguard作为跳板机</title>
    <link href="/2024/03/19/wireguard/"/>
    <url>/2024/03/19/wireguard/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>折腾对象还是Bestv 3300M这个机顶盒 。。。家里新办了移动千兆宽带，资费比先前的联通300M还要便宜一大截，实测网速可达到 940&#x2F;100 。可惜不提供公网IPv4地址，于是只能从IPv6上下功夫，就用wireguard + DDNS搞定吧。</p><h1 id="光猫改桥接"><a href="#光猫改桥接" class="headerlink" title="光猫改桥接"></a>光猫改桥接</h1><p>移动送的光猫是 <strong>ZXHN F7000MV3</strong> ，类型如下：</p><pre><code class="hljs">产品名称：10Gbit/s无源光网络用户端设备（XG-PON ONU）产品类型：中国移动智能家庭网关 类型十九产品型号：ZXHN F7000MV3默认终端配置地址：192.168.1.1电源规格：12V 1A生产日期：2024-02-291个光口，4个千兆LAN口，1个USB2.0接口，1个USB3.0接口</code></pre><p>光猫通过LOID自动下发配置，默认光猫拨号，可获得60长度的IPv6前缀。超级用户账号密码就是常见的CMCCAdmin和aDm8H%MdA2，注册设备后密码会被修改。尝试了 factorymode_crack ， 中兴telnet开启工具 等软件，均无法开启telnet。用U盘导出的配置文件也无法被ztecfg.exe解码。换一种思路，用普通用户账号进入后台记录连接信息，共3条：</p><pre><code class="hljs">1_TR069_R_VID_40112_INTERNET_R_VID_10733_OTHER_B_VID_4017</code></pre><p>自行为上网和机顶盒创建2条桥接方式连接，绑定好LAN口后填写LOID通过验证。验证后 <strong>TR069</strong> 会恢复并修改超密，不过关键的两条手动创建桥接没有被改动，至此光猫配置顺利完成，通过拨号可以获得60长度的前缀。</p><h1 id="路由器关闭防火墙"><a href="#路由器关闭防火墙" class="headerlink" title="路由器关闭防火墙"></a>路由器关闭防火墙</h1><p>拨号主路由是Linksys 8300，默认开启IPv6 SPI防火墙，记得关掉。MR8300作为WIFI5时代产物，WIFI测速只能勉强达到600M，不过好在家里大部分设备都采用有线接入，没必要破费升级到WIFI6了。</p><h1 id="manjaro-arm运行ddns"><a href="#manjaro-arm运行ddns" class="headerlink" title="manjaro arm运行ddns"></a>manjaro arm运行ddns</h1><p>采用 Newfuture DDNS更新AAAA记录，之前写过教程，不再赘述。</p><h1 id="manjaro-arm-配置-wireguard"><a href="#manjaro-arm-配置-wireguard" class="headerlink" title="manjaro arm 配置 wireguard"></a>manjaro arm 配置 wireguard</h1><h2 id="检查内核"><a href="#检查内核" class="headerlink" title="检查内核"></a>检查内核</h2><p>比较新的linux内核已经包含wireguard了，可使用modinfo确认：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro ~]$ modinfo wireguard<br>filename:       /lib/modules/6.4.3-1-MANJARO-ARM-ODROID/kernel/drivers/net/wireguard/wireguard.ko.gz<br><span class="hljs-built_in">alias</span>:          net-pf-16-proto-16-family-wireguard<br><span class="hljs-built_in">alias</span>:          rtnl-link-wireguard<br>version:        1.0.0<br>author:         Jason A. Donenfeld &lt;Jason@zx2c4.com&gt;<br>description:    WireGuard secure network tunnel<br>license:        GPL v2<br>srcversion:     C5E63ADC650EA5DDFE3643C<br>depends:        libcurve25519-generic,libchacha20poly1305<br>intree:         Y<br>name:           wireguard<br>vermagic:       6.4.3-1-MANJARO-ARM-ODROID SMP preempt mod_unload aarch64<br>[marly@manjaro ~]$<br></code></pre></td></tr></table></figure><p>由于我们的manjaro arm是跳板机，需要经由它访问局域网内其他设备，所以需要打开内核流量转发功能。首先检查流量转发是否已启用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@manjaro wireguard]# sysctl -a | grep forward<br>net.ipv4.conf.all.bc_forwarding = 0<br>net.ipv4.conf.all.forwarding = 0<br>net.ipv4.conf.all.mc_forwarding = 0<br>net.ipv4.conf.default.bc_forwarding = 0<br>net.ipv4.conf.default.forwarding = 0<br>net.ipv4.conf.default.mc_forwarding = 0<br>net.ipv4.conf.eth0.bc_forwarding = 0<br>net.ipv4.conf.eth0.forwarding = 0<br>net.ipv4.conf.eth0.mc_forwarding = 0<br>net.ipv4.conf.ip6tnl0.bc_forwarding = 0<br>net.ipv4.conf.ip6tnl0.forwarding = 0<br>net.ipv4.conf.ip6tnl0.mc_forwarding = 0<br>net.ipv4.conf.lo.bc_forwarding = 0<br>net.ipv4.conf.lo.forwarding = 0<br>net.ipv4.conf.lo.mc_forwarding = 0<br>net.ipv4.conf.wg0.bc_forwarding = 0<br>net.ipv4.conf.wg0.forwarding = 0<br>net.ipv4.conf.wg0.mc_forwarding = 0<br>net.ipv4.ip_forward = 0<br>net.ipv4.ip_forward_update_priority = 1<br>net.ipv4.ip_forward_use_pmtu = 0<br>net.ipv6.conf.all.forwarding = 0<br>net.ipv6.conf.all.mc_forwarding = 0<br>net.ipv6.conf.default.forwarding = 0<br>net.ipv6.conf.default.mc_forwarding = 0<br>net.ipv6.conf.eth0.forwarding = 0<br>net.ipv6.conf.eth0.mc_forwarding = 0<br>net.ipv6.conf.ip6tnl0.forwarding = 0<br>net.ipv6.conf.ip6tnl0.mc_forwarding = 0<br>net.ipv6.conf.lo.forwarding = 0<br>net.ipv6.conf.lo.mc_forwarding = 0<br>net.ipv6.conf.wg0.forwarding = 0<br>net.ipv6.conf.wg0.mc_forwarding = 0<br></code></pre></td></tr></table></figure><p>输出结果表明流量转发并未开启，需要修改sysctl配置文件。找下这个文件位置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro ~]$ systemd-analyze cat-config sysctl.d<br><span class="hljs-comment"># /usr/lib/sysctl.d/10-arch.conf</span><br><span class="hljs-comment"># Raise inotify resource limits</span><br>fs.inotify.max_user_instances = 1024<br>fs.inotify.max_user_watches = 524288<br><br><span class="hljs-comment"># /usr/lib/sysctl.d/50-coredump.conf</span><br><span class="hljs-comment">#  This file is part of systemd.</span><br></code></pre></td></tr></table></figure><p>看来修改 <strong>&#x2F;usr&#x2F;lib&#x2F;sysctl.d&#x2F;10-arch.conf</strong> 这个文件就行了。打开这个文件，添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">net.ipv4.ip_forward = 1<br>net.ipv4.conf.all.forwarding = 1<br>net.ipv6.conf.all.forwarding = 1<br></code></pre></td></tr></table></figure><p>然后执行 <code>sudo sysctl -p /usr/lib/sysctl.d/10-arch.conf</code> 即可生效。</p><h2 id="生成密钥和配置文件"><a href="#生成密钥和配置文件" class="headerlink" title="生成密钥和配置文件"></a>生成密钥和配置文件</h2><p>首先安装 <strong>wireguard-tools</strong>。这个软件包提供了密钥工具、systemd服务单元文件等，能极大降低配置难度：<code>sudo pacman -Sy wireguard-tools</code> 。然后生成密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wg genkey | <span class="hljs-built_in">tee</span> key.txt | wg pubkey &gt;&gt; key.txt<br></code></pre></td></tr></table></figure><p>key.txt中，第一行为私钥，第二行为公钥。</p><p>最后创建 <code>/etc/wireguard/wg0.conf</code> ，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs conf">[Interface]<br>ListenPort = 6666<br>PrivateKey = 私钥，对应刚才key.txt的第一行内容<br>Address = 192.168.9.1/24<br>PostUp = iptables -I FORWARD -i wg0 -j ACCEPT; iptables -I FORWARD -o wg0 -j ACCEPT; iptables -I INPUT -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE<br>PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -D INPUT -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE<br><br>[Peer]<br># xiaomi 12<br>PublicKey = peer的公钥<br>AllowedIPs = 192.168.9.2/32<br></code></pre></td></tr></table></figure><p>上述iptables中的eth0请结合实际修改，具体名称可通过 <code>ip a</code> 查看。</p><h2 id="启动-wireguard-服务"><a href="#启动-wireguard-服务" class="headerlink" title="启动 wireguard 服务"></a>启动 wireguard 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now wg-quick@wg0<br></code></pre></td></tr></table></figure><p>至此manjaro arm中的wireguard配置完成。peer连接到manjaro arm后，即可通过ipv4局域网地址访问各种服务。</p><h1 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h1><p>如果wireguard主机同时具备公网IPv4与IPv6地址，可以实现仅具备IPv4地址的peer访问IPv6站点，笔者已在routeros中配置成功。</p>]]></content>
    
    
    
    <tags>
      
      <tag>wireguard</tag>
      
      <tag>routeros</tag>
      
      <tag>manjaro arm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FirePro W5000显卡测评</title>
    <link href="/2024/01/22/w5000/"/>
    <url>/2024/01/22/w5000/</url>
    
    <content type="html"><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>上月在同城收了HP 288 Pro G2 Microtower PC 全套，主机 + 显示器 + 键鼠 + 鼠标垫 + 电源连接线，合计200元整。主机配置不高，i3-6100 + 4G DDR4 + 500G机械硬盘，到手升级了16G内存，额外加了块SSD。主机整体而言拓展性很差，满配置状态下可以安装两张SATA硬盘，一个SATA光驱，另外还提供了PCIE_X16（3.0），PCIE_X1，PCI插槽各一。电源额定功率只有180W且无6P&#x2F;8P接口。为了增强主机性能，我想给它配一张便宜的亮机卡，满足1080P分辨率下轻度游戏需求。</p><h1 id="显卡需求"><a href="#显卡需求" class="headerlink" title="显卡需求"></a>显卡需求</h1><p>无需独立供电，全高挡板，而且最好是单槽，接口尽量具备DP或HDMI，性能方面能够搭配i3-6100畅玩L4D2、Borderland 2、Torchlight 2等老游戏即可，价格不超过100元。</p><h1 id="显卡选择"><a href="#显卡选择" class="headerlink" title="显卡选择"></a>显卡选择</h1><p>低功耗显卡选择范围有限，百元以内类似RX6400、GTX1650、GTX1050Ti之类就别想了，甚至GT1030、GTX750Ti也买不到，只能从二手A卡里碰碰运气。机缘巧合下刷到一个对比FirePro W5000与初代XBOX ONE GPU的视频，二者规格几乎完全一致，而且实机测试FirePro W5000的表现显著优于XBOX ONE，这吸引了我的兴趣，遂99元从闲鱼贩子手中下单了一张拆机卡。</p><h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><img src="/2024/01/22/w5000/gpuz.PNG" class="" title="gpu-z 截图"><p>GPU-Z信息如图所示。我买的这张卡是DELL工作站拆机卡，与<a href="https://www.techpowerup.com/gpu-specs/firepro-w5000.c588">techpowerup网站介绍信息</a>一致，具备2个DP1.2接口和一个DVI接口。实测DP口在2560X1080分辨率下支持144Hz刷新率（测试所用显示器在该分辨率下最高支持200Hz刷新率）。结合VBE7来看，该显卡基本特征如下：</p><img src="/2024/01/22/w5000/VBE7-1.PNG" class="" title="VBE7 截图1"><img src="/2024/01/22/w5000/VBE7-2.PNG" class="" title="VBE7 截图2"><img src="/2024/01/22/w5000/VBE7-3.PNG" class="" title="VBE7 截图3"><img src="/2024/01/22/w5000/VBE7-4.PNG" class="" title="VBE7 截图4"><ol><li>GCN 1.0 架构；</li><li>支持UEFI启动；</li><li>支持DX12；</li><li>2G GDDR5显存；</li><li>256BIT高位宽；</li><li>默认63W功率，可在MSI Afterburner等软件中手动上调20%达到75W上限。</li></ol><h1 id="超频"><a href="#超频" class="headerlink" title="超频"></a>超频</h1><p>使用MSI Afterburner将核心及显存频率均设置为900MHz，功率上调18%，测试游戏表现正常，未出现掉驱动等异常情况，后续游戏测试在此条件下进行。900MHz以上应该还有一些空间，有网友超频到了1000MHz左右，不过我满足于900MHz，没有向上继续测试。</p><h1 id="视频补帧"><a href="#视频补帧" class="headerlink" title="视频补帧"></a>视频补帧</h1><p>实测配合 <strong>BlueskyFRC</strong> 和 <strong>Potplayer</strong> 能够顺利进行视频补帧。AMD驱动软件中无需进行任何设置，直接在 <strong>BlueskyFRC</strong> 中打开 <strong>AMD Fluid Motion Video</strong> 即可。具体设置可参照 <a href="https://zhuanlan.zhihu.com/p/443737935">5分钟提升视频帧率——AMD</a> 。</p><img src="/2024/01/22/w5000/DXVACHECKER.PNG" class="" title="解码器"><img src="/2024/01/22/w5000/BlueskyFRC.PNG" class="" title="补帧设置"><h1 id="游戏测试"><a href="#游戏测试" class="headerlink" title="游戏测试"></a>游戏测试</h1><h2 id="求生之路2"><a href="#求生之路2" class="headerlink" title="求生之路2"></a>求生之路2</h2><p>1080P下完美运行，全高画质FPS稳定在120以上。相同配置在2560X1080分辨率下也有100左右，显卡占用率也不高。</p><h2 id="无主之地2"><a href="#无主之地2" class="headerlink" title="无主之地2"></a>无主之地2</h2><p>1080P分辨率，除渲染距离（远）、各向异性（4X）外其余均最高设置。跑图FPS在60-70之间，战斗时有时会掉到50多，可以满意。这个表现和我当年用i5-4590 + GTX750Ti测试的结果极其接近。此时显卡占用率达到99%。</p><h2 id="火炬之光2"><a href="#火炬之光2" class="headerlink" title="火炬之光2"></a>火炬之光2</h2><p>1080P分辨率，画质全最高，跑图FPS在130左右，战斗时会掉到80左右。这游戏极度依赖CPU单核性能，对显卡需求很低，显卡占用率全程都很低。</p><h1 id="关于黑苹果支持"><a href="#关于黑苹果支持" class="headerlink" title="关于黑苹果支持"></a>关于黑苹果支持</h1><p>黑果小兵在其博文<a href="https://blog.daliansky.net/Mojave-Hardware-Support-List.html">Catalina&#x2F;Mojave硬件支持列表（持续更新中）</a>中宣称FirePro W5000在 <strong>Catalina&#x2F;Mojave</strong> 中免驱使用，不过结合 <a href="https://github.com/daliansky/daliansky.github.io/issues/129">https://github.com/daliansky/daliansky.github.io/issues/129</a> 等网友反馈，<strong>FirePro W5000</strong> 在Mojave下并非免驱，需要仿冒ID，至于Catalina连仿冒ID也行不通了，请网友注意甄别。我没有黑苹果环境，无法验证上述说法。</p><h1 id="官方驱动兼容性"><a href="#官方驱动兼容性" class="headerlink" title="官方驱动兼容性"></a>官方驱动兼容性</h1><p>GCN架构显卡驱动平台兼容性优秀，W5000作为专业卡还提供了对Windows Server的额外支持：</p><ul><li>Windows 10 - 32-Bit Edition</li><li>Windows 10 - 64-Bit Edition</li><li>Windows 8.1 - 32-Bit Edition</li><li>Windows 8.1 - 64-Bit Edition</li><li>Windows 8 - 32-Bit Edition</li><li>Windows 8 - 64-Bit Edition</li><li>Windows 7 - 32-Bit Edition</li><li>Windows 7 - 64-Bit Edition</li><li>Windows Vista - 32-Bit Edition</li><li>Windows Vista - 64-Bit Edition</li><li>Windows Server 2019 - 64-Bit Edition</li><li>Windows Server 2016 - 64-Bit Edition</li><li>Windows Server 2012 R2 - 64-Bit Edition</li><li>Windows Server 2012 - 64-Bit Edition</li><li>Windows Server 2008 R2 - 64-Bit Edition</li><li>Windows XP - Professional&#x2F;Home</li><li>Windows XP - 64-Bit Edition</li><li>Linux x86</li><li>Linux x86 64-Bit</li></ul><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>合格的亮机卡，不过若非电源受限P106-100之类矿渣性价比更高。</p>]]></content>
    
    
    
    <tags>
      
      <tag>显卡</tag>
      
      <tag>FirePro</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>两台实达小主机折腾记录</title>
    <link href="/2023/08/29/littlepc/"/>
    <url>/2023/08/29/littlepc/</url>
    
    <content type="html"><![CDATA[<p>最近为了试验FT-450的CAT功能，购买了两台自带原生9针COM口的小主机。一台为 STAR TC-9050X2M，另一台为 STAR TC-933X2Y。两台均采用了被动散热设计，配置了4个9针COM口，拿来连接控制电台十分顺利，这也从侧面证实了市面上售卖的RS-232转USB连接线有多么不靠谱。之前分别花费50多和80多块钱买的转接线，几经调试电台都没有动静。</p><p>调试好电台后，再来测试下两台小主机游戏性能。</p><h1 id="STAR-TC-9050X2M"><a href="#STAR-TC-9050X2M" class="headerlink" title="STAR TC-9050X2M"></a>STAR TC-9050X2M</h1><p>STAR TC-9050X2M有几种类型，我的这个具备4个9针COM口和一个VGA接口，另一种型号用DVI口替代了一个COM口。处理器为J1800，搭载千兆有线网卡、USB2.0接口和音频输入、音频输出接口。原机附带2G内存和8G固态硬盘。</p><p>限于硬盘容量，安装了出自@lopatkin之手的精简版32位windows 7系统。安装好系统、驱动、控制电台必备软件后还剩余大概3GB空间，放下2GB大小的暗黑2 1.14D绰绰有余。除了8PP模式下进入A5暴躁外皮场景时会卡顿1秒外，绝大部分场景都很流畅。</p><p>为了提高刷皮叔的体验，我找到了 <a href="https://www.svenswrapper.de/english/">GLIDE3-to-OpenGL-Wrapper</a> 这一神器。当年的暗黑2虽然可以运行在Direct3D模式下，但是它在3DFX公司开发的Glide下运行得更好。借助这个wrapper，暗黑2运行效率大幅提升。不仅刷皮叔时不再卡顿，画面观感也有改善。另外经测试， <strong>GLIDE3-to-OpenGL-Wrapper</strong> 与 <strong>PlugY</strong> 不冲突，在 PlugY 快捷方式属性target最后加入 <strong>-3dfx</strong> 即可使用。</p><p>经过长时间游戏，STAR TC-9050X2M 机身依然保持清凉，一台畅玩暗黑2 1.14D的被动散热零噪音小主机诞生了 XD</p><h1 id="STAR-TC-933X2Y"><a href="#STAR-TC-933X2Y" class="headerlink" title="STAR TC-933X2Y"></a>STAR TC-933X2Y</h1><p>这一台纯属冲动消费。当我在闲鱼看到全新全套，包括原包装、主机、键盘、鼠标、电源只要70块包邮时毫不犹豫下单了，卖家还送了条VGA线。这台主机接口丰富，具备DVI-I（24+5），VGA，千兆网卡、USB2、USB3、音频输入、音频输出接口，处理器是d2550。当我在查找显卡驱动发现它的集显是GMA3600时，我不觉眼前一黑————大概10年前，我还在使用ASUS EEE 1025CE 上网本在linux下兜兜转转，拿LaTeX水课程论文。彼时我就发现这个集显性能不可思议地孱弱，而且官方驱动只有meego和32位 windows7 版本。在linux下，凑合使用的gma500驱动仅提供了2D功能，3D加速根本不存在。快进到2023年，这些问题毫无改善。更糟糕的是，由于主流linux发行版不再提供i386版本，BIOS中EMT64被禁用的缺点也变得显眼。</p><p><img src="/img/2095901298.jpg" alt="莎拉公主最强"></p><p>首先测试游戏性能。淘宝6块钱包邮入手32G拆机m-sata硬盘，从老笔记本拆下一条4G内存，安装了32位win7精简版系统。经测试，暗黑2 1.14D运行卡顿。原本寄希望于 <strong>GLIDE3-to-OpenGL-Wrapper</strong> ，可惜它不与 GMA3600 兼容，无法使用。另有网友正在积极开发 <a href="https://github.com/bayaraa/d2gl">Diablo 2 LoD Glide&#x2F;DDraw to OpenGL Wrapper（D2GL）</a>，看了下显卡支持不低于 <strong>OpenGL 3.3</strong> ，无缘GMA3600。不过至少它可以流畅运行 <strong>大富翁4 - 超时空之旅</strong> 和 <strong>祖玛：豪华版</strong> ，玩玩DOSBOX也没问题。另外STAR TC-933X2Y 主板配备有一个SATA接口，拿来当做下载机或者放一些复古游戏应该也不错，这大概就是它的极限了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>d2550</tag>
      
      <tag>j1800</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HP ProLiant MicroServer Gen8再战群晖(2023)</title>
    <link href="/2023/04/25/freessl/"/>
    <url>/2023/04/25/freessl/</url>
    
    <content type="html"><![CDATA[<p>最近参照<a href="http://www.gebi1.com/thread-302165-1-1.html">编译了个Gen8黑群引导支持最新7.1.1-62962正式版-物理机安装</a>给尘封已久的 <em>HP ProLiant MicroServer Gen8</em> 安装了 <em>DSM 7.1.1-42962 Update 5</em> ，于是开始了新一轮折腾。</p><h1 id="申请使用freessl免费证书"><a href="#申请使用freessl免费证书" class="headerlink" title="申请使用freessl免费证书"></a>申请使用freessl免费证书</h1><p>freessl网址： <a href="https://freessl.org/">https://freessl.org/</a> ，注意后缀不是cn。群晖本身支持一键申请Let’s Encrypt证书，但是家宽被封了80端口，所以退而求其次，使用邮箱申请。成功后得到4个文件：</p><ul><li>domian.key : 私钥；</li><li>domain.pem : 证书。</li></ul><p>在群晖中导入上述两个文件即可。剩下的 intermediate.pem 和 root.pem 用不到。443端口自然也不通，于是我将8443端口映射到了5001端口。</p><h1 id="修改DownloadStation下载缓存"><a href="#修改DownloadStation下载缓存" class="headerlink" title="修改DownloadStation下载缓存"></a>修改DownloadStation下载缓存</h1><p>控制面板里打开SSH，连接后进行修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /var/packages/DownloadStation/etc/settings.conf<br><br>btsearch_server=<span class="hljs-string">&quot;https://update.synology.com/btsearchupdate/getServerInfo.php&quot;</span><br>download_bt_cache_limit=<span class="hljs-string">&quot;32&quot;</span><br>download_maxtasks_limit=<span class="hljs-string">&quot;80&quot;</span><br>download_enable_amule=<span class="hljs-built_in">yes</span><br>download_ul_rate=0<br>download_enable_bt_port_forwarding=<span class="hljs-built_in">yes</span><br>download_seeding_interval=1440<br>download_seeding_ratio=100<br>download_amule_ul_rate=0<br></code></pre></td></tr></table></figure><p>利用vi将 <strong>download_bt_cache_limit</strong> 调大。我的内存是16G，所以设置成了2048。<br>然后重启DownloadStation：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> synopkg stop DownloadStation<br><span class="hljs-built_in">sudo</span> synopkg start DownloadStation<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>synology</tag>
      
      <tag>freessl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>duplicati 试用</title>
    <link href="/2023/04/03/duplicati/"/>
    <url>/2023/04/03/duplicati/</url>
    
    <content type="html"><![CDATA[<p>本地数据会因磁盘故障损毁，组RAID的NAS会被一窝端，云盘可能会意外泄露隐私。权衡利弊，可以将重要数据存储在NAS阵列中，加密后同步到云盘。duplicati为此提供了一套解决方案。</p><h1 id="Manjaro-ARM本地运行"><a href="#Manjaro-ARM本地运行" class="headerlink" title="Manjaro ARM本地运行"></a>Manjaro ARM本地运行</h1><p>duplicati主要用于备份本机数据，所以在局域网内搭建一台备份服务器，然后给其他设备提供备份服务的想法不太完美。当然可以将远程目录挂载到本地，不过这不在讨论范围之内。<br>在Manjaro ARM上安装主要用于验证duplicati对aarch64的支持程度，顺便备份一些有用数据。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S duplicati-beta-bin<br></code></pre></td></tr></table></figure><p>duplicati位于AUR仓库中，使用yay安装，全部选项默认即可，结束后 <strong>Duplicati - 2.0.6.3_beta_2021-06-17</strong> （截至2023年4月3日最新版本）便已安装完成。</p><h2 id="允许局域网访问"><a href="#允许局域网访问" class="headerlink" title="允许局域网访问"></a>允许局域网访问</h2><p>duplicati默认只允许localhost通过8200端口访问，这带来2个问题。其一，localhost没有图形界面，自然也没有浏览器可用，无法通过页面配置。其二，8200端口与minidlna冲突，需要想办法修改。</p><p>参考<a href="https://duplicati.readthedocs.io/en/latest/02-installation/#installing-duplicati-on-linux">Installing Duplicati on Linux</a>一文，进行配置：</p><p>首先停止服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">disable</span> duplicati.service<br><span class="hljs-built_in">sudo</span> systemctl stop duplicati.service<br></code></pre></td></tr></table></figure><p>配置dpulicati环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/default/duplicati<br></code></pre></td></tr></table></figure><p>加入 <code>DAEMON_OPTS=&quot;--webservice-interface=any --webservice-port=8600 --portable-mode&quot;</code> 一行。</p><p>再修改systemd单元文件，使用上述变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /usr/lib/systemd/system/duplicati.service<br></code></pre></td></tr></table></figure><p>修改前：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro ~]$ <span class="hljs-built_in">cat</span> /usr/lib/systemd/system/duplicati.service<br>[Unit]<br>Description=Duplicati<br>After=network.target<br><br>[Service]<br>ExecStart=/usr/bin/mono /opt/duplicati/Duplicati.Server.exe --webservice-port=8200<br>Restart=on-abort<br>EnvironmentFile=-/etc/default/duplicati<br>User=duplicati<br>Group=duplicati<br><br>[Install]<br>WantedBy=default.target<br></code></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro ~]$ <span class="hljs-built_in">cat</span> /usr/lib/systemd/system/duplicati.service<br>[Unit]<br>Description=Duplicati<br>After=network.target<br><br>[Service]<br>ExecStart=/usr/bin/mono /opt/duplicati/Duplicati.Server.exe <span class="hljs-variable">$DAEMON_OPTS</span><br>Restart=on-abort<br>EnvironmentFile=-/etc/default/duplicati<br>User=duplicati<br>Group=duplicati<br><br>[Install]<br>WantedBy=default.target<br></code></pre></td></tr></table></figure><p>安装程序提供的单元文件虽然指定了环境文件路径，但是没有使用。改过来即可。另外注意duplicati服务以duplicati用户和组的身份执行，用于备份本地home目录会遇到权限问题，可以将上面的User和Group内容用自己的用户名和组替换。</p><p>最后启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> duplicati.service<br><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl start duplicati.service <br></code></pre></td></tr></table></figure><p>现在即可在局域网中通过 <strong>ip:8600</strong> 访问管理页面。</p><h1 id="在Docker中运行"><a href="#在Docker中运行" class="headerlink" title="在Docker中运行"></a>在Docker中运行</h1><p>duplicati的docker镜像由linuxserver维护，支持x86-64和arm64，参见<a href="https://hub.docker.com/r/linuxserver/duplicati">linuxserver&#x2F;duplicati</a>。</p><h1 id="其他选择"><a href="#其他选择" class="headerlink" title="其他选择"></a>其他选择</h1><p><a href="https://github.com/gilbertchen/duplicacy">duplicacy</a>号称是当下最先进最快的开源云备份工具，提供了linux arm64的二进制包，可以在Manjaro ARM中直接运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro tmp]$ <span class="hljs-built_in">cd</span> tmp<br>[marly@manjaro tmp]$ wget https://github.com/gilbertchen/duplicacy/releases/download/v3.1.0/duplicacy_linux_arm64_3.1.0<br>[marly@manjaro tmp]$ <span class="hljs-built_in">chmod</span> +x duplicacy_linux_arm64_3.1.0<br><br>[marly@manjaro tmp]$ ./duplicacy_linux_arm64_3.1.0 -h<br>NAME:<br>   duplicacy - A new generation cloud backup tool based on lock-free deduplication<br><br>USAGE:<br>   duplicacy [global options] <span class="hljs-built_in">command</span> [<span class="hljs-built_in">command</span> options] [arguments...]<br><br>VERSION:<br>   3.1.0 (27FF3E)<br><br>COMMANDS:<br>   init         Initialize the storage <span class="hljs-keyword">if</span> necessary and the current directory as the repository<br>   backup       Save a snapshot of the repository to the storage<br>   restore      Restore the repository to a previously saved snapshot<br>   list         List snapshots<br>   check        Check the integrity of snapshots<br>   <span class="hljs-built_in">cat</span>          Print to stdout the specified file, or the snapshot content <span class="hljs-keyword">if</span> no file is specified<br>   diff         Compare two snapshots or two revisions of a file<br>   <span class="hljs-built_in">history</span>      Show the <span class="hljs-built_in">history</span> of a file<br>   prune        Prune snapshots by revision, tag, or retention policy<br>   password     Change the storage password<br>   add          Add an additional storage to be used <span class="hljs-keyword">for</span> the existing repository<br>   <span class="hljs-built_in">set</span>          Change the options <span class="hljs-keyword">for</span> the default or specified storage<br>   copy         Copy snapshots between compatible storages<br>   info         Show the information about the specified storage<br>   benchmark    Run a <span class="hljs-built_in">set</span> of benchmarks to <span class="hljs-built_in">test</span> download and upload speeds<br>   <span class="hljs-built_in">help</span>, h      Shows a list of commands or <span class="hljs-built_in">help</span> <span class="hljs-keyword">for</span> one <span class="hljs-built_in">command</span><br><br>GLOBAL OPTIONS:<br>   -verbose, -v                 show more detailed information<br>   -debug, -d                   show even more detailed information, useful <span class="hljs-keyword">for</span> debugging<br>   -<span class="hljs-built_in">log</span>                         <span class="hljs-built_in">enable</span> log-style output<br>   -stack                       <span class="hljs-built_in">print</span> the stack trace when an error occurs<br>   -no-script                   <span class="hljs-keyword">do</span> not run script before or after <span class="hljs-built_in">command</span> execution<br>   -background                  <span class="hljs-built_in">read</span> passwords, tokens, or keys only from keychain/keyring or <span class="hljs-built_in">env</span><br>   -profile &lt;address:port&gt;      <span class="hljs-built_in">enable</span> the profiling tool and listen on the specified address:port<br>   -comment                     add a comment to identify the process<br>   -suppress, -s &lt;<span class="hljs-built_in">id</span>&gt; [+]       suppress logs with the specified <span class="hljs-built_in">id</span><br>   -print-memory-usage          <span class="hljs-built_in">print</span> memory usage every second<br>   -<span class="hljs-built_in">help</span>, -h                    show <span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><p>它支持通过本地磁盘、SFTP、WebDav、Dropbox、Google Drive、Microsoft OneDrive等方式进行数据备份，结合安装简单与性能优势，看起来比duplicati更好用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro ARM</tag>
      
      <tag>duplicati</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM安装运行alist并通过webdav挂载到本地目录</title>
    <link href="/2023/03/27/alist/"/>
    <url>/2023/03/27/alist/</url>
    
    <content type="html"><![CDATA[<p>最近解决了Manjaro ARM在R3300-M上频繁死机的问题，经查阅系统日志，基本可以推定是8189es内核模块的问题，禁用后再未死机。于是R3300-M又可以拿来跑一些服务了（这个盒子不会用到2030年吧 … ）</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>alist作为网盘聚合工具相当好用，特别是把别人分享的文件挂载到本地实现资源整合。利用官方脚本安装十分简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL <span class="hljs-string">&quot;https://alist.nn.ci/v2.sh&quot;</span> | bash -s install<br></code></pre></td></tr></table></figure><p>结束后终端界面会输出页面地址、账号信息等内容，浏览器中打开管理页面进行设置即可。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>使用浏览器即可实现阅读电子书、播放视频等功能。值得一提，alist通过302重定向使客户端获取到文件的真实地址，所以文件传输流量不经过alist服务器。<br>alist还支持webdav，在PotPlayer、RaiDrive、nplayer、Kodi中可以方便挂载，Windows系统本身也支持通过webdav将网盘挂载成为本地硬盘。不过在Manjaro ARM中，应该如何操作呢？</p><h1 id="Manjaro-ARM-挂载webdav"><a href="#Manjaro-ARM-挂载webdav" class="headerlink" title="Manjaro ARM 挂载webdav"></a>Manjaro ARM 挂载webdav</h1><p>参考<a href="https://wiki.archlinux.org/title/Davfs2">archlinux wiki</a>，该功能由davfs2软件包提供，位于AUR中。通过yay安装即可，安装选项全为默认：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S davfs2<br></code></pre></td></tr></table></figure><p>完成后进行挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[marly@manjaro alist]$ <span class="hljs-built_in">sudo</span> mount -t davfs http://127.0.0.1:5244/dav /opt/alist/mnt<br>Please enter the username to authenticate with server<br>http://127.0.0.1:5244/dav or hit enter <span class="hljs-keyword">for</span> none.<br>  Username: admin<br>Please enter the password to authenticate user admin with server<br>http://127.0.0.1:5244/dav or hit enter <span class="hljs-keyword">for</span> none.<br>  Password:<br></code></pre></td></tr></table></figure><p><strong>&#x2F;opt&#x2F;alist&#x2F;mnt</strong> 目录是我自己建立的，用于本地挂载。命令执行后会提示输入用户名密码，确认后挂载成功。<br>每次开机手动挂载比较麻烦，可以通过 <strong>Systemd</strong> 自动化。</p><p>首先修改 <strong>davfs2</strong> 配置文件添加webdav登录网址、用户名以及密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/davfs2/secrets<br></code></pre></td></tr></table></figure><p>加入 <strong><a href="http://127.0.0.1:5244/dav">http://127.0.0.1:5244/dav</a> admin 123456</strong> 一行。登录地址、用户名、密码请自行替换。</p><p>下一步来创建Systemd单元文件。参考<a href="https://sleeplessbeastie.eu/2017/09/25/how-to-mount-webdav-share-using-systemd/">How to mount WebDAV share using systemd</a>一文，创建以下2个unit文件。 <strong>注意，unit文件命名必须遵从挂载目录名称，例如，我想挂载到&#x2F;opt&#x2F;alist&#x2F;mnt目录下，那么两个unit文件命名就必须为opt-alist-mnt.mount和opt-alist-mnt.automount</strong> ，如果不遵从该原则，启动服务时就会提示 <strong>Where&#x3D; setting doesn’t match unit name. Refusing.</strong> 错误。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># /etc/systemd/system/opt-alist-mnt.mount</span><br>[Unit]<br>Description=Mount alist webdav share<br>After=network-online.target<br>Wants=network-online.target<br><br>[Mount]<br>What=http://127.0.0.1:5244/dav/<br>Where=/opt/alist/mnt<br>Options=noauto,user,uid=marly,gid=marly<br>Type=davfs<br>TimeoutSec=60<br><br>[Install]<br>WantedBy=remote-fs.target<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># /etc/systemd/system/opt-alist-mnt.automount</span><br>[Unit]<br>Description=Mount alist webdav share<br>After=network-online.target<br>Wants=network-online.target<br><br>[Automount]<br>Where=/opt/alist/mnt<br>TimeoutIdleSec=300<br><br>[Install]<br>WantedBy=remote-fs.target<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> opt-alist-mnt.mount<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> opt-alist-mnt.automount<br><span class="hljs-built_in">sudo</span> systemctl start opt-alist-mnt.automount<br></code></pre></td></tr></table></figure><p>至此alist共享就通过webdav挂载到了本地目录，可以正常访问。</p><h1 id="密码找回"><a href="#密码找回" class="headerlink" title="密码找回"></a>密码找回</h1><p>忘记密码是常有的事。进入一键脚本默认安装目录执行命令查看密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/alist/<br><span class="hljs-built_in">sudo</span> ./alist admin<br></code></pre></td></tr></table></figure><p>执行后admin的密码就在终端中打印出来啦！</p><h1 id="与DLNA的结合"><a href="#与DLNA的结合" class="headerlink" title="与DLNA的结合"></a>与DLNA的结合</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S minidlna <span class="hljs-comment">#安装</span><br></code></pre></td></tr></table></figure><p>然后参照 <a href="https://wiki.archlinux.org/title/ReadyMedia">ReadyMedia</a> 对 <strong>&#x2F;etc&#x2F;minidlna.conf</strong> 进行修改，按照音乐，视频，图片等分类进行共享。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">media_dir=A,/opt/alist/mnt/alist/xiaoya/音乐<br>media_dir=PV,/opt/alist/mnt/xiaoya/资料/素材<br>media_dir=V,/opt/alist/mnt/alist/xiaoya/动漫/姬路白雪<br></code></pre></td></tr></table></figure><p>最后重启服务即大功告成： <code>sudo systemctl restart minidlna.service</code> 。前文已提到，alist的WebDAV策略为302重定向到真实链接，所以理论上播放速度并不受R3300-M的百兆网口限制。但是通过davfs2挂载后重定向能否生效还有待考察，晚些时候拿小米电视播放器试试效果。</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>使用小米电视自带的视频播放器测试，列出目录正常，速度也很快，但是看不到文件。后来检查配置文件，发现提示媒体路径不存在。将</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">media_dir=A,/opt/alist/mnt/alist/xiaoya/音乐<br>media_dir=PV,/opt/alist/mnt/xiaoya/资料/素材<br>media_dir=V,/opt/alist/mnt/alist/xiaoya/动漫/姬路白雪<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">media_dir=/opt/alist/mnt/alist/xiaoya/<br></code></pre></td></tr></table></figure><p>后重启服务，未再报错，晚些时候再测试一次。另外我发现了一款支持webdav的安卓平台视频播放器  <a href="https://github.com/nova-video-player/aos-AVP">NOVA: opeN sOurce Video plAyer</a> 。目前作者已在测试版中加入了webdav支持，（<a href="https://github.com/nova-video-player/aos-AVP/releases">点我进入下载页面</a>） ，正式版估计也快更新了。播放器界面适配了手机、平板和电视，支持音频直通，功能丰富无广告，而且支持中文。手机上测试连接webdav正常，速度也很快，电影刮削效果很满意。可惜动漫刮削效果不理想，希望未来予以改进。</p><h1 id="测试后续更新"><a href="#测试后续更新" class="headerlink" title="测试后续更新"></a>测试后续更新</h1><p>使用VLC、小米电视播放器测试， <strong>alist - webdav - davfs2 - minidlna</strong> 方法行不通。VLC能够浏览到一部分目录，但是所有目录内容为空，与小米电视播放器测试结果一致。</p>]]></content>
    
    
    
    <tags>
      
      <tag>alist</tag>
      
      <tag>Manjaro ARM</tag>
      
      <tag>webdav</tag>
      
      <tag>dlna</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华为GT2 Pro ECG写入NFC门禁卡记录</title>
    <link href="/2023/02/21/huaweigtnfc/"/>
    <url>/2023/02/21/huaweigtnfc/</url>
    
    <content type="html"><![CDATA[<h1 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h1><ol><li>Huawei Watch GT 2 Pro ECG，准备写入NFC数据的对象；</li><li>vivo iQOO Neo 7，原门禁卡信息储存在此手机中，计划转移到手表上；</li><li>小米10手机，用来模拟加密NFC卡的卡号，供手表模拟出卡号一致的卡片；</li><li>Proxmark3设备一台，购于苏州龙达科技淘宝店。</li></ol><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><ol><li>Proxmark3软件，由店铺提供。店铺定制的软件主要对常用命令进行了封装，用起来比较便利，缺点绑定电脑；</li><li>华为运动健康app，安装于vivo iQOO Neo 7。</li></ol><h1 id="破解原NFC卡片"><a href="#破解原NFC卡片" class="headerlink" title="破解原NFC卡片"></a>破解原NFC卡片</h1><ol><li>vivo iQOO Neo 7中打开关机刷卡功能，并选中欲破解的NFC卡片；</li><li>Neo 7关机；</li><li>Neo 7放在Proxmark3设备感应区，进行解析。快速解析后还有2个扇区处于加密状态，单独对这两个扇区进行暴力破解，用i3-8100配置的电脑破解约耗时30分钟。破解结束后点击 <strong>读S50</strong> 然后保存明文数据备用。</li></ol><h1 id="手表写卡"><a href="#手表写卡" class="headerlink" title="手表写卡"></a>手表写卡</h1><ol><li>Neo 7开机，在华为健康app中选择模拟门禁卡。用小米10手机模拟vivo iQOO Neo 7门禁卡的卡号，然后用手表对小米10进行模拟。注意不要给手表下发空白卡，否则卡号改不过来；</li><li>手表放在Proxmark3感应区，选择 <strong>S50写卡</strong> ，首次写入后中间8个扇区数据提示写入失败，使用 <strong>S50密写</strong> 功能再写一次就成功了。个别内容全为0的扇区如果提示写入失败也无妨，NFC卡片默认扇区数据本来就是用0充填的，可以读取手表数据核实。</li></ol><h1 id="试验"><a href="#试验" class="headerlink" title="试验"></a>试验</h1><p>用手表测试小区大门、单元楼门、电梯成功。注意 <strong>手表测试成功后一定要第一时间删掉手机中的卡片</strong> ，现在电梯梯控普遍使用了滚动码，被发现复制卡后会即时拉黑。</p><h1 id="关于在手表上使用百度地图和高德地图"><a href="#关于在手表上使用百度地图和高德地图" class="headerlink" title="关于在手表上使用百度地图和高德地图"></a>关于在手表上使用百度地图和高德地图</h1><p>手机客户端必须从华为应用商店下载，否则无法连接手表使用。</p><h1 id="关于GPS定位速度、精度"><a href="#关于GPS定位速度、精度" class="headerlink" title="关于GPS定位速度、精度"></a>关于GPS定位速度、精度</h1><p>通过蓝牙连接手机时，手表默认使用手机定位。独立定位一般不超过30秒，精度不及手机，会有些许漂移。</p><h1 id="下步计划"><a href="#下步计划" class="headerlink" title="下步计划"></a>下步计划</h1><p>分析数据对电梯卡延期，给物业减轻工作负担。</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>成功实现电梯卡延期，直接一步到位续到了2099年1月1日 。。。 方法其实很简单，用客服提供的软件对dump文件进行数据分析，可知梯控采用了 <strong>大华1系统</strong> ，日期对应位置为10区1块6-8，数据为 <strong>17071F</strong> 。这个值没有做校验，直接修改即可。需要解决的第二个问题是日期转换，如何将 <strong>2099年1月1日</strong> 转换为电梯能识别的6位编码呢？ 在软件中利用日期反查功能查询  <strong>17071F</strong> ，软件会以各种常见算法进行推算，得到了 <strong>2031年7月23日</strong> 和 <strong>2023年7月31日</strong> 两个有效日期，很显然 <strong>2023年7月31日</strong> 对应正确算法。利用这个算法对 <strong>2099年1月1日</strong> 进行转换，得到 <strong>630101</strong> ，写卡后顺利完成测试。唯一的问题是，我活不到2099年了 😭😭😭</p>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Manjaro ARM</tag>
      
      <tag>dhcpcd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro设置静态IP</title>
    <link href="/2023/02/16/manjaro-staticip/"/>
    <url>/2023/02/16/manjaro-staticip/</url>
    
    <content type="html"><![CDATA[<p>R3300-M的IP地址变来变去比较烦人，于是给它设置一下静态IP。由于没有使用NetworkManager，我们用dhcpcd来实现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/dhcpcd.conf<br></code></pre></td></tr></table></figure><p>在文件末尾添加如下内容，根据自身实际修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs conf">interface eth0<br>static ip_address=10.0.0.100/24<br>static routers=10.0.0.1<br>static domain_name_servers=75.75.75.75 75.75.76.76 2001:558:feed::1 2001:558:feed::2<br><br>interface wlan0<br>static ip_address=10.0.0.99/24<br>static routers=10.0.0.1<br>static domain_name_servers=75.75.75.75 75.75.76.76 2001:558:feed::1 2001:558:feed::2<br></code></pre></td></tr></table></figure><p>DNS服务器根据自身喜好填写，可以参考 <code>/etc/resolv.conf</code> 内容。保存后执行 sudo systemctl restart dhcpcd.service&#96; 重启服务即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Manjaro ARM</tag>
      
      <tag>dhcpcd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro使用密钥登录SSH</title>
    <link href="/2023/02/16/manjaro-ssh/"/>
    <url>/2023/02/16/manjaro-ssh/</url>
    
    <content type="html"><![CDATA[<p>为了方便在外面连接家里的Manjaro ARM小机，我打算把22端口转发出去，于是安全性有必要加强，使用密钥登录取代弱口令。</p><h1 id="生产密钥"><a href="#生产密钥" class="headerlink" title="生产密钥"></a>生产密钥</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa<br>Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/home/marly/.ssh/id_rsa):<br>Created directory <span class="hljs-string">&#x27;/home/marly/.ssh&#x27;</span>.<br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved <span class="hljs-keyword">in</span> /home/marly/tmp/id_rsa<br>Your public key has been saved <span class="hljs-keyword">in</span> /home/marly/tmp/id_rsa.pub<br>The key fingerprint is:<br>SHA256:FNPW7n5ub8l5PKn0/DZXQ7yK0ZqJyZJ9pLVFL6l6A2I marly@manjaro<br>The key<span class="hljs-string">&#x27;s randomart image is:</span><br><span class="hljs-string">+---[RSA 3072]----+</span><br><span class="hljs-string">|        o. .     |</span><br><span class="hljs-string">|         oo .    |</span><br><span class="hljs-string">|        .. .  .  |</span><br><span class="hljs-string">|       .    .. o |</span><br><span class="hljs-string">|        S  .o + .|</span><br><span class="hljs-string">|       E . +.= +.|</span><br><span class="hljs-string">|      . = B.X.+.*|</span><br><span class="hljs-string">|       o * @o.=B*|</span><br><span class="hljs-string">|        ..+ .=o*O|</span><br><span class="hljs-string">+----[SHA256]-----+</span><br><span class="hljs-string">$ ls ~/.ssh</span><br><span class="hljs-string">id_rsa  id_rsa.pub</span><br><span class="hljs-string">$ cat ~/.ssh/id_rsa.pub&gt;&gt;authorized_key</span><br></code></pre></td></tr></table></figure><p>公钥放在服务器上，私钥存放在本地用于登录，不要在服务器上存放。<br>另外权限需要格外注意，如果配置不当会产生许多问题，建议按如下配置（id_rsa不建议存储在服务器上）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">chmod</span> 700 ~/.ssh<br>$ <span class="hljs-built_in">chmod</span> 600 ~/.ssh/id_rsa<br>$ <span class="hljs-built_in">chmod</span> 600 ~/.ssh/id_rsa.pub<br>$ <span class="hljs-built_in">chmod</span> 600 ~/.ssh/authroized_keys<br></code></pre></td></tr></table></figure><h1 id="修改ssh-config"><a href="#修改ssh-config" class="headerlink" title="修改ssh_config"></a>修改ssh_config</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>主要确认这两行内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs config">AuthorizedKeysFile .ssh/authorized_keys<br>PasswordAuthentication no<br></code></pre></td></tr></table></figure><p>最后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> systemctl restart sshd.service<br></code></pre></td></tr></table></figure><p>重启服务就完事了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Manjaro ARM</tag>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NFC标签写入NDEF数据探究</title>
    <link href="/2023/02/09/nfctag/"/>
    <url>/2023/02/09/nfctag/</url>
    
    <content type="html"><![CDATA[<p>最近看到有人将网易云歌曲链接写入NFC标签，实现手机触碰播放音乐的功能，于是自己也动手试了试，基本达到了预期效果。</p><h1 id="标签选择"><a href="#标签选择" class="headerlink" title="标签选择"></a>标签选择</h1><p>常用的NFC标签主要有两类。一类是 <strong>NTAG21X</strong> ，包括 <strong>NTAG213</strong>， <strong>NTAG215</strong> 和 <strong>NTAG216</strong>，可用容量分别为144，504和888字节，技术规格参考 <a href="https://www.nxp.com/docs/zh/data-sheet/NTAG213_215_216.pdf">NTAG213&#x2F;215&#x2F;216</a>。 另一类是 <strong>MIFARE Classic 1K</strong>， 多用于门禁卡，卡片总容量1k，技术规格参考<a href="https://www.nxp.com/docs/zh/data-sheet/MF1S50YYX_V1.pdf">MF1S50YYX_V1</a>。对于这两类标签，主要从以下方面进行比较。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>这两类标签在功能上是否通用？从本人试验结果来看，两类标签提供了等价功能，在用nfc tools写入网易音乐连接、执行nfc task等方面没有展示出区别。不过 <strong>MIFARE Classic 1K</strong> 还可以用来制作门禁卡。</p><h2 id="容量"><a href="#容量" class="headerlink" title="容量"></a>容量</h2><p><strong>NTAG21X</strong> 和 <strong>MIFARE Classic 1K</strong> 的存储结构并不相同。<strong>NTAG21X</strong>按照页面组织，每页4字节。 <strong>MIFARE Classic 1K</strong> 按扇区和块组织，不过我们不需要关注这些底层实现。<strong>NTAG21X</strong>的容量已经十分明确，<strong>MIFARE Classic 1K</strong> 实际可用容量又有多少呢？<br>参考<a href="https://stackoverflow.com/questions/26343357/mifare-card-memory-space">Mifare card memory space?</a>提供了解答。<strong>MIFARE Classic 1K</strong> 卡片总容量1k，去掉UID、厂商信息、Key、访问位等占用，存储 <strong>NDEF</strong> 信息最大容量716字节，再减去header、length等占用位，实际可用容量710字节，居于<strong>NTAG215</strong> 和 <strong>NTAG216</strong> 之间。</p><h2 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h2><p>在PDD随机搜了几家店，每百张价格如下：</p><ul><li>NTAG213 ： 45.5元；</li><li>NTAG215 ： 83元；</li><li>NTAG216 ： 260元；</li><li>MIFARE Classic 1K ： 48.25元！</li></ul><p>三番比较下来，自然是便宜大碗的<strong>MIFARE Classic 1K</strong>中标，PDD搜索 <strong>M1 标签</strong>即可。</p><h1 id="将网易云音乐链接写入标签实操"><a href="#将网易云音乐链接写入标签实操" class="headerlink" title="将网易云音乐链接写入标签实操"></a>将网易云音乐链接写入标签实操</h1><p>参考了这篇酷安教程： <a href="https://www.coolapk.com/feed/41272230">NFC音乐相册（安卓版）制作工序</a>，作者使用的是 <strong>NTAG216</strong>，实测使用 <strong>MIFARE Classic 1K</strong> 在过程上没有不同，结果也一致。</p><h1 id="关于手机写卡的避坑提示"><a href="#关于手机写卡的避坑提示" class="headerlink" title="关于手机写卡的避坑提示"></a>关于手机写卡的避坑提示</h1><p>我最初使用 <strong>vivo iQOO Neo7</strong> 写卡，但是总是提示写入失败，而且读卡结果显示容量为零，换用小米11写卡成功。经过分析，<strong>vivo iQOO Neo7</strong> 的NFC读写逻辑有问题，面对新卡时认为卡片容量为零，导致写入失败。经过小米11写过1次后的卡片，用 <strong>vivo iQOO Neo7</strong> 能够正常识别容量并覆盖写入，可以支持上述观点。关于vivo手机的这一bug已反馈给官方，能否修复就不好说了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>NFC</tag>
      
      <tag>NDEF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用manjaro-arm-tools定制Manjaro ARM镜像</title>
    <link href="/2023/02/06/manjaro-arm-tools/"/>
    <url>/2023/02/06/manjaro-arm-tools/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S manjaro-arm-tools<br></code></pre></td></tr></table></figure><h1 id="下载配置文件"><a href="#下载配置文件" class="headerlink" title="下载配置文件"></a>下载配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> getarmprofiles -f<br></code></pre></td></tr></table></figure><h1 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/share/manjaro-arm-tools/profiles/arm-profiles/devices/<br></code></pre></td></tr></table></figure><p>随便复制一个然后修改就可以了。我创建的r3300m内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs config">## Maintained by Spikerguy ##<br><br># Kernel and bootloader stuff<br>linux<br>uboot-vim2<br>plymouth<br>plymouth-theme-manjaro<br><br># Video driver<br><br># Other device specific packages<br>crda<br>fbset<br>kvim2-firmware<br>generic-post-install<br>vim2-post-install<br></code></pre></td></tr></table></figure><p>基本上就是vim2的精简，然后用主线内核替换了aml内核。自己的配置文件注意备份，每次执行 <code>sudo getarmprofiles -f</code> 都会从服务器重新同步配置并清除本地修改内容，切记切记。</p><h1 id="生成镜像"><a href="#生成镜像" class="headerlink" title="生成镜像"></a>生成镜像</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildarmimg -d r3300m -e minimal -v 23.02 -b stable<br>````<br><br>建议新建一个screen session进行以防SSH连接意外中断前功尽弃，同时解决好网络问题否则rootfs和软件包下不动。输出信息节选如下：<br><br>```bash<br>==&gt; WARNING: consolefont: no font found <span class="hljs-keyword">in</span> configuration<br>  -&gt; Running build hook: [block]<br>  -&gt; Running build hook: [filesystems]<br>  -&gt; Running build hook: [fsck]<br>==&gt; Generating module dependencies<br>==&gt; Creating gzip-compressed initcpio image: /boot/initramfs-linux.img<br>==&gt; Image generation successful<br>(15/16) Reloading system bus configuration...<br>  Skipped: Current root is not booted.<br>(16/16) Updating fontconfig cache...<br>  -&gt; Generating the list of mirrors...<br>  -&gt; Enabling services...<br>Enabling service systemd-networkd.service...<br>Enabling service dhcpcd.service...<br>Enabling service sshd.service...<br>Enabling service iwd.service...<br>Enabling service zswap-arm.service...<br>Enabling service systemd-oomd.service...<br>Enabling service irqbalance.service...<br>Service bootsplash-hide-when-booted.service not found <span class="hljs-keyword">in</span> rootfs, skipping<br>Service bootsplash-show-on-shutdown.service not found <span class="hljs-keyword">in</span> rootfs, skipping<br>  -&gt; Applying overlays <span class="hljs-keyword">for</span> minimal edition...<br>  -&gt; Setting up system settings...<br>Enabling SSH login <span class="hljs-keyword">for</span> root user <span class="hljs-keyword">for</span> headless setup...<br>Enabling autologin <span class="hljs-keyword">for</span> first setup...<br>Correcting permissions from overlay...<br><br>==&gt; Creating package list /var/cache/manjaro-arm-tools/img/Manjaro-ARM-minimal-r3300m-23.02-pkgs.txt...<br>  -&gt; Removing unwanted files from rootfs...<br>  -&gt; Pruning and unmounting package cache...<br>==&gt; no candidate packages found <span class="hljs-keyword">for</span> pruning<br><br>==&gt; Creating minimal edition rootfs image <span class="hljs-keyword">for</span> r3300m completed successfully<br><br>==&gt; Creating minimal edition image <span class="hljs-keyword">for</span> r3300m...<br>  -&gt; Creating ext4 partitions...<br>  -&gt; Copying files to image...<br>  -&gt; Writing the boot loader images...<br>Boot PARTUUID is 4f9106b7-b65d-487f-8c7d-9d44a4636acd...<br>Root PARTUUID is cb0d5979-0c87-498b-aaae-6ea8f1423feb...<br>Root UUID is 44f9ece4-f14d-40cb-bb37-7a0317e76f0f...<br>  -&gt; Cleaning up image...<br>  -&gt; Compressing Manjaro-ARM-minimal-r3300m-23.02.img with xz...<br>xz: Reduced the number of threads from 4 to 1 to not exceed the memory usage <span class="hljs-built_in">limit</span> of 233 MiB<br>Manjaro-ARM-minimal-r3300m-23.02.img: 363.6 MiB / 2,820.0 MiB = 0.129, 1.3 MiB/s, 36:23<br>  -&gt; Removing rootfs_aarch64...<br><br>==&gt; Time elapsed: 48.47 minute(s)<br></code></pre></td></tr></table></figure><p>生成镜像花费了48分钟，其中足足36分钟用在了压缩镜像上。受内存限制，xz只利用了一个处理器线程，拖慢了压缩速度。有条件还是用PC操作为宜。</p><p>镜像位于 <code>/var/cache/manjaro-arm-tools/img/</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -lh /var/cache/manjaro-arm-tools/img/<br>total 364M<br>-rw-rw-rw- 1 root root 364M Feb  7 10:18 Manjaro-ARM-minimal-r3300m-23.02.img.xz<br>-rw-r--r-- 1 root root 3.9K Feb  7 10:13 Manjaro-ARM-minimal-r3300m-23.02-pkgs.txt<br></code></pre></td></tr></table></figure><p>镜像总共包含软件包205个，十分精简，这几天我抽空测试下能否正常启动。</p><p><a href="https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools">manjaro-arm-tools</a>使用方式作为附录全文转载，供参考：</p><h1 id="Manjaro-ARM-Tools"><a href="#Manjaro-ARM-Tools" class="headerlink" title="Manjaro ARM Tools"></a>Manjaro ARM Tools</h1><p>Contains scripts and files needed to build and manage manjaro-arm packages and images.</p><p>This software is available in the Manjaro repository.</p><p><em>These tools only work on Manjaro based distributions!</em></p><h2 id="Known-issues"><a href="#Known-issues" class="headerlink" title="Known issues"></a>Known issues</h2><p>Check the <a href="https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools/">Issues</a> page.</p><h2 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h2><p>These scripts rely on certain packages, other than what’s in the <code>base</code> package group, to be able to function. These packages are:</p><ul><li>parted (arch repo)</li><li>libarchive (arch repo)</li><li>git (arch repo)</li><li>qemu-user-static-binfmt (arch repo)</li><li>dosfstools (arch repo)</li><li>pacman (arch repo)</li><li>polkit (arch repo)</li><li>gnugpg (arch repo)</li><li>wget (arch repo)</li><li>zstd (arch repo) - unzstd used for early package verification and zstd image compression</li><li>systemd-nspawn with support for <code>--resolv-conf=copy-host</code> (arch repo)</li></ul><h3 id="Optional-Dependencies"><a href="#Optional-Dependencies" class="headerlink" title="Optional Dependencies"></a>Optional Dependencies</h3><ul><li>gzip (arch repo) (for <code>builddockerimg</code>)</li><li>docker (arch repo) (for <code>builddockkerimg</code>)</li><li>mktorrent (arch repo) (for torrent support in <code>deployarmimg</code>)</li><li>rsync (arch repo) (for <code>deployarmimg</code>)</li><li>bmap-tools (AUR or manjaro repo) (for BMAP support in <code>buildarmimg</code>)</li><li>btrfs-progs (arch repo) (for btrfs support in <code>buildarmimg</code>)</li><li>grub-efi-arm64 (AUR) (for generic-efi image support in <code>buildarmimg</code>)</li></ul><h1 id="Installation-Manjaro-based-distributions-only"><a href="#Installation-Manjaro-based-distributions-only" class="headerlink" title="Installation (Manjaro based distributions only)"></a>Installation (Manjaro based distributions only)</h1><h2 id="From-Manjaro-repositories-both-x64-and-aarch64"><a href="#From-Manjaro-repositories-both-x64-and-aarch64" class="headerlink" title="From Manjaro repositories (both x64 and aarch64)"></a>From Manjaro repositories (both x64 and aarch64)</h2><p>Simply run <code>sudo pacman -S manjaro-arm-tools</code>.</p><h2 id="From-gitlab-tagged-or-GIT-version"><a href="#From-gitlab-tagged-or-GIT-version" class="headerlink" title="From gitlab (tagged or GIT version)"></a>From gitlab (tagged or GIT version)</h2><ul><li>Download the <code>.zip</code> or <code>.tar.gz</code> file from <a href="https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools">https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools</a>.</li><li>Extract it.</li><li>Copy the contents of <code>lib/</code> to <code>/usr/share/manjaro-arm-tools/lib/</code>.</li><li>Copy the contents of <code>bin/</code> to <code>/usr/bin/</code>. Remember to make them executable.</li><li>Create <code>/var/lib/manjaro-arm-tools/pkg</code> folder.</li><li>Create <code>/var/lib/manjaro-arm-tools/img</code> folder.</li><li>Create <code>/var/lib/manjaro-arm-tools/tmp</code> folder.</li><li>Create <code>/var/cache/manjaro-arm-tools/img</code> folder.</li><li>Create <code>/var/cache/manjaro-arm-tools/pkg</code> folder.</li><li>Install <code>binfmt-qemu-static</code> package and make sure <code>systemd-binfmt</code> is running</li></ul><h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><h2 id="buildarmpkg"><a href="#buildarmpkg" class="headerlink" title="buildarmpkg"></a>buildarmpkg</h2><p>This script is used to create packages for ARM architectures.<br>It assumes you have filled out the PACKAGER section of your <code>/etc/makepkg.conf</code>.</p><p>Options inside <code>[</code> <code>]</code> are optional. Use <code>-h</code> to see what the defaults are.</p><p><strong>Syntax</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo buildarmpkg -<span class="hljs-selector-tag">p</span> package <span class="hljs-selector-attr">[-a architecture]</span> <span class="hljs-selector-attr">[-k]</span> <span class="hljs-selector-attr">[-i packages]</span> <span class="hljs-selector-attr">[-b branch]</span><br></code></pre></td></tr></table></figure><p>To use one or more local packages, put them all in the desired directory, named <code>packages</code> in the example below, before running the utility:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo buildarmpkg -<span class="hljs-selector-tag">p</span> package <span class="hljs-selector-attr">[-a architecture]</span> <span class="hljs-selector-attr">[-k]</span> <span class="hljs-selector-attr">[-i packages]</span> <span class="hljs-selector-attr">[-b branch]</span><br></code></pre></td></tr></table></figure><p>To build an aarch64 package against arm-unstable branch use the following command:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo buildarmpkg -<span class="hljs-selector-tag">p</span> package -<span class="hljs-selector-tag">a</span> aarch64 -<span class="hljs-selector-tag">b</span> unstable<br></code></pre></td></tr></table></figure><p>You can also build <code>any</code> packages, which will use the aarch64 architecture to build from.</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">sudo buildarmpkg -p <span class="hljs-keyword">package</span> <span class="hljs-title">-a any</span><br></code></pre></td></tr></table></figure><p>The built packages will be copied to <code>$PKGDIR</code> as specified in <code>/usr/share/manjaro-arm-tools/lib/manjaro-arm-tools.conf</code> and placed in a subdirectory for the respective architecture.<br>Default package destination is <code>/var/cache/manjaro-arm-tools/pkg/</code>.</p><h2 id="signarmpkgs"><a href="#signarmpkgs" class="headerlink" title="signarmpkgs"></a>signarmpkgs</h2><p>This script uses the GPG identity you have setup in your &#x2F;etc&#x2F;makepkg.conf to sign the packages in the current folder.</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">cd &lt;<span class="hljs-built_in">folder</span> <span class="hljs-keyword">with</span> built packages&gt;<br>signarmpkgs<br></code></pre></td></tr></table></figure><h2 id="buildarmimg"><a href="#buildarmimg" class="headerlink" title="buildarmimg"></a>buildarmimg</h2><p>For a list of supported devices and editions, please look at the Profiles repository linked below.</p><p>This script will compress the image file and place it in <code>/var/cache/manjaro-arm-tools/img/</code></p><p>Profiles that gets used are from this <a href="https://gitlab.manjaro.org/manjaro-arm/applications/arm-profiles">Gitlab</a> repository.</p><p><strong>Syntax</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo buildarmimg <span class="hljs-selector-attr">[-d device]</span> <span class="hljs-selector-attr">[-e edition]</span> <span class="hljs-selector-attr">[-v version]</span> <span class="hljs-selector-attr">[-n]</span> <span class="hljs-selector-attr">[-x]</span> <span class="hljs-selector-attr">[-i packages]</span> <span class="hljs-selector-attr">[-b branch]</span> <span class="hljs-selector-attr">[-m]</span> <span class="hljs-selector-attr">[-z compression]</span><br></code></pre></td></tr></table></figure><p>To build a minimal image version 18.07 for the raspberry pi 3 on arm-unstable branch with bmap support:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> buildarmimg -d rpi3 -e minimal -v <span class="hljs-number">18</span>.<span class="hljs-number">07</span> -b unstable -m<br></code></pre></td></tr></table></figure><p>To build a minimal version 18.08 RC1 for the odroid-c2 with a new rootfs downloaded:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> buildarmimg -d oc2 -e minimal -v <span class="hljs-number">18</span>.<span class="hljs-number">08</span>-rc1 -n<br></code></pre></td></tr></table></figure><p>To build an lxqt version with one or more local packages installed for the rock64:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildarmimg -d rock64 -e lxqt -i packages<br></code></pre></td></tr></table></figure><p>To build an xfce version with one or more local packages installed for the rock64, put them all in the desired directory, named <code>packages</code> in the example below, before running the utility:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildarmimg -d rock64 -e xfce -i packages<br></code></pre></td></tr></table></figure><p>To build a kde-plasma edition for the Pinebook Pro with btrfs filesystem:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildarmimg -d pbpro -e kde-plasma -p btrfs<br></code></pre></td></tr></table></figure><p>To build a factory image for the Pinebook Pro, with BSP uboot:</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo <span class="hljs-keyword">buildarmimg </span>-d pbpro-<span class="hljs-keyword">bsp </span>-e kde-plasma -f<br></code></pre></td></tr></table></figure><p>A log is located at &#x2F;var&#x2F;log&#x2F;manjaro-arm-tools&#x2F;buildarmimg-$(date +%Y-%m-%d-%H:%M).log</p><h2 id="buildemmcinstaller-depricated"><a href="#buildemmcinstaller-depricated" class="headerlink" title="buildemmcinstaller (depricated)"></a>buildemmcinstaller (depricated)</h2><p>This script does almost the same as the <code>buildarmimg</code> script.</p><p>Except that it always creates a minimal image, with an already existing image inside it, only to be used for internal storage (eMMC) deployments.</p><p><strong>Syntax</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo buildemmcinstaller <span class="hljs-selector-attr">[-d device]</span> <span class="hljs-selector-attr">[-e edition]</span> -v version <span class="hljs-selector-attr">[-f flashversion]</span> <span class="hljs-selector-attr">[-n]</span> <span class="hljs-selector-attr">[-x]</span> <span class="hljs-selector-attr">[-i packages]</span><br></code></pre></td></tr></table></figure><p>So to build an eMMC installer image for KDE Plasma 19.04 on Pinebook:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> buildemmcinstaller -d pinebook -e kde-plasma -v <span class="hljs-number">19</span>.<span class="hljs-number">04</span> -f first-emmc-flasher<br></code></pre></td></tr></table></figure><p>Be aware that the device, edition and version, most already exist on the OSDN download page, else it won’t work.</p><h2 id="buildrootfs"><a href="#buildrootfs" class="headerlink" title="buildrootfs"></a>buildrootfs</h2><p>This script does exactly what it says it does. It builds a very small rootfs, to be used by the Manjaro ARM Installer and <code>buildarmimg</code>. Right now only supports <code>aarch64</code>.</p><p><strong>Syntax</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildrootfs<br></code></pre></td></tr></table></figure><p>To build an aarch64 rootfs:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildrootfs<br></code></pre></td></tr></table></figure><p>A log is located at &#x2F;var&#x2F;log&#x2F;manjaro-arm-tools&#x2F;buildrootfs-$(date +%Y-%m-%d-%H:%M).log</p><h2 id="builddockerimg"><a href="#builddockerimg" class="headerlink" title="builddockerimg"></a>builddockerimg</h2><p>This script is similar to <code>buildrootfs</code>, except that it builds a rootfs ready for package building and turns it into a docker image, that can be uploaded to DockerHub.</p><p><strong>Syntax</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> builddockerimg<br></code></pre></td></tr></table></figure><p>This uploads the docker file directly to the Manjaro ARM acccount on DockerHub.</p><p>A log is located at &#x2F;var&#x2F;log&#x2F;manjaro-arm-tools&#x2F;builddockerimg-$(date +%Y-%m-%d-%H:%M).log</p><h2 id="deployarmimg-depricated"><a href="#deployarmimg-depricated" class="headerlink" title="deployarmimg (depricated)"></a>deployarmimg (depricated)</h2><p>This script will create checksums for and upload the newly generated image. It assumes you have upload access to our OSDN server.<br>If you don’t, you can’t use this.</p><p><strong>Syntax</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">deployarmimg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">image</span> <span class="hljs-selector-attr">[-d device]</span> <span class="hljs-selector-attr">[-e edition]</span> <span class="hljs-selector-attr">[-v version]</span> -k email@server<span class="hljs-selector-class">.org</span> <span class="hljs-selector-attr">[-t]</span> <span class="hljs-selector-attr">[-u osdn-username]</span><br></code></pre></td></tr></table></figure><p>To upload an image to the raspberry pi minimal 18.07 folder use with torrent:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">deployarmimg</span> -i Manjaro-ARM-minimal-rpi3-<span class="hljs-number">18</span>.<span class="hljs-number">07</span>.img.xz -d rpi3 -e minimal -v <span class="hljs-number">18</span>.<span class="hljs-number">07</span> -k email@server.org -t<br></code></pre></td></tr></table></figure><h2 id="getarmprofiles"><a href="#getarmprofiles" class="headerlink" title="getarmprofiles"></a>getarmprofiles</h2><p>This script will just clone or update the current profile list in <code>/usr/share/manjaro-arm-tools/profiles/</code>.<br>So nothing fancy.</p><p>This would enable users to clone the profiles repository, make any changes they would like to their images and then build them locally.<br>So if you made changes to the profiles yourself, don’t run <code>getarmprofiles</code> and you will still have your edits.</p><p>But if you messed up your profiles somehow, you can start with the repo ones with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> getarmprofiles -f<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Manjaro ARM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M再刷机</title>
    <link href="/2023/02/06/r3300m-reflash/"/>
    <url>/2023/02/06/r3300m-reflash/</url>
    
    <content type="html"><![CDATA[<p>家里先前运行Manjaro ARM的R3300-M最近出现了开机一段时间后SSH无法登陆的问题，于是备份必要文件后重刷系统。原本以为不需要再水一篇文章，不过刷机过程中遇到了一些问题，有必要记录下来。</p><h1 id="镜像选择"><a href="#镜像选择" class="headerlink" title="镜像选择"></a>镜像选择</h1><p>之前我写过一篇文章建议使用generic镜像，我记得当时试验很顺利。不过我发现最新版的generic镜像 <strong>extlinux.ext</strong> 文件结构发生了较大变化，不仅取消了DTB文件指定，而且启动参数也精简了许多，毫无意外启动失败了。我参照之前的格式修改，结果无法发现root分区，这肯定就行不通了。于是换用Vim2镜像，这个也有坑。测试了22.12和22.10版本，启动时提示 <strong>reserved mem:failed to allocate memory for node ‘linux,cma’</strong> 错误导致启动失败进入 <strong>emergency shell</strong>。几经测试后 <strong>vim2 22.08</strong> 是能够正常使用的最新版本，开机后直接更新系统换主线内核即可。针对dtb文件区别我进行了简单试验，试验结果如下：</p><ol><li>当前使用的dtb文件与Manjaro-ARM-minimal-generic-22.12.img中提供的meson-gxbb-p201.dtb文件，反编译后得到的dts文件经过diff比较是完全一致的，符合预期。</li><li>当前使用的dtb文件与Manjaro-ARM-minimal-vim2-22.08.img中提供的meson-gxbb-p201.dtb文件，反编译后得到的dts文件diff结果如下：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">diff current.dts vim2-08.dts<br>50c50<br>&lt;                       size = &lt;0x00 0x10000000&gt;;<br>---<br>&gt;                       size = &lt;0x00 0x38000000&gt;;<br></code></pre></td></tr></table></figure><p>对应dts文件中此部分：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Manjaro-ARM-minimal-generic-22.12.img</span><br>linux,cma &#123;<br>        compatible = <span class="hljs-string">&quot;shared-dma-pool&quot;</span>;<br>        reusable;<br>        size = &lt;0x00 0x10000000&gt;;<br>        alignment = &lt;0x00 0x400000&gt;;<br>        linux,cma-default;<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Manjaro-ARM-minimal-vim2-22.08.img</span><br>linux,cma &#123;<br>      compatible = <span class="hljs-string">&quot;shared-dma-pool&quot;</span>;<br>      reusable;<br>      size = &lt;0x00 0x38000000&gt;;<br>      alignment = &lt;0x00 0x400000&gt;;<br>      linux,cma-default;<br>&#125;;<br></code></pre></td></tr></table></figure><p>至于 Manjaro-ARM-minimal-generic-22.12.img 与 Manjaro-ARM-minimal-vim2-22.12.img dtb差异就比较悬殊了，大量的的phandle值不同，而且新增了 ** system-suspend** 、 <strong>rtc@a8</strong> 、 <strong>sound</strong> 、 <strong>vrtc</strong> 内容。</p><p>Manjaro ARM提供了<a href="https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-tools">manjaro-arm-tools</a>这一工具，可以提供打包应用，制作系统镜像等功能。有空可以为R3300-M定制一份配置文件。</p><h1 id="编译WIFI驱动"><a href="#编译WIFI驱动" class="headerlink" title="编译WIFI驱动"></a>编译WIFI驱动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S git make gcc bc<br>git <span class="hljs-built_in">clone</span> https://github.com/jwrdegoede/rtl8189ES_linux.git<br><span class="hljs-built_in">cd</span> ~/rtl8189ES_linux/<br>make -j$(<span class="hljs-built_in">nproc</span>) ARCH=arm64 KSRC=/usr/lib/modules/$(<span class="hljs-built_in">uname</span> -r)/build<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">cp</span> 8189es.ko /usr/lib/modules/$(<span class="hljs-built_in">uname</span> -r)/kernel/drivers/net/wireless/realtek/<br><span class="hljs-built_in">sudo</span> depmod -a<br><span class="hljs-built_in">sudo</span> modprobe 8189es<br></code></pre></td></tr></table></figure><p>较之前的版本补充了依赖关系安装。nproc是一个用于获取CPU线程数的小程序，用来全速编译很便利。</p><h1 id="连接WIFI"><a href="#连接WIFI" class="headerlink" title="连接WIFI"></a>连接WIFI</h1><p>过去我使用 <strong>networkmanager</strong> 提供的 <strong>nmtui</strong> 连接WIFI，优点比较直观。这次换用 <strong>wpa_supplicant</strong> 连接无线网络。<br>刚才编译加载好无线驱动后使用 <code>ip a</code> 查看，可以看到无线网卡名称为 <strong>wlan0</strong> ，使用 <code>sudo iw wlan0 scan</code> 可以扫描到附近的全部无线热点，说明无线网卡已经正常驱动，接下来用pacman安装<strong>wpa_supplicant</strong>。安装程序会自动创建 <strong>&#x2F;etc&#x2F;wpa_supplicant&#x2F;</strong> 这个目录，该目录目前还是空的，需要自行创建WIFI配置文件。</p><p>假设要连接SSID为 <strong>ASUS</strong> ，密码为 <strong>12345678</strong> 的这个WIFI，首先生成配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">wpa_passphrase <span class="hljs-string">&quot;ASUS&quot;</span> <span class="hljs-string">&quot;12345678&quot;</span> <br><br><br>network=&#123;<br>        ssid=<span class="hljs-string">&quot;ASUS&quot;</span><br>        <span class="hljs-comment">#psk=&quot;12345678&quot;</span><br>        psk=a0efc361219475143ca336c62571c833d81e72b952db56e373a5c255ebff7e00<br>&#125;<br></code></pre></td></tr></table></figure><p>在 <strong>&#x2F;etc&#x2F;wpa_supplicant&#x2F;</strong> 这个目录下创建 <strong>wpa_supplicant.conf</strong> ，然后把上门的输出内容复制进去保存。然后执行命令连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf &amp;<br></code></pre></td></tr></table></figure><p>这个命令是很直观的，使用wlan0这个无线网卡，根据 <strong>&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf</strong> 配置连接WIFI，并作为后台进程执行。</p><p>当然每次开机手动连接WIFI是不方便的，很自然的想法是利用systemd创建service。事实上 <strong>wpa_supplicant</strong> 也提供了服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>systemctl <span class="hljs-built_in">cat</span> wpa_supplicant<br><span class="hljs-comment"># /usr/lib/systemd/system/wpa_supplicant.service</span><br>[Unit]<br>Description=WPA supplicant<br>Before=network.target<br>After=dbus.service<br>Wants=network.target<br>IgnoreOnIsolate=<span class="hljs-literal">true</span><br><br>[Service]<br>Type=dbus<br>BusName=fi.w1.wpa_supplicant1<br>ExecStart=/usr/bin/wpa_supplicant -u -s -O /run/wpa_supplicant<br><br>[Install]<br>WantedBy=multi-user.target<br>Alias=dbus-fi.w1.wpa_supplicant1.service<br></code></pre></td></tr></table></figure><p>但是这个服务达不到期望目的。参考 <a href="https://unix.stackexchange.com/questions/361558/difference-between-systemd-wpa-supplicant-service-and-wpa-supplicantwlan0-servi">Difference between systemd wpa_supplicant.service and wpa_supplicant@wlan0.service?</a> 一文，这个服务主要是用于服务 <strong>networkmanager</strong> 的。由于我不打算安装使用 <strong>networkmanager</strong> ，所以这个服务没有意义。真正有意义的是 <strong>wpa_supplicant@.service</strong> ，而且值得特别指出，这是个动态服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">cat</span> wpa_supplicant@.service<br><span class="hljs-comment"># /usr/lib/systemd/system/wpa_supplicant@.service</span><br>[Unit]<br>Description=WPA supplicant daemon (interface-specific version)<br>Requires=sys-subsystem-net-devices-%i.device<br>After=sys-subsystem-net-devices-%i.device<br>Before=network.target<br>Wants=network.target<br><br><span class="hljs-comment"># NetworkManager users will probably want the dbus version instead.</span><br><br>[Service]<br>Type=simple<br>ExecStart=/usr/bin/wpa_supplicant -c/etc/wpa_supplicant/wpa_supplicant-%I.conf -i%I<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>至此思路就清楚了。首先执行 <code>ps aux | grep wpa</code> 找到并杀死刚才连接WIFI执行的后台进程，然后将 <strong>&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf</strong> 重命名为 <strong>&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant-wlan0.conf</strong> ，最后执行 <code>sudo systemctl enable --now wpa_supplicant@wlan0</code> 激活服务就大功告成。注意体味下此处动态服务的妙用。</p><h1 id="重新安装hexo"><a href="#重新安装hexo" class="headerlink" title="重新安装hexo"></a>重新安装hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S npm<br><span class="hljs-built_in">sudo</span> npm install hexo-cli -g<br><span class="hljs-built_in">sudo</span> npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>这里补充的主要是GitHub使用密钥同步问题：</p><ol><li>修复密钥权限<br><strong>$HOME&#x2F;.ssh</strong>目录下的私钥 <strong>id_rsa</strong> 导回后默认权限为644，程序会抱怨权限太宽，需要手动改成600。成功后测试输出如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br>Hi xiaofami! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure></li><li>修改 <strong>.git&#x2F;config</strong>文件<br><strong>.git</strong> 位于你的hexo目录。我修改后的config文件内容如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs config">[core]<br>        repositoryformatversion = 0<br>        filemode = true<br>        bare = false<br>        logallrefupdates = true<br>[remote &quot;origin&quot;]<br>        url = git@github.com:xiaofami/xiaofami.github.io<br>        fetch = +refs/heads/*:refs/remotes/origin/*<br>[branch &quot;blogSource&quot;]<br>        remote = origin<br>        merge = refs/heads/blogSource<br></code></pre></td></tr></table></figure>修改之前 <strong>url</strong> 一行使用的是https格式，所以无法跳过手动输入验证步骤。按照上述形式修改为git即可。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Manjaro ARM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>彩色图片转为黑白</title>
    <link href="/2022/12/02/ImageMagick/"/>
    <url>/2022/12/02/ImageMagick/</url>
    
    <content type="html"><![CDATA[<p>由于众所周知的原因，公众号LOGO需要修改成黑白色。可以使用<a href="https://imagemagick.org/">ImageMagick</a>这个工具来实现，在此之前我们曾用它进行过图片格式转换，同样便利。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">magick 0.jpg -colorspace Gray 1.jpg <span class="hljs-comment">#Windows下</span><br>convert 0.jpg -colorspace Gray 1.jpg <span class="hljs-comment">#Linux下</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>图像处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>俄罗斯WinPE分享</title>
    <link href="/2022/11/07/WinPE/"/>
    <url>/2022/11/07/WinPE/</url>
    
    <content type="html"><![CDATA[<p>提及WinPE，可能许多人用过微PE、大白菜这些国产PE进行安装系统、扫描磁盘、重置系统密码等操作，其特点是轻量快速，不过功能也相对较少。本文分享的这个WinPE来自俄罗斯，侧重于大而全。先上下载地址： magnet:?xt&#x3D;urn:btih:9338AEBDF8E747DE63C9A26D985CD2B68944B352</p><p>帖子参见这里，是俄文的：<a href="https://nnmclub.to/forum/viewtopic.php?t=1521692">https://nnmclub.to/forum/viewtopic.php?t=1521692</a> 目前最新版本为 <strong>WinPE 10-8 Sergei Strelec (x86&#x2F;x64&#x2F;Native x86) 2022.01.03 [En]</strong> ，完整下载要3.88GB，内置了WinPE10x64、WinPE10x86、WinPE8x86、WinPE8x86(Native) 以及大量实用工具，开箱即用。</p><p>U盘制作工具推荐ventoy。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>WinPE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM 22.10 发布</title>
    <link href="/2022/10/26/manjaro-arm-22.10/"/>
    <url>/2022/10/26/manjaro-arm-22.10/</url>
    
    <content type="html"><![CDATA[<p>Manjaro ARM 22.10 发布啦！其亮点之一便是6.0内核的更新。我的R3300-M小红盒已更新。如果需要全新安装，可以下载GENERIC镜像： <a href="https://github.com/manjaro-arm/generic-images/releases/download/22.10/Manjaro-ARM-minimal-generic-22.10.img.xz">https://github.com/manjaro-arm/generic-images/releases/download/22.10/Manjaro-ARM-minimal-generic-22.10.img.xz</a> </p><p>对于S905盒子而言，GENERIC镜像缺失了一些必须的启动文件。这些文件我已经打包，需要下载解压缩后放到启动分区：<a href="https://tccmu.com/2022/08/04/manjaro2206/bootfiles.tgz">https://tccmu.com/2022/08/04/manjaro2206/bootfiles.tgz</a></p><p>以R3300-M为例，将 <strong>u-boot-s905</strong> 重命名为 <strong>u-boot.ext</strong> ，然后修改 <strong>extlinux.conf</strong> 使用 <strong>meson-gxbb-p201.dtb</strong> 就可以了。镜像中的dtb文件支持allwinner、amlogic、apple、broadcom、nvidia和rockchip，有对应设备的可以自行测试。</p><p>简单测试来看，ODROID内核表现稳定（6.0.1-1-MANJARO-ARM-ODROID） ，更新后重启正常。主线内核的那个盒子更新后重启失败，可能电源管理存在一点点问题。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天线系统调整</title>
    <link href="/2022/09/30/%E5%A4%A9%E7%BA%BF%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    <url>/2022/09/30/%E5%A4%A9%E7%BA%BF%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>自己的晾衣绳天线一直使用300Ω电视扁馈线馈电，直接引进电台室接巴伦，然后接同轴线到电台。几天的FT8操作中发觉电磁干扰有些严重，经常发着发着就没输出了，ALC跳到100。于是对扁馈线进行了裁短取直，巴伦也扔到了室外，使用同轴线引入室内连接电台。<br>裁短扁馈线后，天线系统的阻抗发生了变化。原本在十米段可以自然谐振，现在需要开启天调才能20W输出。不过优点是40米段的SWR降低了，配合天调SWR可以降到1。估计发射效率不会高，不过晚些时候还是试试看能不能通联。<br>天线系统调整后干扰问题有所缓解，不过没有完全消除。鉴于我们的天线是平衡式天线，这种干扰有可能直接来自于天线的正常发射，属于直接干扰，并非由于不平衡电流产生的射频干扰。于是使用铝箔纸将HUB、音频线、CAT线尽可能严密包裹了起来，仅外露接口，效果有待进一步观察。不过调整后在20米段首次收到了来自美国的信号，而且成功通联 <strong>W6XB</strong> ，猜测是调整馈线后损耗减少的缘故。<br>在查阅资料过程中发现了几篇有价值文献，供大家共同参考学习：</p><ol><li><a href="https://www.physics.princeton.edu/pulsar/K1JT/FT8_Operating_Tips.pdf">https://www.physics.princeton.edu/pulsar/K1JT/FT8_Operating_Tips.pdf</a></li><li><a href="https://www.w8ji.com/coaxial_line_and_shielded_wires.htm">https://www.w8ji.com/coaxial_line_and_shielded_wires.htm</a></li><li><a href="https://www.w8ji.com/radiation_resistance.htm">https://www.w8ji.com/radiation_resistance.htm</a></li><li><a href="https://www.w8ji.com/verticals_and_baluns.htm">https://www.w8ji.com/verticals_and_baluns.htm</a></li><li><a href="https://content-files.shure.com/KnowledgeBaseFiles/troubleshooting-rfi-jim-brown-ham.pdf">https://content-files.shure.com/KnowledgeBaseFiles/troubleshooting-rfi-jim-brown-ham.pdf</a></li></ol><p>特别是讲同轴线的那篇，对于同轴线工作原理不熟悉的朋友一定要认真阅读，否则很难理解射频泄露的原因和应对办法。一言以概之，无论天线是否平衡，电流一定是平衡的，发射出去多少电流，就要有相对应数量的电流汇入地网系统，这些感应电流会自发。读懂了这篇文章，相信你会对国内一些ham售卖的端馈天线和垂直天线有新的认识。<br>第五篇详细介绍了射频干扰，建议完整阅读。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>天线</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LOTW使用拾遗</title>
    <link href="/2022/09/28/lotw/"/>
    <url>/2022/09/28/lotw/</url>
    
    <content type="html"><![CDATA[<p>LOTW注册及使用办法网上已有许多教程，本文仅结合自身使用进行适当补充。</p><h1 id="备份证书"><a href="#备份证书" class="headerlink" title="备份证书"></a>备份证书</h1><p>首次使用TQSL时按照提示步骤会生成一个证书，请将其导出保存，文件名为 <strong>呼号-key-only.p12</strong>。这个证书如果不保存，后续导入tq6证书后就会消失。配合<strong>呼号-key-only.p12</strong> 和 <strong>呼号.tq6</strong> 两个证书，可以在任意电脑上鉴权。TQSL本身也提供了包括证书、台站、设置在内的一键导入导出功能，不过谨慎一点没坏处。</p><h1 id="下载QSL记录"><a href="#下载QSL记录" class="headerlink" title="下载QSL记录"></a>下载QSL记录</h1><p>用邮件中的密码登录 <a href="https://lotw.arrl.org/lotwuser/default">https://lotw.arrl.org/lotwuser/default</a> ，点击屏幕左侧的 <strong>Download Report</strong>，可以下载名为 <strong>lotwreport.adi</strong> 的QSL记录。这个文件可以直接使用TQSL逐条查看，也可以导回你用来操作FT8的软件，比如FT8CN，从而在软件中直观看到通联的确认情况。（只有完成QSL才是一次完整的通联！）</p><h1 id="查询特定呼号更新LOTW记录的时间"><a href="#查询特定呼号更新LOTW记录的时间" class="headerlink" title="查询特定呼号更新LOTW记录的时间"></a>查询特定呼号更新LOTW记录的时间</h1><p>假如有一个与我们通联过的友台迟迟没有确认QSL，可以进入 <strong>Find Call</strong>页面，输入对方呼号查询他更新QSO记录的时间。如果显示 “No log data found “，说明对方大概率没注册过LOTW，可以去qrz.com查询日志。如果显示更新时间为几天前，不妨再耐心等上几天。现在数字通信模式流行，软件承担起了记录通联日志的工作，发生遗留的情况很罕见。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>ham</tag>
      
      <tag>QSL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>G90S FT8操作小结</title>
    <link href="/2022/09/28/g90sft8/"/>
    <url>/2022/09/28/g90sft8/</url>
    
    <content type="html"><![CDATA[<p>最近用协谷G90S试验了FT8通联，顺便测试天线效果。首先上通联记录：<br> <img src="/2022/09/28/g90sft8/qso.PNG" class="" title="通联记录"><br> 这个是到昨天为止的记录，今天的记录晚上再上传。总体而言，通联日本很轻松（距离1700km左右），CQ几下就有ham主动联系。国内通联过河南、湖南、湖北、广东、江苏、浙江、云南，传播情况没有想象中理想，估计是秦岭以及横断山脉的缘故。<br> 至于操作频率，我主要在14.074MHz、21.074MHz以及28.074MHz操作。14.074MHz无需天调20W满载输出，最远通联VK2PAA（澳大利亚），距离9000公里；21.074MHz需要开天调，输出功率17W左右，最远通联3D2USU（斐济），距离8800公里；28.074MHz无需天调，输出功率18W左右，最远通联BA7LIP（广东），距离2300公里。在10.136MHz也有一些和日本、俄罗斯远东地区的通联，不过电台此时的输出功率不到10W，所以浅尝辄止。除了FT8常用的这几个频点，最近发现有香港ham在50米段操作，当然我在50米段没有多少功率，只能看热闹。<br>设备方面，使用了协谷G90S电台，红米K30U手机（运行FT8CN），搭配晶华USB声卡分线器（TYPE-C接口）和BH4FRV制作的ACC音频线使用，整体效果令人满意。手机最好用备机并切换到飞行模式，避免手机提示音甚至铃声被意外发送。G90S虽然最大功率只有20W，不过FT8模式轻松通联1000+公里，供新晋B证的爱好者熟悉短波操作足矣。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>ham</tag>
      
      <tag>FT8</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于ladder line的讨论</title>
    <link href="/2022/09/22/lader-line/"/>
    <url>/2022/09/22/lader-line/</url>
    
    <content type="html"><![CDATA[<p>馈线是天线系统的重要组成部分，在SWR较高的情况下，馈线由于介电损耗发热损失大量功率，同时带来散热负担。另外，合理调整馈线长度可以实现阻抗变化。业余无线电天线系统中，常用的馈线类型有同轴线（coax）和梯线（ladder line）两种，不过后者在国内少见，本文主要介绍ladder line。</p><p>首先进行简单的数学分析。假设有一个中央馈电的doublet天线，在操作的几个业余段之中，馈电点阻抗变化为50~5000Ω，采取50Ω的同轴线馈电，则SWR范围为1~100！如果使用阻抗为450Ω的梯线，那么SWR最大值仅为11.1。由于SWR极值大大地减小了，线损也减小了，所以梯线适合于多频段操作。具体损耗可以参考 <strong>kv5r</strong> 制作的表格。（链接到上一篇翻） </p><p>不同于同轴线，梯线属于平衡馈线。对于在中央馈电的平衡式天线，梯线上左右两股导线中的电流幅度相同，相位相反，所以相互抵消，不会产生辐射。当然这是理想情况，不过只要梯线距离天线不太近，平行长度不多，共模电流的影响就可以忽略。</p><p>另外梯线的走线需要稍加注意：</p><ol><li>不要拖地，会影响阻抗；</li><li>尽量不要弯折，不过 <strong>kv5r</strong> 说不要太过教条，他实测打了几个弯依然工作良好；</li><li>与金属导体，保持一段距离，有几英寸的距离足够了。</li></ol><p>梯线的长度需要纳入考虑。通过合适调整馈线长度，可以确保在操作的各个频段内避开阻抗极值点，减小天调压力并提高天线系统效率。关于天线系统普遍存在两个认知误区：</p><ol><li>天线必须谐振，效率才高；</li><li>天调只是一个通过SWR欺诈诱骗电台输出功率的幻术师，实际发射出去的功率并不多。</li></ol><p>这两个观点都是错误的。第一点参阅《天线手册》即可。第二点，在天调端阻抗超过50Ω时，发射效率普遍可以达到90%以上；超过500Ω时，超过95%。为了使天调得到合适阻抗，可以通过调整梯线长度实现。例如，按照波长八分之一的奇数倍调整梯线长度。一般天调的说明书中也会提到合理修剪馈线长度以避开阻抗极值。需要注意，当天调获得的阻抗值很低时，天调的效率会急剧降低。</p><p>最后附上 <strong>WB8IMY</strong> 现身说法的一篇好文：<a href="https://www.robkalmeijer.nl/techniek/electronica/radiotechniek/hambladen/qst/1993/12/page70/index.html">The lure of the ladder line</a>，对梯线盛赞不已。</p><p>不过对于国内的ham而言买到梯线貌似不太容易。我在几大国内平台上没有找到450Ω这种梯线，300Ω的twin lead线，即过去的电视馈线倒是一大堆，我正在用的就是这种线。它的最大缺点是铜线实在太细了，对于我的20W电台而言问题还不算大，高功率电台可能不适合。<strong>kv5r</strong> 给出了DIY几种不同阻抗梯线的方法，可以参考。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>ham</tag>
      
      <tag>馈线</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>偶极子天线材料选择</title>
    <link href="/2022/09/19/best-wire-dipole/"/>
    <url>/2022/09/19/best-wire-dipole/</url>
    
    <content type="html"><![CDATA[<p>初次制作偶极子天线的朋友可能会纠结于线材的选择。铜线被普遍使用，性能优良，但是价格较贵。不锈钢绳坚固耐用，但是电阻率3倍于同规格铜线，对于天线指标会产生何种程度影响？制作天线的线材应该用裸线还是带绝缘层？其他种类的线材又表现如何？ <strong>Ian Jackson - VK3BUF</strong> 对多种线材进行了细致测试，并发布于 <a href="https://sz1a.org/en/featured-articles/whats-the-best-wire-for-a-dipole-video/">What’s the best wire for a dipole?</a>，具有很高的参考价值。<br>直接归纳结论：</p><ol><li>以21.2MHz为目标制作的半波长偶极子天线，不同材料对应的长度不同，7股2.5mm裸铜线的单臂长度最长，为3437mm；2股带刺铁丝网线单臂长度最短，为3265mm，二者相差172mm。不过适当修剪使得各个天线都谐振在21.2MHz后，各天线的增益差异不超过2dbm（除了MIG welding wire，估计没人用到），大概对应S表一个格子的三分之一。所以天线材料对于天线性能影响可以忽略不计。</li><li>线材的绝缘层会增加天线的电气长度和阻抗。</li><li>不锈钢绳是权衡各个因素后的最佳天线材料。<br>下一篇讨论<a href="https://kv5r.com/ham-radio/ladder-line/">Ladder Line</a>。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>天线</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>晾衣绳天线研究（篇三）</title>
    <link href="/2022/09/19/fd-dipole-2/"/>
    <url>/2022/09/19/fd-dipole-2/</url>
    
    <content type="html"><![CDATA[<p>之前测试天线发射指标一直不理想，14MHz的SWR始终降不下来。经过学习后得知馈线的屏蔽层也需要连接。之前由于没有 <strong>SL16-J</strong>的公对公连接头，所以仅仅使用六角螺丝刀连接了内导体，外屏蔽层为开路状态。使用铜线连接屏蔽层后天线终于可以自然谐振在14MHz，算是一大收获，接收效果也有改善。等到连接头到货后估计还能减少一些损耗，SWR也会更稳定。<br>再来审视下这个天线的特性。这个天线如果不考虑馈线，和一个折叠偶极子天线（folded dipole antenna）并无别样。折叠偶极子天线相较于普通的偶极子天线具备如下优点：</p><ol><li>阻抗高，约300Ω，与传输线匹配更好；</li><li>带宽更高；</li><li>信噪比更高。</li></ol><p>不过普通的偶极子天线使用同轴线（coax）馈电，我的这个天线使用双头线（ladder line），馈电位置都是天线中央。这种搭配双头线使用的天线，一般称之为双联天线（doublet antenna），它具备如下特点：</p><ol><li>馈线是天线的一部分。虽然对馈线长度要求并不严格（假设天线左臂右臂长度均为L1，馈线长L2），当L1+L2等于操作频率的四分之一波长时，阻抗匹配最好，此时馈线末端呈现的阻抗大概为50Ω；</li><li>馈线使用平行线（双头线），以减小损耗。一般可选450Ω或600Ω传输线，不过电视用的300Ω馈线也可以。需要指出，电视的300Ω馈线便宜易得，约合1.2元&#x2F;米，前面两种国内没发现哪里有卖。不同于同轴线，双头线易受环境干扰。尽量将其远离金属、不要与房屋外墙平行放置、不要放在地上，也不要大角度弯折甚至缠起来，否则会发生预期之外的阻抗变化或者电磁泄露；</li><li>由于双头线损耗较小，所以双联天线在配合天调的情况下比较适合多段操作。</li></ol><p>想更深入了解 doublet antenna 推荐阅读 <a href="https://ftp.unpad.ac.id/orari/library/library-sw-hw/amateur-radio/ant/docs/Introducing%20the%20All-Band%20Doublet.htm">Introducing the “All-Band” Doublet:What the Student and the Instructor Should Keep in Mind</a></p><p>另外在查找 doublet antenna 天线资料时发现了另一类有意思的天线： <strong>Wide-Band Folded Dipole</strong>，简称 <strong>WBFD</strong>，即宽频折叠偶极子天线。它与普通FD天线的区别在于在馈电点正对面插入了一个阻值800至900Ω的无感电阻，然后配合1:16的变换器实现阻抗匹配，以得到宽广范围内较低的SWR值。不过代价是增益比同规格 doublet antenna 低了约6.3dB。而且低SWR不总意味着天线能够高效发射，在操作频率低于某一阈值时，天线指标迅速恶化，作为低SWR的代价，无感电阻承受了大部分功率。感兴趣可以移步至<a href="http://on5au.be/content/a10/wire/wbfd.html">Notes on the Terminated Wide-Band “Folded Dipole”</a>深入了解。</p><p>最后在此缅怀作者 <strong>L. B. Cebik, W4RNL</strong>，本文引用的两篇文献均出自他的手笔，愿他安息。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>天线</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>晾衣绳天线研究（篇二）</title>
    <link href="/2022/09/06/fd-dipole/"/>
    <url>/2022/09/06/fd-dipole/</url>
    
    <content type="html"><![CDATA[<p>之前搭建的天线指标不是很理想。发射指标暂不提，接收增益感觉也不够。之前守听7050频率，能勉强听到沈阳的朋友呼叫外地友台，报告对方信号59，不过我这里什么都听不到。底噪其实还算理想，求精电源配合磁环29MHz底噪不起表，7、14MHz底噪大概S3左右。拿EZNEC大致仿真了最普通的半波长偶极子天线，俯仰角90°达到最大增益6.55dbi，beamwidth为35.9<del>144.1°范围。方向性不佳的原因是高度不够，书上推荐不小于0.2λ，实际越高越好。<br><a href="https://www.youtube.com/watch?v=OoHoHocQdc4">Experimenting with a clothesline style folded dipole</a>是 <strong>VK3YE</strong> 将 <strong>VA2ERY</strong> 文章付诸实践的视频。他在自家院子里很随意地拉了一条约5米长的晾衣绳，高度没有一人高，两条线最大距离约0.5米。 <strong>VK3YE</strong> 在不同的馈电点位置用天分仪进行了测试，结果没有惊喜，毕竟这条使用1:4的巴伦的天线过于随意，而且偏长了。<br><strong>W4RNL</strong> 撰写的<a href="http://on5au.be/content/amod/amod117.html">Modeling and the Logic of Question Resolution</a>通读了一遍，该文对Folded Dipole进行了建模，可作为参考。<strong>W4RNL</strong> 已经化作了 <strong>silent key</strong> ，愿他安息。<br>重新建模后再次仿真计算，结果表明配合300Ω馈线情况下，天线在14MHz完美谐振，驻波1.1左右。我之前制作的天线过长了，而且长出的天线没有减掉，劣化了天线指标，有空时应该将天线剪短。至于方向性，Beamwidth33.3</del>146.7°，照旧90°最大 Orz 或许我应该专注通联卫星 😂</p>]]></content>
    
    
    
    <tags>
      
      <tag>ham</tag>
      
      <tag>dipole</tag>
      
      <tag>eznec</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对天线方位角、俯仰角的粗糙理解</title>
    <link href="/2022/09/05/%E5%AF%B9%E5%A4%A9%E7%BA%BF%E6%96%B9%E4%BD%8D%E8%A7%92%E3%80%81%E4%BF%AF%E4%BB%B0%E8%A7%92%E7%9A%84%E7%B2%97%E7%B3%99%E7%90%86%E8%A7%A3/"/>
    <url>/2022/09/05/%E5%AF%B9%E5%A4%A9%E7%BA%BF%E6%96%B9%E4%BD%8D%E8%A7%92%E3%80%81%E4%BF%AF%E4%BB%B0%E8%A7%92%E7%9A%84%E7%B2%97%E7%B3%99%E7%90%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>以下内容仅为个人理解，不保证准确。<br>假设我们在空间中建立直角坐标系 <strong>x,y,z</strong>，X-Y平面与地面平行，z轴垂直于X-Y平面。设z&#x3D;0代表接地。<br>现在开始引入天线。假设我们的天线两端点坐标为(0,0,30)与(0,33.43,30)。显而易见，这个天线与y轴平行。<br>在EZNEC软件中，可以直观地得到Azimuth（方位）和Elevation（俯仰）图示，它们应该如何理解呢？<br>3D图比较直观。将3D图投影到X-Y平面，即得Azimuth图。将3D图投影到X-Z平面，即得Elevation图。对于Elevation，可以看到图形左右对称但是上下不对称，这是地面的影响产生的。如果天线位于自由空间，上下也是对称的。<br>现在引入概念： <strong>辐射远区场</strong> 。与之相对应的名词为 <strong>辐射近区场</strong> 。我们不细究它们的界限，只需要知道电磁波是由天线的辐射远区场传播就可以了（近场区存储能量）。在相较于远区场的无穷大，天线的物理尺寸可以忽略不计，所以我们可以忽略天线的物理尺寸和形状，把它抽象为一个点。<br>我们的半波长偶极子天线现在被抽象成了一个点，但是再次明确，天线的方向性没有改变。<br>再回到Elevation图，其原点为(0,0,0)。另外我们刚才投影得到的Elevation图只是Azimuth角为零的特例。以Z轴为轴旋转3D图，可以直观看到Elevation图随方位角的变化情况。也可以在程序中设定方位角，输出对应的Elevation图形。<br>Azimuth图随Elevation角变化又是怎么一回事呢？这个在3D图中观察很直观。勾选Azimuth Slice和 show 2D  Plot选项，然后改变Slice Elev，Azimuth图会随之变化。可以想象(0,0,0)处有一个点光源，这个光源以给定的Elevation角打出圆锥形的光。<br>小结一下，天线的方位角、俯仰角在天线设计、架设中具有重要意义。比如我们在拉一条晾衣绳天线时，晾衣绳的走向决定了天线的方位角，比如我们想让天线最大辐射方向对准南北方向，那么我们的晾衣绳就应该沿着东西方向拉直。为了方便DX通联，我们希望天线的俯仰角小一些，但是不能太小，因为视野内有一座山。此时通过EZNEC计算就可知我们宝贵的20W电波是会跨过大山走向世界还是一头撞死潜形匿迹。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>天线</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天线仿真研究</title>
    <link href="/2022/09/01/%E5%A4%A9%E7%BA%BF%E4%BB%BF%E7%9C%9F/"/>
    <url>/2022/09/01/%E5%A4%A9%E7%BA%BF%E4%BB%BF%E7%9C%9F/</url>
    
    <content type="html"><![CDATA[<p>之前制作的晾衣绳天线指标不太理想，基本不具备业余段的发射能力，拿来收听倒是还行 😭 痛定思痛，还是要提高理论水平，在正确理论的指导下，借助计算机仿真替代盲目试验。<br>在这一方针指导下，笔者找来了《The ARRL ANTENNA BOOK (21st Edition)》，中译《天线手册》，人民邮电出版社出版。书中计算机仿真一节介绍了 <strong>EZNEC</strong> 这个软件。软件作者为 <strong>W7EL</strong> ，已经76岁高龄。出于种种考虑，<strong>W7EL</strong> 于2021年宣布退休，不再更新维护<strong>EZNEC</strong>，最后一版 <a href="https://www.eznec.com/">EZNEC Pro+ v. 7.0</a> 于2022年1月1日起进入公共领域，任何人都可以免费分发使用（作者声明：<a href="https://web.archive.org/web/20210812004047/https://eznec.com/retirement.htm%EF%BC%89">https://web.archive.org/web/20210812004047/https://eznec.com/retirement.htm）</a> 。 由于软件历史已超过30年，其依赖的一些第三方库已不可靠，代码已经很难维护，所以作者不打算将其开源。<br>不管怎么说，EZNEC久经考验，完全可以胜任一般的天线设计仿真，所以还是值得学习。</p><p>下载地址： <a href="https://eznec.com/v7download/EZNEC_Pro2+_701_setup.exe">https://eznec.com/v7download/EZNEC_Pro2+_701_setup.exe</a><br>用户手册地址： <a href="https://www.eznec.com/ez70manual.html">https://www.eznec.com/ez70manual.html</a> </p><p>学习中……</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>天线</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>晾衣绳天线研究</title>
    <link href="/2022/08/31/%E6%99%BE%E8%A1%A3%E7%BB%B3%E5%A4%A9%E7%BA%BF%E7%A0%94%E7%A9%B6/"/>
    <url>/2022/08/31/%E6%99%BE%E8%A1%A3%E7%BB%B3%E5%A4%A9%E7%BA%BF%E7%A0%94%E7%A9%B6/</url>
    
    <content type="html"><![CDATA[<p>最近通过了业余无线电B证考试，于是小黄鱼收了一台协谷G90S和一个Tumd双桨电键。比电台更重要的是天线系统，通过阅读《天线手册》，以及网上进行的一些搜索，结合指标成本考量，先后排除了小环天线（贵、不易加工）、GP天线（依赖地网，效率低）、端馈天线（射频泄露），所以转了一圈还是回到了偶极子天线。查找资料过程中，** Robert Victor, VA2ERY** 撰写的<a href="http://www.w1npp.org/events/2010/2010-f~1/antennas/wire/980705~1.PDF">The Clothesline Antenna</a>提供了宝贵参考。结合该文，我们来研究一下如何自制晾衣绳天线。</p><h1 id="天线尺寸"><a href="#天线尺寸" class="headerlink" title="天线尺寸"></a>天线尺寸</h1><p>晾衣绳天线占用尺寸与典型的半波长偶极子天线相同(注：异于经典半波长偶极子天线，晾衣绳天线更接近于Folded Dipole Antenna)，这里的半波长对应的是天线最低谐振频率，如此一来其整数倍频率也可以在天线上自然谐振（当然馈电点可能要移动）。家里的院子大概是12米的正方形，所以很遗憾我们的天线最低只能支持到20米段，对应14MHz。对于晾衣绳天线，天线需要的导线长度加倍，<br>用随机搜到的一个偶极天线计算器算了下，14MHz对应长度为10.18903米，考虑到滑轮尺寸，大概需要导线长度20.43806米。不过这只是粗略计算，实际还得以天线两端固定点距离为准，不过不会相差计算结果太多。</p><h1 id="天线线材"><a href="#天线线材" class="headerlink" title="天线线材"></a>天线线材</h1><p>降低成本直接选择钢丝绳。淘宝直径2mm的304不锈钢绳（带PVC外皮，总共直径3mm）卖0.9元1米，买25米足够了，成本22.5元。参考<a href="https://sz1a.org/en/featured-articles/whats-the-best-wire-for-a-dipole-video/">What’s the best wire for a dipole? (video) </a>对多种材质导线进行的测评，不同材质对辐射信号强度的影响微乎其微，所以没必要用昂贵而脆弱的铜线。有些人推荐AWG 12规格的铜线，不过选择权在你。<br>另一个关注点是导线是否需要绝缘，即裸线VS带绝缘层。<a href="https://www.reddit.com/r/amateurradio/comments/2pehn5/solid_bare_wire_vs_insulated_wire_elements_thick/">网友测试结果</a>表明，绝缘层会增加天线的电气长度，从而降低谐振频率。例如，按照28MHz计算的长度，实际谐振在26.5MHz。所以在使用带绝缘层的导线时，长度应该比计算长度短一些。<br>最后是导线的粗细。导线越粗，天线带宽越大。不过这一点主要对于UV段天线有用，短波天线需要为了重量做出妥协。</p><h1 id="滑轮"><a href="#滑轮" class="headerlink" title="滑轮"></a>滑轮</h1><p>计划使用304轴承滑轮，2只36元包邮。这种滑轮顶部有拉绳固定件，用绳子固定起来应该会很方便。</p><h1 id="馈线"><a href="#馈线" class="headerlink" title="馈线"></a>馈线</h1><p>需要用到2种馈线。一种是普通的50Ω同轴线，这个没什么好说的，手上有成品线。另一种是300Ω的“twin lead”，研究了一下其实就是淘宝上卖的老式300欧黑白电视扁馈线，1.2元1米。这种线我们用来连接钢丝绳与巴伦。据VA2ERY称这种馈线的损耗比一般的同轴线小很多，而且由于价格便宜，长一些也没关系。20米长度足够了。</p><h1 id="巴伦"><a href="#巴伦" class="headerlink" title="巴伦"></a>巴伦</h1><p>为了实现300Ω到50Ω的阻抗变换，需要一个6:1的巴伦。关于巴伦的作用于制作方法可以参考<a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.192.3155&rep=rep1&type=pdf">A Ham’s Guide to RFI, Ferrites, Baluns, and Audio Interfacing</a>和<a href="https://vk6ysf.com/balun_6-1.htm">1:6 VOLTAGE BALUN</a>，不过我手头没有材料，时间也比较紧缺，直接买成品好了，200W的淘宝价格大概72元。<br>上述成本大概174元，便于加工，可行性很高。<br>不过我们对40米段还没有死心，半波长偶极子天线到底能不能弯折呢？以下文献对此进行了讨论：</p><ol><li><a href="https://dailyantenna.blogspot.com/2019/03/fitting-dipole-into-smaller-space.html">Fitting a dipole into a smaller space</a></li><li><a href="http://webclass.org/k5ijb/antennas/Fold-Bend-and-Mutilate.htm">Fold, Bend, and Mutilate Making a Dipole Fit the Space Available</a></li><li><a href="https://www.qsl.net/kk4obi/Center-fed%20L-Dipoles%20Horizontal.html">Discussion about Horizontal Dipoles bent into an “L” shape</a></li><li><a href="https://www.nonstopsystems.com/radio/pdf-ant/article-bnt-dipole.pdf">The Bent Dipole</a></li></ol><p>总的来说，弯折会使半波长偶极子天线增益降低，中央馈电点阻抗变小，不过在能够保证三分之二直线长度的情况下，天线增益损失与馈电点阻抗变化都是完全可以接受的。另外V型弯折后貌似就是倒V天线的变种。</p><h1 id="天线表现"><a href="#天线表现" class="headerlink" title="天线表现"></a>天线表现</h1><p>前几天抽空把天线拉了起来，由于不方便测量两点距离（估计在11米-12米之间），天线的谐振频率偏低，不开天调情况下，在4.18MHz驻波比为1.0，8.45MHz为1.5，此时馈电点大致在天线中间。底噪比较大，日常S7起步，不过也可能是开关电源以及附近电瓶车充电站的干扰，等香蕉插头线到了用线性电源应该能降低一些。天线长度过段日子应该会进行调整，今天起早发现蜘蛛🕷在天线上结了网，等它搬走再动吧。</p><h1 id="使用求精4代电源后的表现"><a href="#使用求精4代电源后的表现" class="headerlink" title="使用求精4代电源后的表现"></a>使用求精4代电源后的表现</h1><p>昨天4mm香蕉插头转5.5X2.5mm DC公头的电源线到了，替换下显示器电源后底噪显著降低。40米段底噪从日常的S7起步降到了S4~S5左右，能抄收到一些业余电台的通信了。不过我发现 <strong>PS30SWIV</strong> 也是开关电源 。。。 过段时间拿电池盒供电对比一下底噪，再决定要不要把它换掉。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>天线</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FT-8900R操作Packet Radio教程——By BH2VJW</title>
    <link href="/2022/08/10/printro/"/>
    <url>/2022/08/10/printro/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>当初买FT-8900R时笔者还是纯纯的小白，买它的原因之一是《业余无线电通信（第五版）》的推荐，其二是电台支持四频段双工操作，其三是DATA插孔具有极强的迷惑性。我一度以为只要用数据线连接电台和电脑，就能传输数字信息，当然实际上并非如此。后来读了几遍手册，说是要用到TNC这个东西，然而国内根本没得卖，资料也近乎为零，ham群里大多在讨论mmdvm和FT8，没有人在玩Packet Radio。经过一段时间摸索，笔者终于验证出FT-8900R进行Packet Radio操作的一套可行方案。</p><h1 id="Packet-Radio沿革"><a href="#Packet-Radio沿革" class="headerlink" title="Packet Radio沿革"></a>Packet Radio沿革</h1><p>讨论Packet Radio无法跳过它的发展历史，否则许多疑惑就很难解答。一个比较系统的介绍是 <strong>WB9LOZ</strong> 成稿于上世纪九十年代的<a href="https://www.choisser.com/packet/">INTRODUCTION TO PACKET RADIO</a>，里面详细介绍了硬件构成、TNC命令、中继与节点的区别、BBS使用等内容。简而言之，Packet Radio起源于1980年的加拿大，并迅速在美国、西欧等地流行。那时Packet Radio的硬件系统一般为 <strong>电台-TNC-电脑&#x2F;哑终端</strong> ，也有 <strong>电台-调制解调器-电脑（运行软件充当软TNC）</strong> 这种比较少见的形式。TNC实现了 <strong>ASCII字符 - AFSK语音</strong> 之间的转换，是一种硬件设备，比较经典的TNC有TAPR出品的TNC-1和TNC-2，当年售价大概100美元。同时期国内爱好者能凑齐电台、电脑、TNC的恐怕凤毛麟角，这解释了为什么许多国内爱好者对Packet Radio、TNC之类名词毫无概念。</p><h1 id="2022年利用FT-8900R操作Packet-Radio所需的软硬件"><a href="#2022年利用FT-8900R操作Packet-Radio所需的软硬件" class="headerlink" title="2022年利用FT-8900R操作Packet Radio所需的软硬件"></a>2022年利用FT-8900R操作Packet Radio所需的软硬件</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ol><li>FT-8900R电台。</li><li>马工盒子，充当电台连接器，同时提供PTT控制。对于八重洲那些采用6 PIN mini-DIN接口（笔者按:貌似就是PS&#x2F;2接口）的车台，国外的成品连接器<a href="https://hamprojects.info/dinah/">Dinah</a>提供了更简洁的接口。Dinah使用CM119声卡方案，利用CM119的GPIO针脚实现了PTT控制功能，这样连接器只需要通过一个6 PIN mini-DIN接口连接电台，一个USB接口连接电脑就可以了，不再需要额外的声卡，也不需要额外的USB接口提供PTT控制。动手能力强的爱好者可以购买CM108&#x2F;CM119方案的USB声卡自行改造。</li><li>USB声卡，9.9元包邮款即可，需要Speaker与MIC有独自接口。高级一些的还会有Line IN接口不过非必需。</li><li>电脑。为降低成本，我在一个40元的电视盒子上运行Manjaro ARM系统，充当电脑主机。这个盒子具备4核2GHz的处理器，令当年专门用来搭建Node、BBS的奔腾处理器电脑望尘莫及，所以不需要担心硬件性能不够。</li></ol><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ol><li><a href="https://github.com/wb2osz/direwolf">Direwolf</a><br>我们用它来充当软件KISS TNC。通过KISS OVER TCP功能可以方便地进行远程连接，即运行Direwolf和与电台直接连接的电脑，与我们运行客户端软件用来收发消息的电脑不必是同一台，这为远程使用提供了便利。Direwolf也可以创建伪终端设备（编者按：该特性仅对Linux有效）供老式程序使用。此外Direwolf还可以提供APRS GPS Tracker、Digipeater、IGate、APRStt gateway等功能，有兴趣的可以深入了解。<br>Direwolf的编译毫无难度，拉取Github源码后编译即可，需要的依赖Manjaro仓库中都有提供。</li><li><a href="https://www.cantab.net/users/john.wiseman/Documents/LinBPQGuides.html">LinBPQ</a><br>LinBPQ可以在一台电脑上同时提供Node、BBS、聊天服务器、WinLink网关等功能，支持KISS OVER TCP。编译和配置稍显麻烦，方法可以参考<a href="https://tccmu.com/2022/07/25/linbpq/">Manjaro ARM编译LinBPQ</a>和<a href="https://tccmu.com/2022/07/28/linbpq-config/">LinBPQ配置</a>。</li><li><a href="https://github.com/ve7fet/linuxax25/releases/tag/ax25tools-1.0.4">ax25tools</a><br><strong>ax25tools</strong> 提供了ax25apps， ax25tools和libax25，需要分别编译安装。注意对于ax25app，需要将<strong>linuxax25-ax25tools-1.0.4&#x2F;ax25apps&#x2F;call&#x2F;call.c</strong>中第45行 <strong>#include &lt;ncursesw&#x2F;ncurses.h&gt;</strong> 修改为 <strong>#include &lt;ncurses.h&gt;</strong> 才能顺利编译。可以参考<a href="https://tccmu.com/2022/07/21/pat/">在Manjaro ARM中编译运行Pat</a>。</li><li><a href="https://github.com/la5nta/pat">Pat</a><br>Pat是一个跨平台的 Winlink 客户端，提供了命令行界面和网页界面，特性和编译使用方法可以参考<a href="https://tccmu.com/2022/07/21/pat/">在Manjaro ARM中编译运行Pat</a>。</li></ol><h1 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h1><h2 id="硬件连接"><a href="#硬件连接" class="headerlink" title="硬件连接"></a>硬件连接</h2><p>电视盒子1号USB连接USB声卡，2号USB口连接马工盒子。马工盒子Data口连接电台，speaker与mic分别连接声卡的speaker与mic。</p><h2 id="编解码测试"><a href="#编解码测试" class="headerlink" title="编解码测试"></a>编解码测试</h2><p>测试了1200与9600两种模式，经测试PTT控制正常，1200模式下能够清楚收听到经过调制的音频信号，编码解码正常。packet-1200对设备的要求很小，甚至用喇叭对着麦克风也能工作。<br>9600模式不经历 <strong>数字信号-调制语音</strong>之间的转换，通过FSK方式调制，听起来就像沙沙的噪音，无法分辨细节。Direwolf提供了几个便利的小工具用于测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ gen_packets -o x.wav -B 9600 <span class="hljs-comment">#生成音频</span><br>$ atest -B 9600 x.wav <span class="hljs-comment"># 对音频解码</span><br>44100 samples per second.  16 bits per sample.  1 audio channels.<br>32576 audio bytes <span class="hljs-keyword">in</span> file.  Duration = 0.4 seconds.<br>Fix Bits level = 0<br>Channel 0: 9600 baud, K9NG/G3RUH,  , 44100 sample rate x 3.<br>The ratio of audio samples per sec (44100) to data rate <span class="hljs-keyword">in</span> baud (9600) is 4.6<br>This is on the low side <span class="hljs-keyword">for</span> best performance.  Can you use a higher sample rate?<br>For example, can you use 48000 rather than 44100?<br><br>DECODED[1] 0:00.091 WB2OSZ-15 audio level = 50(+33/-33)<br>[0] WB2OSZ-15&gt;TEST:,The quick brown fox jumps over the lazy dog!  1 of 4<br><br>DECODED[2] 0:00.183 WB2OSZ-15 audio level = 50(+33/-33)<br>[0] WB2OSZ-15&gt;TEST:,The quick brown fox jumps over the lazy dog!  2 of 4<br><br>DECODED[3] 0:00.275 WB2OSZ-15 audio level = 50(+33/-33)<br>[0] WB2OSZ-15&gt;TEST:,The quick brown fox jumps over the lazy dog!  3 of 4<br><br>DECODED[4] 0:00.368 WB2OSZ-15 audio level = 50(+33/-33)<br>[0] WB2OSZ-15&gt;TEST:,The quick brown fox jumps over the lazy dog!  4 of 4<br><br><br>4 from x.wav<br>4 packets decoded <span class="hljs-keyword">in</span> 0.014 seconds.  25.8 x realtime<br></code></pre></td></tr></table></figure><p>在另一台笔记本电脑上使用gen_packets生成音频，笔记本speaker输出口连接运行Direwolf主机的USB声卡MIC口，测试解码效果。经过测试音频中包含的4条信息在95%以上的情况下只能解码出前3条，最后一条消失不见。调整输出音频与声卡音量后，问题无改善。或许是USB声卡的带宽不够？这说明9600对系统硬件的要求更高。</p><h2 id="Node，BBS，聊天服务器测试"><a href="#Node，BBS，聊天服务器测试" class="headerlink" title="Node，BBS，聊天服务器测试"></a>Node，BBS，聊天服务器测试</h2><p>由于附近没有操作Packet Radio的爱好者故未能完成测试，不过不连接电台直接通过AX.25本地连接测试没问题，推测运行正常。另外LinBPQ的管理页面Bug较多，如需修改配置请直接改动配置文件，在网页修改容易报错崩溃。</p><h2 id="Pat测试"><a href="#Pat测试" class="headerlink" title="Pat测试"></a>Pat测试</h2><p>国内没有2米段的节点所以无法测试通过电波访问情况，不过使用telnet收发信正常，AX.25支持正常，推断无问题。</p>]]></content>
    
    
    
    <tags>
      
      <tag>packet radio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QQ号丢了</title>
    <link href="/2022/08/08/qqlost/"/>
    <url>/2022/08/08/qqlost/</url>
    
    <content type="html"><![CDATA[<p>前几天发现QQ号上不去了，提示需要输入密码。登录密码早就忘了，试图通过短信验证码登录，发现当初注册QQ号的号码早已注销，于是号就没了~~~<br>号里没有绑定支付手段，也没有敏感信息，不过可惜了包括辽宁省业余无线电在内的一些群。为防止有人上去捣乱，还是特此声明一下：</p><p>本人尾号为5834的QQ号已无法登录，该号后续一切活动均与本人无关。我是BH2VJW。</p><p>当日更新：试了几个常用密码后成功登录。改绑手机号比较麻烦，就这么凑合用吧，等哪天真上不去了再说。</p>]]></content>
    
    
    
    <tags>
      
      <tag>QQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M之RTL8189ETV特性探究</title>
    <link href="/2022/08/05/rtl8189etv/"/>
    <url>/2022/08/05/rtl8189etv/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs bash">加载驱动后看一看RTL8189ETV支持的特性：<br>$ iw list<br>Wiphy phy0<br>        wiphy index: 0<br>        max <span class="hljs-comment"># scan SSIDs: 9</span><br>        max scan IEs length: 2304 bytes<br>        max <span class="hljs-comment"># sched scan SSIDs: 0</span><br>        max <span class="hljs-comment"># match sets: 0</span><br>        Retry short <span class="hljs-built_in">limit</span>: 7<br>        Retry long <span class="hljs-built_in">limit</span>: 4<br>        Coverage class: 0 (up to 0m)<br>        Supported Ciphers:<br>                * WEP40 (00-0f-ac:1)<br>                * WEP104 (00-0f-ac:5)<br>                * TKIP (00-0f-ac:2)<br>                * CCMP-128 (00-0f-ac:4)<br>                * CMAC (00-0f-ac:6)<br>        Available Antennas: TX 0 RX 0<br>        Supported interface modes:<br>                 * IBSS<br>                 * managed<br>                 * AP<br>                 * P2P-client<br>                 * P2P-GO<br>        Band 1:<br>                Capabilities: 0x1962<br>                        HT20/HT40<br>                        Static SM Power Save<br>                        RX HT20 SGI<br>                        RX HT40 SGI<br>                        RX STBC 1-stream<br>                        Max AMSDU length: 7935 bytes<br>                        DSSS/CCK HT40<br>                Maximum RX AMPDU length 65535 bytes (exponent: 0x003)<br>                Minimum RX AMPDU time spacing: 16 usec (0x07)<br>                HT Max RX data rate: 150 Mbps<br>                HT TX/RX MCS rate indexes supported: 0-7<br>                Bitrates (non-HT):<br>                        * 1.0 Mbps<br>                        * 2.0 Mbps<br>                        * 5.5 Mbps<br>                        * 11.0 Mbps<br>                        * 6.0 Mbps<br>                        * 9.0 Mbps<br>                        * 12.0 Mbps<br>                        * 18.0 Mbps<br>                        * 24.0 Mbps<br>                        * 36.0 Mbps<br>                        * 48.0 Mbps<br>                        * 54.0 Mbps<br>                Frequencies:<br>                        * 2412 MHz [1] (20.0 dBm)<br>                        * 2417 MHz [2] (20.0 dBm)<br>                        * 2422 MHz [3] (20.0 dBm)<br>                        * 2427 MHz [4] (20.0 dBm)<br>                        * 2432 MHz [5] (20.0 dBm)<br>                        * 2437 MHz [6] (20.0 dBm)<br>                        * 2442 MHz [7] (20.0 dBm)<br>                        * 2447 MHz [8] (20.0 dBm)<br>                        * 2452 MHz [9] (20.0 dBm)<br>                        * 2457 MHz [10] (20.0 dBm)<br>                        * 2462 MHz [11] (20.0 dBm)<br>                        * 2467 MHz [12] (20.0 dBm) (no IR)<br>                        * 2472 MHz [13] (20.0 dBm)<br>                        * 2484 MHz [14] (disabled)<br>        Supported commands:<br>                 * new_interface<br>                 * set_interface<br>                 * new_key<br>                 * start_ap<br>                 * new_station<br>                 * set_bss<br>                 * join_ibss<br>                 * set_pmksa<br>                 * del_pmksa<br>                 * flush_pmksa<br>                 * remain_on_channel<br>                 * frame<br>                 * set_channel<br>                 * connect<br>                 * disconnect<br>        WoWLAN support:<br>                 * wake up on anything (device continues operating normally)<br>        software interface modes (can always be added):<br>        interface combinations are not supported<br>        Device supports SAE with AUTHENTICATE <span class="hljs-built_in">command</span><br>        Device supports scan flush.<br>        max <span class="hljs-comment"># scan plans: 1</span><br>        max scan plan interval: -1<br>        max scan plan iterations: 0<br>        Supported TX frame types:<br>                 * IBSS: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0<br>                 * managed: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0<br>                 * AP: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0<br>                 * AP/VLAN: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0<br>                 * P2P-client: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0<br>                 * P2P-GO: 0x00 0x10 0x20 0x30 0x40 0x50 0x60 0x70 0x80 0x90 0xa0 0xb0 0xc0 0xd0 0xe0 0xf0<br>        Supported RX frame types:<br>                 * IBSS: 0xd0<br>                 * managed: 0x40 0xb0 0xd0<br>                 * AP: 0x00 0x20 0x40 0xa0 0xb0 0xc0 0xd0<br>                 * AP/VLAN: 0x00 0x20 0x40 0xa0 0xb0 0xc0 0xd0<br>                 * P2P-client: 0x40 0xd0<br>                 * P2P-GO: 0x00 0x20 0x40 0xa0 0xb0 0xc0 0xd0<br>        Supported extended features:<br></code></pre></td></tr></table></figure><p>看起来支持的无线加密类型只有这几个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Supported Ciphers:<br>               * WEP40 (00-0f-ac:1)<br>               * WEP104 (00-0f-ac:5)<br>               * TKIP (00-0f-ac:2)<br>               * CCMP-128 (00-0f-ac:4)<br>               * CMAC (00-0f-ac:6)<br></code></pre></td></tr></table></figure><p>看起来这就是我们的R3300-M无法连接到WIFI的原因，现在的路由器都是WPA起步了，好一些的可以支持到WPA3。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>aarch64</tag>
      
      <tag>arm64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M运行Manjaro ARM Vim2 22.06</title>
    <link href="/2022/08/04/manjaro2206/"/>
    <url>/2022/08/04/manjaro2206/</url>
    
    <content type="html"><![CDATA[<p>Manjaro ARM 22.06已经发布一段时间，刚好我们需要重新刷系统，镜像还是选用Vim2： <a href="https://github.com/manjaro-arm/vim2-images/releases">https://github.com/manjaro-arm/vim2-images/releases</a><br>在最近的几个版本中，系统的启动方式经历了几次变化。在Vim2 22.06镜像中，boot分区只包含下述文件&#x2F;目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">ls</span> -l /boot<br>drwxr-xr-x 8 root root     8192 Aug  3 22:49 dtbs<br>drwxr-xr-x 2 root root     8192 Jun  4 05:03 extlinux<br>-rw-r--r-- 1 root root 24730112 Jul 12 23:44 Image<br>-rw-r--r-- 1 root root  8382621 Aug  3 22:50 initramfs-linux.img<br>-rw-r--r-- 1 root root  1363968 Feb 12 00:11 u-boot.bin<br></code></pre></td></tr></table></figure><p>需要稍加变动以支持R3300-M启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">-rw-r--r-- 1 root root      713 Jul 28 15:17 aml_autoscript<br>-rw-r--r-- 1 root root      463 Jul 28 15:17 aml_autoscript.zip<br>drwxr-xr-x 8 root root     8192 Aug  3 22:49 dtbs<br>drwxr-xr-x 2 root root     8192 Jun  4 05:03 extlinux<br>-rw-r--r-- 1 root root 24730112 Jul 12 23:44 Image<br>-rw-r--r-- 1 root root  8382621 Aug  3 22:50 initramfs-linux.img<br>-rw-r--r-- 1 root root      537 Aug  4 06:34 s905_autoscript<br>-rw-r--r-- 1 root root  1363968 Feb 12 00:11 u-boot.bin<br>-rw-r--r-- 1 root root   609247 Aug  4 06:30 u-boot.ext<br></code></pre></td></tr></table></figure><p>注意补充的几个文件，u-boot.bin可以删掉。这几个文件我已经打包好： <a href="bootfiles.tgz">bootfiles.tgz</a>，注意你需要选择合适的u-boot文件，然后重命名为u-boot.ext。</p><p>Manjaro ARM Mininal 22.06非常简洁，总共占用空间1.5GB，提供了206个软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">df</span> -h<br>Filesystem      Size  Used Avail Use% Mounted on<br>dev             331M     0  331M   0% /dev<br>run             465M  7.5M  457M   2% /run<br>/dev/mmcblk0p2  115G  1.4G  109G   2% /<br>tmpfs           465M     0  465M   0% /dev/shm<br>tmpfs           465M     0  465M   0% /tmp<br>/dev/mmcblk0p1  458M   45M  413M  10% /boot<br>tmpfs            93M     0   93M   0% /run/user/1000<br><br>$ pacman -Q | <span class="hljs-built_in">wc</span><br>206     412    3746<br></code></pre></td></tr></table></figure><p>软件包还可以继续精简，比如 <strong>ap6398s-firmware</strong> 显然可以删掉因为R3300-M使用的是RTL8189ETV。另外经过测试，主线内核在22.06中支持良好，关机重启都正常，没必要使用odroid内核了。不过Vim2镜像自带的 <strong>linux-khadas</strong> 内核简单使用也没发现问题，根据个人喜好选用吧。<br>另外之前将Manjaro ARM安装到emmc分区的试验没有成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs bash">U-Boot 2015.01-gf813653 (Oct 30 2015 - 09:47:48)<br><br>DRAM:  1 GiB<br>Relocation Offset is: 36ed6000<br>register usb cfg[0][1] = 0000000037f62b98<br>register usb cfg[0][2] = 0000000037f62bb8<br>register usb cfg[2][0] = 0000000037f62bd8<br>vpu detect <span class="hljs-built_in">type</span>: 5<br>vpu clk_level = 7<br><span class="hljs-built_in">set</span> vpu clk: 666667000Hz, readback: 666660000Hz(0x300)<br>boot_device_flag : 1<br>Nand PHY Ver:1.01.001.0006 (c) 2013 Amlogic Inc.<br>init bus_cycle=6, bus_timing=8, system=5.0ns<br>reset failed<br>get_chip_type and ret:fffffffe<br>get_chip_type and ret:fffffffe<br>chip detect failed and ret:fffffffe<br>nandphy_init failed and ret=0xfffffff1<br>MMC:   aml_priv-&gt;desc_buf = 0x0000000033ec6770<br>aml_priv-&gt;desc_buf = 0x0000000033ec8900<br>SDIO Port B: 0, SDIO Port C: 1<br>[mmc_init] mmc init success<br>mmc <span class="hljs-built_in">read</span> lba=0x14000, blocks=0x400<br>start dts,buffer=0000000033ecad70,dt_addr=0000000033ecad70<br>parts: 11<br>00:      logo   0000000002000000 1<br>01:  recovery   0000000002000000 1<br>02:       rsv   0000000000800000 1<br>03:       <span class="hljs-built_in">tee</span>   0000000000800000 1<br>04:     crypt   0000000002000000 1<br>05:      misc   0000000002000000 1<br>06: instaboot   0000000020000000 1<br>07:      boot   0000000002000000 1<br>08:    system   0000000050000000 1<br>09:     cache   0000000020000000 2<br>10:      data   ffffffffffffffff 4<br>get_dtb_struct: Get emmc dtb OK!<br>[mmc_get_partition_table] skip cache partition.<br>Partition table get from SPL is :<br>        name                        offset              size              flag<br>===================================================================================<br>   0: bootloader                         0            400000                  0<br>   1: reserved                     2400000           4000000                  0<br>   2: cache                        6c00000          20000000                  2<br>   3: <span class="hljs-built_in">env</span>                         27400000            800000                  0<br>   4: logo                        28400000           2000000                  1<br>   5: recovery                    2ac00000           2000000                  1<br>   6: rsv                         2d400000            800000                  1<br>   7: <span class="hljs-built_in">tee</span>                         2e400000            800000                  1<br>   8: crypt                       2f400000           2000000                  1<br>   9: misc                        31c00000           2000000                  1<br>  10: instaboot                   34400000          20000000                  1<br>  11: boot                        54c00000           2000000                  1<br>  12: system                      57400000          50000000                  1<br>  13: data                        a7c00000          41400000                  4<br>mmc <span class="hljs-built_in">read</span> lba=0x12000, blocks=0x1<br>mmc <span class="hljs-built_in">read</span> lba=0x12001, blocks=0x1<br>mmc_read_partition_tbl: mmc <span class="hljs-built_in">read</span> partition OK!<br>eMMC/TSD partition table have been checked OK!<br>mmc <span class="hljs-built_in">env</span> offset: 0x27400000<br>In:    serial<br>Out:   serial<br>Err:   serial<br>[store]To run cmd[emmc dtb_read 0x1000000 0x40000]<br><span class="hljs-built_in">read</span> emmc dtb<br>Net:   Meson_Ethernet<br>wipe_data=successful<br>wipe_cache=successful<br>upgrade_step=2<br>reboot_mode=normal<br>hpd_state=0<br>[CANVAS]addr=0x3f800000 width=3840, height=2160<br><br>Not find <span class="hljs-string">&#x27;576cvbs&#x27;</span> mapped VIC<br>Err imgread(L315):Logo header err.<br>There is no valid bmp file at the given address<br>amlkey_init() enter!<br>[EFUSE_MSG]keynum is 4<br>[KM]Error:f[key_manage_query_size]L504:key[usid] not programed yet<br>[KM]Error:f[key_manage_query_size]L504:key[deviceid] not programed yet<br>gpio: pin GPIOAO_3 (gpio 122) value is 1<br>Hit any key to stop autoboot:  0<br>ret = 1 .(Re)start USB...<br>USB0:   dwc_usb driver version: 2.94 6-June-2012<br>USB (0) peri reg base: c0000000<br>USB (0) use clock <span class="hljs-built_in">source</span>: XTAL input, div: 1<br>USB (0) base addr: 0xc9000000<br>Force <span class="hljs-built_in">id</span> mode: Host<br>dwc_otg: No USB device found !<br>lowlevel init failed<br>USB1:   dwc_usb driver version: 2.94 6-June-2012<br>USB (1) peri reg base: c0000020<br>USB (1) use clock <span class="hljs-built_in">source</span>: XTAL input, div: 1<br>USB (1) base addr: 0xc9100000<br>Force <span class="hljs-built_in">id</span> mode: Host<br>dwc_otg: No USB device found !<br>lowlevel init failed<br>USB error: all controllers failed lowlevel init<br>** Bad device usb 0 **<br>** Bad device usb 1 **<br>** Bad device usb 2 **<br>** Bad device usb 3 **<br>[mmc_init] mmc init success<br>switch to partitions <span class="hljs-comment">#0, OK</span><br>mmc1(part 0) is current device<br><br>MMC <span class="hljs-built_in">read</span>: dev <span class="hljs-comment"># 1, block # 8192, count 3 ... 3 blocks read: OK</span><br><span class="hljs-comment">## Executing script at 01020000</span><br><span class="hljs-comment">########## cmd=    echo &quot;Select EMMC&quot;</span><br>    mmc dev 1<br>    <span class="hljs-built_in">sleep</span> 3<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Set env variables&quot;</span><br>    setenv dtb_addr 0x1000000<br>    setenv dtb_sector 0x2003<br>    setenv dtb_block_cnt 0x47<br>    setenv env_addr 0x1040000<br>    setenv env_sector 0x204a<br>    setenv env_block_cnt 0x1<br>    setenv env_size 329<br>    setenv kernel_addr 0x11000000<br>    setenv kernel_sector 0x204b<br>    setenv kernel_block_cnt 0xbcae<br>    setenv initrd_addr 0x13000000<br>    setenv initrd_sector 0x32000<br>    setenv initrd_block_cnt 0x3fe7<br>    setenv boot_start booti <span class="hljs-variable">$&#123;kernel_addr&#125;</span> <span class="hljs-variable">$&#123;initrd_addr&#125;</span> <span class="hljs-variable">$&#123;dtb_addr&#125;</span><br>    setenv addmac <span class="hljs-string">&#x27;if printenv mac; then setenv bootargs $&#123;bootargs&#125; mac=$&#123;mac&#125;; elif printenv eth_mac; then setenv bootargs $&#123;bootargs&#125; mac=$&#123;eth_mac&#125;; elif printenv ethaddr; then setenv bootargs $&#123;bootargs&#125; mac=$&#123;ethaddr&#125;; fi&#x27;</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Read mmc partitions&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Read /boot/uEnv_emmc.txt from EMMC&quot;</span><br>    <span class="hljs-keyword">if</span> mmc <span class="hljs-built_in">read</span> <span class="hljs-variable">$&#123;env_addr&#125;</span> <span class="hljs-variable">$&#123;env_sector&#125;</span> <span class="hljs-variable">$&#123;env_block_cnt&#125;</span>; <span class="hljs-keyword">then</span> <span class="hljs-built_in">env</span> import -t <span class="hljs-variable">$&#123;env_addr&#125;</span> <span class="hljs-variable">$&#123;env_size&#125;</span>;setenv bootargs <span class="hljs-variable">$&#123;APPEND&#125;</span>;<span class="hljs-built_in">printenv</span> bootargs;<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Read zImage from EMMC&quot;</span>;<span class="hljs-keyword">if</span> mmc <span class="hljs-built_in">read</span> <span class="hljs-variable">$&#123;kernel_addr&#125;</span> <span class="hljs-variable">$&#123;kernel_sector&#125;</span> <span class="hljs-variable">$&#123;kernel_block_cnt&#125;</span>; <span class="hljs-keyword">then</span> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Read uInitrd from EMMC&quot;</span>;<span class="hljs-keyword">if</span> mmc <span class="hljs-built_in">read</span> <span class="hljs-variable">$&#123;initrd_addr&#125;</span> <span class="hljs-variable">$&#123;initrd_sector&#125;</span> <span class="hljs-variable">$&#123;initrd_block_cnt&#125;</span>; <span class="hljs-keyword">then</span> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Read FDT from EMMC&quot;</span>;<span class="hljs-keyword">if</span> mmc <span class="hljs-built_in">read</span> <span class="hljs-variable">$&#123;dtb_addr&#125;</span> <span class="hljs-variable">$&#123;dtb_sector&#125;</span> <span class="hljs-variable">$&#123;dtb_block_cnt&#125;</span>; <span class="hljs-keyword">then</span> run addmac;<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Start booting system...&quot;</span>;run boot_start;<span class="hljs-keyword">fi</span>;<span class="hljs-keyword">fi</span>;<span class="hljs-keyword">fi</span>;<span class="hljs-keyword">fi</span><br><br>Select EMMC<br>[mmc_init] mmc init success<br>switch to partitions <span class="hljs-comment">#0, OK</span><br>mmc1(part 0) is current device<br>Set <span class="hljs-built_in">env</span> variables<br>Read mmc partitions<br>Read /boot/uEnv_emmc.txt from EMMC<br><br>MMC <span class="hljs-built_in">read</span>: dev <span class="hljs-comment"># 1, block # 8266, count 1 ... 1 blocks read: OK</span><br>bootargs=root=/dev/mmcblk1p1 rootflags=data=writeback rw console=ttyAML0,115200n8 console=tty0 no_console_suspend consoleblank=0 fsck.fix=<span class="hljs-built_in">yes</span> fsck.repair=<span class="hljs-built_in">yes</span> net.ifnames=0 quiet splash plymouth.ignore-serial-consoles blkdevparts=mmcblk1:-@116M(rootfs)<br>Read zImage from EMMC<br><br>MMC <span class="hljs-built_in">read</span>: dev <span class="hljs-comment"># 1, block # 8267, count 48302 ... 48302 blocks read: OK</span><br>Read uInitrd from EMMC<br><br>MMC <span class="hljs-built_in">read</span>: dev <span class="hljs-comment"># 1, block # 204800, count 16359 ... 16359 blocks read: OK</span><br>Read FDT from EMMC<br><br>MMC <span class="hljs-built_in">read</span>: dev <span class="hljs-comment"># 1, block # 8195, count 71 ... 71 blocks read: OK</span><br>mac=76:f1:6c:90:00:03<br>Start booting system...<br><span class="hljs-string">&quot;Synchronous Abort&quot;</span> handler, esr 0x96000010<br>ELR:     37ee00cc<br>LR:      37ee00c0<br>x0 : 0000000037f73a00 x1 : 0000000000000000<br>x2 : 0000000001830000 x3 : 0000000001830000<br>x4 : 0000000000000086 x5 : 0000000011000000<br>x6 : 0000000037f455c0 x7 : 0000000000000044<br>x8 : 0000000000000001 x9 : 0000000000000002<br>x10: 8c400409c940146c x11: a850c8189a6e9ad0<br>x12: 0000000000000000 x13: 0000000000000000<br>x14: 0000000000000000 x15: 0000000037ed70d0<br>x16: 0000000037ed72b4 x17: 0000000000000000<br>x18: 0000000033ec5e28 x19: 0000000037f738c0<br>x20: 0000000000000003 x21: 0000000033ed1068<br>x22: 0000000037f73000 x23: 0000000037f738c0<br>x24: 0000000000000000 x25: 0000000033ed1060<br>x26: 0000000037f685e0 x27: 0000000033ed1090<br>x28: 0000000000000000 x29: 0000000033ec4ca0<br><br>Resetting CPU ...<br></code></pre></td></tr></table></figure><p>虽说没成功，但是从UART输出来看已经很接近，而且盒子也没变砖，还是可以从TF卡启动，感兴趣的可以继续研究，我不缺TF卡就不折腾了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>aarch64</tag>
      
      <tag>arm64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M刷入Linux实验计划</title>
    <link href="/2022/08/03/s905-emmc/"/>
    <url>/2022/08/03/s905-emmc/</url>
    
    <content type="html"><![CDATA[<p>参考 <a href="https://github.com/d51x/armbian-s905">https://github.com/d51x/armbian-s905</a> ，计划再次试验将Linux系统刷入R3300-M盒子的emmc分区。<br>试验内容：</p><ol><li>试验能否将Armbian刷入R3300-M，验证可行性；</li><li>试验能否通过uEnv.txt方式启动最新版Manjaro ARM系统；</li><li>试验能否将Manjaro ARM刷入 R3300-M。</li></ol><p>为方便调试，笔记本电脑通过UART与盒子通信，观察盒子启动状态。如果UART无法交互，可通过在u-boot启动文件中指定printenv观察。</p><p>首先弄清几个启动文件的关系</p><p><strong>boot.cmd与boot.scr</strong><br>boot.cmd为纯文本文件，通过mkimage生成boot.scr:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkimage -C none -A arm -T script -d /boot/boot.cmd /boot/boot.scr<br></code></pre></td></tr></table></figure><p><strong>uEnv.txt</strong> 与 <strong>boot.scr</strong><br>根据<a href="https://stackoverflow.com/questions/28891221/uenv-txt-vs-boot-scr">uEnv.txt vs boot.scr</a>的说法，uEnv.txt可以预设置u-boot的环境变量，先于bootcmd运行。boot.scr可以执行u-boot脚本程序，同样先于bootcmd运行。不过我高度怀疑这段描述的准确性，具体参见下文。<br>补充：<strong>bootcmd</strong>与<strong>bootargs</strong>为u-boot中的环境变量。</p><p><strong>boot.ini</strong><br>boot.ini是一个纯文本文件。通过观察ophub发布的镜像可知，boot.ini读取了uEnv.txt，并将 <strong>APPEND</strong> 参数传递给了 <strong>bootargs</strong>这个环境变量。</p><p><strong>boot.ini</strong>与<strong>boot.scr</strong><br>参考 <a href="https://wiki.odroid.com/odroid-n2/software/boot_sequence">https://wiki.odroid.com/odroid-n2/software/boot_sequence</a> ，boot.ini与boot.scr是bootloader支持的两种启动脚本。boot.ini是纯文件，便于修改。这个文件最初被Hardkernel’s ODROID的开发板使用。如果文件首行是 <strong>ODROIDN2-BOOT-CONFIG</strong> ，那么bootloader就会开始执行boot.ini文件。(这解释了为什么Amlogic盒子的boot.ini文件首行都是这个)</p><p>boot.scr是传统形式的u-boot脚本。脚本开头为一段长度64字节的二进制头，包含了整个文件的校验信息以防文件损坏或被修改。其余的语句以test形式为主，设置环境变量或执行命令。由于boot.scr文件的特性，对其做出变更后，需要使用 <strong>mkimage</strong> 重新生成，具体命令参见前文。</p><p>个人猜测，在Amlogic设备上，bootloader会优先试图利用 <strong>boot.ini</strong> 启动，如果 <strong>boot.ini</strong> 不存在或者加载失败，再利用 <strong>boot.scr</strong> 尝试启动。两个文件的执行命令大体上是等价的。可以通过printenv命令检查具体优先顺序。</p><p>至此我们的第二步试验已有眉目。我们使用的 <strong>Manjaro ARM 22.06 VIM2 Minimal</strong> 版本 <strong>&#x2F;boot</strong> 分区只包含 u-boot.bin，dtbs目录以及extlinux目录。在先前的测试中，我将 <strong>aml_autoscript aml_autoscript.zip u-boot.ext</strong> 文件复制了过来，删掉了u-boot.bin并在extlinux.conf中配置了合适dtb，测试系统正常启动，主线内核也关机重启正常。不过尝试使用 <strong>uEnv.txt</strong> 启动时，由于既没有boot.scr，也没有 boot.ini，所以启动毫无意外地失败了。</p><p>小结：Amlogic设备上，bootloader读取boot.scr或者boot.ini启动，uEnv.txt被上述两个文件加载。boot.scr使用mkimage编译，boot.ini纯文本随便改。</p><p>最后再补充一些关于extlinux.conf的知识，参考自<a href="https://xilinx-wiki.atlassian.net/wiki/spaces/A/pages/749142017/Using+Distro+Boot+With+Xilinx+U-Boot">Using Distro Boot With Xilinx U-Boot</a>:<br>bootloader会优先试图加载&#x2F;extlinux&#x2F;extlinux.conf，如果没有找到，则查询 <strong>boot_targets</strong> 寻找备用文件，比如上面提到的 <strong>boot.scr</strong>。<br>extlinux.conf具有很多优点，但是不幸的是我们现在试图将Linux安装到emmc，厂商的老旧bootloader不支持extlinux这一特性。这也是放弃extlinux转而折腾boot.ini boot.scr uEnv.txt的原因所在。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>aarch64</tag>
      
      <tag>arm64</tag>
      
      <tag>Armbian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>业余无线电B证备考</title>
    <link href="/2022/08/01/b-test/"/>
    <url>/2022/08/01/b-test/</url>
    
    <content type="html"><![CDATA[<p>之前搭建packet radio节点的试验告一段落了。由于本地没有使用packet radio的ham，所以没办法测试解码效果。不过编码发送功能没有问题。另外systemd脚本也有一些问题。理想情况下ax25bind应该伴随direwolf一并重启，不过实际中虽然指定了PartOf参数，这个功能没有实现，算是小小的不完美。为了吸引到更多的爱好者参与packet radio，我计划整理出一个从理论到实操比较完整的入门教程。不过业余无线电考试快到了，B级考试还是要准备一下，packet radio暂时要放一放了。</p><p>B级考试需要记忆频率、Q短语、名词等比较琐碎的知识点。虽然有取巧记忆方法，不过为了日后规范使用频率，还是应该理解记忆。</p><h1 id="频段"><a href="#频段" class="headerlink" title="频段"></a>频段</h1><h2 id="业余业务作为专用业务频段"><a href="#业余业务作为专用业务频段" class="headerlink" title="业余业务作为专用业务频段"></a>业余业务作为专用业务频段</h2><p>7-7.2MHz（7.03-7.2 LSB） 14-14.25MHz（14.1 IARU, 14.1-14.35 USB） 21-21.45MHz（21.15 IARU， 21.125-21.45可USB， 除去21.1495-21.1505，即避让信标±500Hz） 28-29.7MHz（28.2 IARU, 28.3-29.3 USB， 29.51-29.7 FM） 47GHz</p><h2 id="业余业务作为主要业务的频段"><a href="#业余业务作为主要业务的频段" class="headerlink" title="业余业务作为主要业务的频段"></a>业余业务作为主要业务的频段</h2><p>1.8-2MHz 3.5-3.9MHz 14.25-14.35MHz 18.068-18.168MHz （WARC, 18.11 IARU， 18.1105-18.168 USB） 24.89-24.99MHz （WARC, 24.93 IARU， 24.9305-24.99 USB） 50-54MHz 144-148MHz（144-146唯一主要，146-148共同主要，避让 144-144.035和145.8-146）</p><h2 id="业余业务作为次要业务频段"><a href="#业余业务作为次要业务频段" class="headerlink" title="业余业务作为次要业务频段"></a>业余业务作为次要业务频段</h2><p>135.7-137.5KHz 10.1-10.15MHz（WARC，不能用于通话） 430-440MHz（避让431.9-432.240和435-438）</p><p>LF（低频，例135.7-137.8KHz）<br>MF（中频，例1.8-2MHz）<br>HF（高频，例28-29.87MHz）<br>VHF（甚高频，米波，例50-54MHz）<br>UHF（特高频，分米波，例2300-1450MHz）<br>SHF（超高频，厘米波，例C、Ku波段卫星电视广播）<br>EHF（极高频，毫米波，例241-250GHz）</p><h1 id="Q简语"><a href="#Q简语" class="headerlink" title="Q简语"></a>Q简语</h1><p>Q简语   问句含义   答句含义<br>QRA   你的电台名称是？   我的电台名称是…<br>QRB   你台离我台多远？   我们相距约为…<br>QRG   我的准确频率是多少?   你的准确频率是…<br>QRI   我的音调如何?   你的音调是(T1-T9)<br>QRJ   我的信号小吗   你的信号小<br>QRK   我的信号可辩度是多少?   你的信号可辩度是(R1-R5)<br>QRL   你忙吗？   我正忙<br>QRM   你受到他台干扰吗？   我正受到他台干扰 1.无 2.稍有 3.中等 4.严重 5.极端<br>QRN   你受到天电干扰吗？   我正受到天电干扰 1.无 2.稍有 3.中等 4.严重 5.极端<br>QRO   要我增加发信功率吗？   请增加发信功率<br>QRP   要我减低发信功率吗？   请减低发信功率<br>QRQ   要我发得快些吗？   请发快些<br>QRS   要我发得慢些吗？   请发慢些<br>QRT   要我停止拍发吗？   请停止拍发<br>QRU   你有事吗?   无事<br>QRV   你准备好了吗？   我已准备好了<br>QRW   需要我转告吗?   请转告<br>QRX   要我等多长时间？   请等待… …分钟<br>QRZ   谁在呼叫我？   …正在呼叫你</p><p>QSA   我的信号强度是多少?   你的信号强度是…<br>QSB   我的信号有衰落吗？   你的信号强度是，1.几乎不能抄收 2.弱 3.还好 4.好 5.很好<br>QSD   我的信号不完整吗?   你的信号不完整<br>QSL   你确认收妥&#x2F;QSL卡片吗？   我确认收妥&#x2F;QSL卡片<br>QSO   你能否和…直接（或转接）通信？   你能和…直接（或转接）通信？<br>QSP   你能中转到…吗   我能中转到…<br>QSU   能在这个频率(或某个频率)回复吗?   我将在此频率(或某频率)回复<br>QSV   有天电干扰要我在此频率发一串 V 字吗？   请在此频率发一串 V 字<br>QSW   你将在此频率(或某频率)发吗？   我将在此频率(或某频率)发<br>QSX   你将在某频率收听吗？   我将在某频率收听<br>QSY   要我改用其他频率拍发吗？   请改用…KHz&#x2F;MHz拍发<br>QSZ   要我每组发两遍吗？   请每组发两遍<br>QTB   要我查对组数吗？   请查对组数<br>QTC   你有几分报要发?   我有…分报要发<br>QTH   你的地理位置是？   我的地理位置是…<br>QTR   你的标准时间是?   我的标准时间是…</p><h1 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h1><p>SASE 写好收信人地址的信封<br>ALC  发信自动电平控制<br>AT   自动天线调谐<br>ATT  收信机自动增益衰减<br>AGC  收信机自动增益控制<br>PRE  收信机前置放大器<br>PROC 发信语音压缩<br>RIT  接收增量调谐<br>XIT  发射增量调谐</p><h1 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h1><h2 id="CQ分区"><a href="#CQ分区" class="headerlink" title="CQ分区"></a>CQ分区</h2><p>23 24（东沙、钓鱼） 27（黄岩岛）</p><h2 id="ITU分区"><a href="#ITU分区" class="headerlink" title="ITU分区"></a>ITU分区</h2><p>我国大区为3区，33 42 43 44（东沙、钓鱼） 50（黄岩岛）</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电考试</tag>
      
      <tag>B</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Packet Radio Systemd服务</title>
    <link href="/2022/07/28/packet-systemd/"/>
    <url>/2022/07/28/packet-systemd/</url>
    
    <content type="html"><![CDATA[<h1 id="direwolf-service"><a href="#direwolf-service" class="headerlink" title="direwolf.service"></a>direwolf.service</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs service"># /usr/lib/systemd/system/direwolf.service<br># direwolf.service<br><br>[Unit]<br>Description=Direwolf management<br>Documentation=https://tccmu.com<br>Requires=network-online.target<br><br>[Service]<br>User=marly<br>Type=oneshot<br>ExecStart=/usr/bin/screen -dmS direwolf /usr/local/bin/direwolf -c /home/marly/direwolf.conf -p<br>ExecStop=/usr/bin/killall -s INT direwolf<br>Restart=on-abnormal<br>RemainAfterExit=yes<br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h1 id="linbpq-service"><a href="#linbpq-service" class="headerlink" title="linbpq.service"></a>linbpq.service</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs service"># /usr/lib/systemd/system/linbpq.service<br># linbpq.service<br><br>[Unit]<br>Description=LinBPQ management<br>Documentation=https://tccmu.com<br>Requires=network-online.target<br>Wants=direwolf.service<br><br>[Service]<br>User=marly<br>Type=oneshot<br>WorkingDirectory=/home/marly/linbpq/<br>ExecStart=/usr/bin/screen -dmS linbpq /home/marly/linbpq/linbpq<br>ExecStop=/usr/bin/killall -s INT linbpq<br>Restart=on-abnormal<br>RemainAfterExit=yes<br># Use graceful shutdown with a reasonable timeout<br>TimeoutStopSec=15s<br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>这两个服务是以普通用户 <strong>marly</strong> 身份，在screen中运行的。开机时，会优先启动direwolf，然后启动linbpq。注意service文件中的用户名、工作路径、配置文件路径要修改成自己的。</p><h1 id="ax25bind-service"><a href="#ax25bind-service" class="headerlink" title="ax25bind.service"></a>ax25bind.service</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs service"># /usr/lib/systemd/system/ax25bind.service<br># ax25bind.service<br><br>[Unit]<br>Description=Bind PTY created by direwolf to axports<br>Documentation=https://tccmu.com<br>Requires=direwolf.service<br>PartOf=direwolf.service<br><br>[Service]<br>User=root<br>Type=oneshot<br>ExecStartPre=sleep 3<br>ExecStart=/bin/bash -c &quot;/usr/local/sbin/kissattach `/usr/bin/ls -l /tmp/kisstnc | /usr/bin/awk &#x27;&#123; print $11 &#125;&#x27;` wl2k &amp;&amp; exit&quot;<br>ExecStartPost=/usr/local/sbin/kissparms -c 1 -p wl2k<br>ExecStop=/usr/bin/killall kissattach<br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>将上述service文件放在 <code>/usr/lib/systemd/system/</code> 目录中，然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now direwolf.service<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now linbpq.service<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now ax25bind.service<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>bpq32</tag>
      
      <tag>Systemd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LinBPQ配置</title>
    <link href="/2022/07/28/linbpq-config/"/>
    <url>/2022/07/28/linbpq-config/</url>
    
    <content type="html"><![CDATA[<p>之前已经成功为Manjaro ARM编译了LinBPQ，现在来研究如何配置。</p><p>配置过程中参考了 <a href="https://www.youtube.com/watch?v=F_s4zIUIfew">Winlink Gateway on a Raspberry Pi LinBPQ</a>，这个视频提供了大量配置细节。</p><h1 id="生成bpq32-cfg配置文件"><a href="#生成bpq32-cfg配置文件" class="headerlink" title="生成bpq32.cfg配置文件"></a>生成bpq32.cfg配置文件</h1><p>这个文件可以参考 <a href="https://www.cantab.net/users/john.wiseman/Documents/index.html">G8BPQ Home Page</a> ，不过这个过程比较痛苦。好在 <strong>John G8BPQ</strong> 制作了图形化的配置文件生成器 <a href="https://www.cantab.net/users/john.wiseman/Documents/BPQConfigGen.html">BPQConfigGen</a> ，下载运行即可。Windows版本的功能比Linux版少一些，不过在Windows 10下开箱即用，十分便利。生成的配置文件如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs config">; Written by BPQConfigGen<br><br>SIMPLE<br>NODECALL=BH2VJW-7<br>NODEALIAS=FUXIN<br>LOCATOR=PN02TA<br><br>PORT<br>PORTNUM=1<br> ID=Telnet Server<br> DRIVER=TELNET<br> CONFIG<br>  LOGGING=1<br>  TCPPORT=8010<br>  FBBPORT=8011<br>  HTTPPORT=8080<br>  CMS=1<br>  CMSCALL=BH2VJW<br>  CMSPASS=密码不告诉你<br>  USER=本地管理页面用户名,本地管理页面密码,BH2VJW,,SYSOP;<br>ENDPORT<br>PORT<br> PORTNUM=2<br> ID=Direwolf<br> TYPE=ASYNC<br> PROTOCOL=KISS<br> IPADDR=127.0.0.1<br> TCPPORT=8001<br> CHANNEL=A<br> PACLEN=128<br> TXDELAY=500<br> FRACK=7000<br> RESPTIME=1500<br> MAXFRAME=4<br> RETRIES=6<br>WL2KREPORT PUBLIC, www.winlink.org, 8778, BH2VJW-10, PN02TA, 00-23, 145020000, PKT1200, 20, 2, 5, 0<br>ENDPORT<br><br><br>APPLICATION 1,BBS,,BH2VJW-9,,0<br>APPLICATION 3,RMS,C 1 CMS,BH2VJW-10,,0<br>APPLICATION 2,CHAT,,BH2VJW-8,,0<br><br>LINMAIL<br>LINCHAT<br><br></code></pre></td></tr></table></figure><p>PORT1是用作本地管理的，不要转发到外部。本地访问8080端口可以打开管理网页，8010可支持telnet连接，FBB端口不知道具体作用。</p><p>PORT2配置连接Direwolf。注意这里与Linux下配置AX.25的区别，这里我们使用了Direwolf 的 <strong>KISS over TCP</strong> 协议，没有与Linux的AX.25协议产生关系，所以可以忘掉 <strong>kissattach kissparams axports</strong> 了。</p><p>完成上述配置后运行 <strong>linbpq</strong> 即可，注意 <strong>linbpq</strong> 与 <strong>bpq32.cfg</strong> 放在同一个目录下。</p><p>下面进行连接测试。</p><h1 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">call wl2k bh2vjw-7  <span class="hljs-comment">#连接到Node，连接到Node后可以再行选择连接到下面这些</span><br>call wl2k bh2vjw-8  <span class="hljs-comment">#连接到聊天服务器</span><br>call wl2k bh2vjw-9  <span class="hljs-comment">#连接到BBS</span><br>call wl2k bh2vjw-10 <span class="hljs-comment">#连接到Winlink</span><br></code></pre></td></tr></table></figure><p>测试顺利完成，至此距离我们的Node上线运行只有连接电台一步之遥了！</p><p>为了能够公开节点信息，还需要联系Winlink管理员进行认证。在<a href="https://winlink.org/rmschannels">Live System Information</a> 页面搜索 <strong>BH2VJW</strong> 可以看到，我们的网关由于未经认证，所以是红色状态，在<a href="https://winlink.org/rmschannels">Live System Information</a> 地图上也没有显示。话说地图上显示整个东亚地区公共节点数为0，我这个或许会开创先河？</p><p>下步计划撰写systemd服务实现开机自启与进程守护。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Node</tag>
      
      <tag>bpq32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Packet Radio科普系列笔记</title>
    <link href="/2022/07/26/packet/"/>
    <url>/2022/07/26/packet/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>packet radio由于年代久远，国内相关讨论几乎不存在，偶见只言片语也无法形成体系。今天偶然之间读到了 <strong>WB9LOZ</strong> 成文于上世纪的 packet radio 专栏 <a href="https://www.choisser.com/packet/">INTRODUCTION TO PACKET RADIO</a>。整个系列由十八篇文章构成，涵盖了packet radio的方方面面，是不可多得的高价值资料，强烈建议对packet radio感兴趣的爱好者阅读。</p><h1 id="第一篇-什么是Packet-Radio"><a href="#第一篇-什么是Packet-Radio" class="headerlink" title="第一篇 什么是Packet Radio"></a>第一篇 什么是Packet Radio</h1><h2 id="Packet-Radio的起源"><a href="#Packet-Radio的起源" class="headerlink" title="Packet Radio的起源"></a>Packet Radio的起源</h2><p>Packet Radio起源于1980年。1983年11月，大名鼎鼎的AX.25协议发布，同年TAPR TNC1发布。到1984年，基于Packet Radio的BBS等应用在美国、加拿大等地已经很流行。</p><h2 id="Packet-Radio的林林总总"><a href="#Packet-Radio的林林总总" class="headerlink" title="Packet Radio的林林总总"></a>Packet Radio的林林总总</h2><p>你是否已经厌倦了HF频段上的他台干扰？是否想在FM上尝试新玩法？是否想体验比RTTY更快、更好的信息传输方式？那么你应该尝试下Packet Radio。</p><p>在上个世纪，Packet Radio硬件一般有以下几个类型：</p><ol><li>电台 - TNC - 电脑</li><li>电台 - TNC - 哑终端</li><li>电台 - 调制解调器 - 电脑（电脑上同时运行特殊软件，比如Baycom）</li></ol><p>所谓的TNC（terminal node controller） 实现了 <strong>ASCII字符 - AFSK语音</strong> 之间的转换，和过去电话线拨号上网很类似。比较经典的硬件TNC包括TAPR出品的TNC-1和TNC-2，以及它们的仿制品。</p><h1 id="第二篇-实现Packet-Radio发射接收"><a href="#第二篇-实现Packet-Radio发射接收" class="headerlink" title="第二篇 实现Packet Radio发射接收"></a>第二篇 实现Packet Radio发射接收</h1><p>这篇详细介绍了TNC的使用方式。简言之，硬件连接妥当后，电脑上用terminal连接到TNC,然后进入TNC的命令模式进行交互式操作。</p><p>编者按：我们没有这种老式的全功能硬件TNC，所以作者苦心教授的各类 TNC 命令就没用了 。。。 我们用direwolf模拟的只是 <strong>KISS TNC</strong> 。</p><p>关于传统TNC与KISS TNC的比较可以参考这篇文章：<a href="http://tarpn.net/t/faq/faq_kiss_mode.html">Keep It Simple Stupid – KISS</a> ，文章摘要如下：</p><ol><li>KISS协议是电脑与TNC通信的一种协议。TNC在KISS模式下，电脑接管了绝大部分工作。这种模式中，TNC并不关心数据包的来源和目的地（呼号），而是无差别解码收到的全部数据包，由主控电脑决定如何呈现或者处理这些信息。</li><li>KISS 模式并没有将PTT控制移交给电脑，PTT仍然由TNC控制。</li><li>有的TNC支持传统与KISS两种模式，文中同时介绍了切换办法。</li></ol><p><a href="http://www.ax25.net/kiss.aspx">The KISS TNC: A simple Host-to-TNC communications protocol</a>同样参考阅读。传统的TNC强调与人的交互性，缺点是对人可读性好的格式，对于电脑控制并不友好，反之亦然。KISS TNC完全移除了AX.25以及前一篇文章中介绍的命令解释器，由主控电脑来实现AX.25并运行各种命令。由于AX.25以及控制命令与各种程序运行在一台电脑上，系统整体的耦合型更好了。</p><p>值得玩味的是，这篇文章虽然最初发布于1987年，但是作者已经明确指出KISS TNC也只是权宜之计，理想条件下电脑应该有HDLC接口，这样独立的TNC硬件就全无必要了。目前我们 <strong>电脑 + 声卡 + Direwolf</strong> 的方案，是否实现了作者35年前的设想？</p><p>回到第二篇文章本身。虽然TNC命令没有参考价值了，不过几十年来信息呈现方式几乎没有变化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">WB9LOZ &gt; W6PW-3: The meeting will be held at 8:00 pm.<br>WB9LOZ &gt; W6PW-3,W6PW-1*: The meeting will be held at 8:00 pm.<br></code></pre></td></tr></table></figure><p>假设这是作者在频率上收到的信息。WB9LOZ 发送给 W6PW-3 “The meeting will be held at 8:00 pm”，区别在于第一个为直频连接，第二个经过了 W6PW-1 的中转。这个W6PW-1就是所谓的 <strong>digipeater</strong>，扮演中继作用。</p><p>这里引入两个概念： <strong>别名</strong> 和 <strong>SSID</strong></p><p><strong>别名</strong> 是有别于呼号的一串由字母和数字组成的字符，常见命名规则为地名，后面可以跟SSID。对于用户而言，呼叫呼号后者呼叫别名是等价的（因为别名会被替换回呼号，比如digipeater中继数据包时，地址里的别名会被替换回呼号）。这部分也可以参考Direwolf文档 <strong>Page 90</strong>。</p><p><strong>SSID</strong> 是呼号后面0-15的整数，例如 <strong>WB9LOZ-5</strong>。<strong>WB9LOZ-0</strong> 等价于 <strong>WB9LOZ</strong> 。SSID一般用于标识同一个呼号下的多个电台&#x2F;端口。</p><h1 id="第三篇-TNC命令（1-3）"><a href="#第三篇-TNC命令（1-3）" class="headerlink" title="第三篇 TNC命令（1&#x2F;3）"></a>第三篇 TNC命令（1&#x2F;3）</h1><p>该篇讲解了 <strong>TNC2</strong> 常用命令用法。虽然这些命令已经没有用武之地了，不过从中可以了解到 <strong>Packet Radio</strong> 应当具有那些功能，因此值得回顾。</p><h2 id="CONV"><a href="#CONV" class="headerlink" title="CONV"></a>CONV</h2><p>CONV（conversation）为会话模式，当连接到他台时自动进入此模式。在<strong>非连接模式</strong>下，也可以手动切换到该模式，此时发送的所有信息都会被发送到预设的 <strong>UNPROTO</strong> 路径，而且只发送一次且没有回执（显而易见）。这个模式一般用于CQ呼叫。</p><h2 id="UNPROTO"><a href="#UNPROTO" class="headerlink" title="UNPROTO"></a>UNPROTO</h2><p>当发送BEACON或者非连接状态下CONV发送信息的目的地，默认值为CQ，不过也可以设置令其经由digipeater,或者发送给某个别名（比如本地业余无线电协会）。例子：</p><ul><li>CQ v WB6SDS-2,W6SG-1,AJ7L</li><li>SFARC v W6PW-1,W6PW-4</li></ul><p>编者按：ax25tools 提供的beacon可以实现上述无连接发射功能。</p><h2 id="FRACK"><a href="#FRACK" class="headerlink" title="FRACK"></a>FRACK</h2><p>TNC 等待回执的最长时间，如超时则重发。</p><h2 id="DWAIT"><a href="#DWAIT" class="headerlink" title="DWAIT"></a>DWAIT</h2><p>TNC 在频道上收到他台数据包后，自身发射数据前的等待时间，用于避免多个电台同时发射。</p><h2 id="PACLEN"><a href="#PACLEN" class="headerlink" title="PACLEN"></a>PACLEN</h2><p>一个数据包中的有效字符数量，0～255，0代表256。显然，这个值越大，单个数据包发送时间越长，越容易被干扰破坏。通信距离较短，状况良好时这个值可以大一些，反之小一些较好。</p><h2 id="RETRY"><a href="#RETRY" class="headerlink" title="RETRY"></a>RETRY</h2><p>TNC如果没有收到他台回执，重新发包的最大次数。不要将其设为0！</p><h2 id="MONITOR"><a href="#MONITOR" class="headerlink" title="MONITOR"></a>MONITOR</h2><p>监视模式。如果这个选项设置为 <strong>OFF</strong> ，那么就只能看到当你连接到其他站点时，其他站点发送给你的信息。如果这个选项打开，则可以看到其他电台之间，或者其他电台非连接模式的广播。有几个选项可用：</p><p><strong>MAIL</strong>：如果打开，可以看到其他电台之间的通信，也可以看到其他电台在非连接模式下广播的数据包。如果这个选项为OFF,就只能看到其他电台在非连接模式下广播的数据包。</p><p><strong>MCOM</strong>：如果打开，可以额外显示 connect <C or SABM>, disconnect <D>， acknowledge <UA> ，busy<DM> 等信息。</p><p><strong>MCON</strong>：如果打开，在自身已经与其他电台建立连接的情况下，可以显示第三方电台的信息。</p><p><strong>MRPT</strong>：显示数据包完整传输路径，否则只显示source和destination,不显示digipeater。</p><p><strong>HEADERLN</strong>：打印每个数据包的header信息。</p><p><strong>MSTAMP</strong>：显示每个数据包的时间戳。</p><p>编者按：这些功能在AX.25，Direwolf等中有类似实现。</p><h1 id="第四篇-中继（Digipeater）与节点（Node）"><a href="#第四篇-中继（Digipeater）与节点（Node）" class="headerlink" title="第四篇 中继（Digipeater）与节点（Node）"></a>第四篇 中继（Digipeater）与节点（Node）</h1><h2 id="Digipeater与FM语音中继的区别"><a href="#Digipeater与FM语音中继的区别" class="headerlink" title="Digipeater与FM语音中继的区别"></a>Digipeater与FM语音中继的区别</h2><p>FM语音中继一般为双工模式，接收与转发同时进行。Digipeater一般为单工模式，收到数据包后先暂存，然后在合适时机进行转发。 TNC可以通过 <strong>DIGIPEAT</strong> 命令将自己的站点变成一个 Digipeater。</p><h2 id="Digipeater与Node的区别"><a href="#Digipeater与Node的区别" class="headerlink" title="Digipeater与Node的区别"></a>Digipeater与Node的区别</h2><p>常见的节点有 <strong>Net&#x2F;Rom</strong> ，<strong>TheNet</strong>， <strong>G8BPQ packet switch</strong>，以及 <strong>KA-Node</strong> 。使用digipeater时，只需要将digipeater作为路径进行指定。<strong>使用节点时，需要首先和节点建立连接。</strong> 通过适当配置，一个站点可以同时扮演digipeater与node的角色。</p><p>使用Node具有一些好处：</p><ol><li><p>连接到Node后，可以通过 <strong>N</strong> 命令列出当前节点可通达的全部节点，在发起DX呼叫时，就可以二次连接到距离目的地最近的节点进行呼叫</p></li><li><p>使用Node进行DX QSO时，数据包回执在相邻节点之间进行，而不需要像digipeater那样跑完全程，这样可以大大减少retry次数，提升通信效率。</p></li></ol><p>编者按：Direwolf提供了Digipeater功能，Node可以用LinBPQ搭建。不过我附近这两个都没有。。。看看能不能蹭蹭APRS吧。</p><h1 id="第五篇-BBS介绍"><a href="#第五篇-BBS介绍" class="headerlink" title="第五篇 BBS介绍"></a>第五篇 BBS介绍</h1><p>连接到BBS的方式与连接到其他普通站点的方式无异，如果目标后面有SSID，不要把它忘记。</p><p>编者按：ax25apps提供的<strong>call</strong>即可用于连接。ax25apps同时提供了<strong>ax25_call</strong>。二者的显著区别之一在于，<strong>call</strong>会进行行尾换行符的转换，而<strong>ax25_call</strong>不会。在旧式系统上，换行符为<CR>，即熟悉的 <strong>\r</strong>。现代Linux系统的换行符为 <strong>\n</strong>。</p><p>支持AX.25的内核，ax25app，ax25tools再加上Direwolf即构成了使用Packet Radio的最小软件环境。通过listen监听，call建立连接，beacon发送无连接状态信息。如果熟悉APRS格式还可以手动编制信息发送。</p><p>回到文章本身。BBS系统一般不设置密码，因为业余无线电是明文传输，即便设置了密码，在连接过程中也会变得众所周知，所以毫无意义。等完成Packet Radio实操后可以拿LinFBB搭建一个玩玩，不过人们都在玩FT8，所以十有八九又会变成一个自嗨的项目 XD</p><h1 id="第六篇-Packet-BBS的命令"><a href="#第六篇-Packet-BBS的命令" class="headerlink" title="第六篇 Packet BBS的命令"></a>第六篇 Packet BBS的命令</h1><p>这篇介绍了BBS的常用命令。各个BBS的命令大同小异，有兴趣可以自行了解，或者自己搭建LinFBB通过telnet连接测试。</p><h1 id="第七批-分层寻址"><a href="#第七批-分层寻址" class="headerlink" title="第七批 分层寻址"></a>第七批 分层寻址</h1><p>分层寻址（HIERARCHICAL ADDRESSING）这个翻译不知是否贴切。格式如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">addressee-<span class="hljs-built_in">call</span> @ BBS-<span class="hljs-built_in">call</span>.<span class="hljs-meta">#local-area.state-province.country.continent</span><br></code></pre></td></tr></table></figure><p>例子</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">WB9LOZ @ W6PW.<span class="hljs-selector-id">#NCA</span><span class="hljs-selector-class">.CA</span><span class="hljs-selector-class">.USA</span>.NOAM<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>packet radio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM编译LinBPQ</title>
    <link href="/2022/07/25/linbpq/"/>
    <url>/2022/07/25/linbpq/</url>
    
    <content type="html"><![CDATA[<p>源码地址： <a href="https://www.cantab.net/users/john.wiseman/Downloads/LatestLinBPQSource.zip">https://www.cantab.net/users/john.wiseman/Downloads/LatestLinBPQSource.zip</a></p><p>为了在Manjaro ARM下成功编译，需要对源文件进行如下改动：</p><ol><li><p>makefile第22行，将</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">all: CFLAGS = -DLINBPQ -MMD -g</span><br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">all: CFLAGS = -DLINBPQ -MMD -g -fcommon</span><br></code></pre></td></tr></table></figure><p>如果不加入 <strong>-fcommon</strong> 选项，编译时gcc会提示 <strong>multiple definition</strong> 错误。</p></li><li><p>makefile第31行，将 <strong>libminiupnpc.a</strong> 修改为 <strong>libminiupnpc.so</strong> 。谨慎起见先检查一下 <strong>miniupnpc</strong> 这个包有没有安装，它提供了 <strong>&#x2F;usr&#x2F;lib&#x2F;libminiupnpc.so</strong> 。</p></li><li><p>BBSUtilities.c 第9797行，将</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">config_set_auto_convert (&amp;cfg, <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">config_set_option(&amp;cfg, CONFIG_OPTION_AUTOCONVERT, <span class="hljs-number">1</span>); <br></code></pre></td></tr></table></figure></li></ol><p>保存上述修改后执行 <code>make -j$(nproc)</code> 编译即可。结束后当前目录会出现名为 <strong>linbpq</strong> 的可执行程序。这个程序可以移动到其他方便使用的地方，但是注意 <strong>linbpq</strong> 默认会在运行路径下寻找配置文件并生成log，暂时还不清楚如何指定配置文件位置。</p><p>LinBPQ配置比较复杂，可以参考开发者亲自撰写的<a href="https://www.cantab.net/users/john.wiseman/Documents/LinBPQGuides.html">LinBPQ Guides</a></p><p>再次致谢LinBPQ的开发者 <strong>John G8BPQ</strong> ，他对编译中遇到的问题给出了解决办法，使Manjaro ARM运行LinBPQ成为现实。大师教导参见 <a href="https://groups.io/g/bpq32/topic/92582455">https://groups.io/g/bpq32/topic/92582455</a> 。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ax25</tag>
      
      <tag>LinBPQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pat通过AX.25连接Winlink阶段性总结</title>
    <link href="/2022/07/23/ax25linuxstage1/"/>
    <url>/2022/07/23/ax25linuxstage1/</url>
    
    <content type="html"><![CDATA[<p>最近一段时间里经过大量阅读和实际操作，我对于AX.25有了更深入的了解，Pat等程序的使用配置也逐渐熟练。今天看到了一个名为<a href="https://www.youtube.com/watch?v=o8OBF47UkeI&ab_channel=KM4ACK">Pat Winlink 2M Packet 1200 baud Setup</a>的视频教程，KM4ACK在树莓派上利用AX.25, direwolf和Pat实现了packet radio连接Winlink网络。经过比较，该教程思路和操作与我在R3300-M盒子上的操作基本一致，这证明利用电视盒子实现packet radio是完全可行的。这批文章对之前几篇的关键点进行了总结，并补充了遗漏内容。</p><h1 id="内核"><a href="#内核" class="headerlink" title="内核"></a>内核</h1><p>为了在Linux中进行AX.25操作，内核必须支持AX.25。之前我在Manjaro ARM中使用的linux-odroid内核没有预编译对应模块，自行编译内核足足花费了5个小时，不过一次成功。另外经过联系内核维护者，AX.25内核模块已在配置文件中启用，，如无意外linux-odroid在下一个更新便会原生支持AX.25，倘若如此就不需要自己编译内核了。</p><h1 id="ax25tools"><a href="#ax25tools" class="headerlink" title="ax25tools"></a>ax25tools</h1><p><a href="https://github.com/ve7fet/linuxax25/releases/tag/ax25tools-1.0.4">https://github.com/ve7fet/linuxax25/releases/tag/ax25tools-1.0.4</a> 由ax25apps， ax25tools, libax25 三部分构成，需要分别编译安装，方法之前已详细介绍。有几点需要特别说明：</p><ol><li>ax25tools合集中提供的 <strong>kissattach</strong> 等程序会在 <code>/usr/local/etc/ax25</code> 目录下寻找 <strong>axports</strong> 等配置文件；</li><li>make install 没有将这些配置文件复制到 <code>/usr/local/etc/ax25</code> 目录下，所以需要自己手动建立配置文件；</li><li>Pat会在 <code>/etc/ax25</code> 目录下寻找 <strong>axports</strong> ，作为变通手段，可以建立软连接： <code>sudo ln -s /usr/local/etc/ax25 /etc/ax25</code>。</li></ol><h1 id="Direwolf"><a href="#Direwolf" class="headerlink" title="Direwolf"></a>Direwolf</h1><p>编译安装方法之前已详细介绍，额外几点补充说明：</p><ol><li>需要启用 <strong>avahi</strong> 服务，否则 Direwolf 会提示 <strong>DNS-SD: Avahi: Failed to create Avahi client: Daemon not running</strong> ：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now avahi-daemon.service<br></code></pre></td></tr></table></figure></li><li>合理设置以避免使用root权限运行Direwolf。我使用了FT232将串口转换成USB（淘宝买的U5-Link），在Manjaro中对应设备为 <strong>&#x2F;dev&#x2F;ttyUSB0</strong> ：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">ls</span> /dev/ttyUSB0<br>Permissions  Size User Group Date Modified Name<br>crw-rw----  188,0 root uucp   3 Jun 20:59  /dev/ttyUSB0<br></code></pre></td></tr></table></figure>为了能够以普通用户身份读写 <code>/dev/ttyUSB0</code> ，需要将当前用户（我的用户名是marly） 添加到 <strong>uucp</strong> 这个组中：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> usermod -aG uucp marly<br>$ <span class="hljs-built_in">id</span> marly<br>uid=1000(marly) gid=1000(marly) <span class="hljs-built_in">groups</span>=1000(marly),3(sys),90(network),98(power),998(wheel),996(audio),994(input),991(lp),987(storage),986(uucp),985(video),984(<span class="hljs-built_in">users</span>),970(sambashare)<br></code></pre></td></tr></table></figure>通过id命令可以得知当前用户已成功加入到 <strong>uucp</strong> 组中。 <strong>重新登录SSH以使改动生效！</strong></li></ol><p>另外Direwolf每次启动都会创建 <strong>&#x2F;tmp&#x2F;kisstnc</strong> 这个指向实际pts设备的符号连接。所以如果你之前用root身份运行过direwolf，direwolf就无法新建 <strong>&#x2F;tmp&#x2F;kisstnc</strong> ，把**&#x2F;tmp&#x2F;kisstnc<strong>删除一次就可以了。以后创建的</strong>&#x2F;tmp&#x2F;kisstnc**不会再遇到这种权限问题。</p><h1 id="KISS-TNC配置"><a href="#KISS-TNC配置" class="headerlink" title="KISS TNC配置"></a>KISS TNC配置</h1><p>测试Direwolf时，发现Direwolf提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs config">Are you using AX.25 for Linux?  It might be trying to use a modified version of KISS which uses the channel field differently than the original KISS protocol specification.  The solution might be to use a command like &quot;kissparms -c 1 -p radio&quot; to set CRC none mode. Another way of doing this is pre-loading the &quot;kiss&quot; kernel module with CRC disabled: sudo /sbin/modprobe -q mkiss crc_force=1<br></code></pre></td></tr></table></figure><p>运行 <code>sudo kissparms -c 1 -p wl2k</code> 即可。</p><h1 id="下步计划"><a href="#下步计划" class="headerlink" title="下步计划"></a>下步计划</h1><p>计划研究利用LinBPQ搭建Winlink网关，<a href="https://www.youtube.com/watch?v=F_s4zIUIfew">Winlink Gateway on a Raspberry Pi LinBPQ</a> 这个视频应该会很有帮助。不知道本地的火腿能不能帮忙实测packet radio效果。</p><p>另外 <a href="https://www.febo.com/packet/linux-ax25/ax25-config.html">Configuring Linux AX.25</a> 推荐阅读，有助于加深对AX.25工作方式及使用方法的理解。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ax25</tag>
      
      <tag>direwolf</tag>
      
      <tag>pat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kissparams简介</title>
    <link href="/2022/07/23/kissparms/"/>
    <url>/2022/07/23/kissparms/</url>
    
    <content type="html"><![CDATA[<p>Direwolf配合Pat使用时遇到了一点小小的问题，Direwolf提示以下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;&lt;&lt; <span class="hljs-string">Data frame from KISS client application, port 8, total length = 18</span><br><span class="hljs-string">  000:  80 84 90 64 ac 94 ae e0 84 90 64 ac 94 ae 61 3f  ...d......d...a?</span><br><span class="hljs-string">  010:  0a d0                                            ..</span><br><span class="hljs-string">Invalid transmit channel 2 from KISS client app.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Are you using AX.25 for Linux?  It might be trying to use a modified</span><br><span class="hljs-string">version of KISS which uses the channel field differently than the</span><br><span class="hljs-string">original KISS protocol specification.  The solution might be to use</span><br><span class="hljs-string">a command like &quot;kissparms -c 1 -p radio&quot; to set CRC none mode.</span><br><span class="hljs-string">Another way of doing this is pre-loading the &quot;kiss&quot; kernel module with CRC disabled:</span><br><span class="hljs-string">sudo /sbin/modprobe -q mkiss crc_force=1</span><br></code></pre></td></tr></table></figure><p>Direwolf已经给出了提示，修复方式也很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> kissparms -c 1 -p wl2k<br></code></pre></td></tr></table></figure><p>kissparams是用来配置KISS TNC的工具。具体言之，用来配置通过kissattach命令连接到AX.25 端口的KISS TNC。kissparam通过packet接口与KISS TNC通讯，不干涉AX.25数据流，所以在对AX.25端口进行操作时，可以通过kissparam随时改变KISS TNC的配置，而不需要重新绑定端口与TNC（很方便！）。</p><p>-c为crc类型。0 &#x3D; auto, 1 &#x3D; none, 2 &#x3D; flexnet, 3 &#x3D; smack<br>-p为端口，同kissattach</p><p>其他几个选项自行查看man文档吧。让人介意的是-e选项，即 <strong>FEC error correction level</strong> 。具体如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs conf">Sets the FEC error correction level in a DSP card based modem (KISS parameter 8). Larger correction level means better noise resistance, but slower  throughput  on  a good connection. This is an experimental feature found in a QPSK modem for the Motorola DSP56001 based DSP4 and EVM cards only.<br></code></pre></td></tr></table></figure><p>FEC，顾名思义 Forward Error Correction，Direwolf文档中在FX.25中有所提及。通过FEC技术，可以显著提升抗干扰能力，缺点是干扰较小传输良好时，通信速率比不使用FEC的连接慢，这是传输冗余信息作为纠正码的代价。可惜这个特性目前仅支持基于摩托罗拉DSP56001的DSP4和EVM，而且局限于QPSK调制。看来目前只能借助Direwolf来实现FX.25。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ax25</tag>
      
      <tag>tnc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kissattach探究</title>
    <link href="/2022/07/22/kissattach/"/>
    <url>/2022/07/22/kissattach/</url>
    
    <content type="html"><![CDATA[<p>参考了man手册和Direwolf文档，同时结合实际操作验证。</p><h1 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h1><p>kissattach, spattach —— 用于连接一个KISS或者6PACK接口</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs man">kissattach [-b] [-6] [-l] [-m mtu] [-v] tty port [inetaddr]<br>spattach [-b] [-l] [-m mtu] [-v] tty port [inetaddr]<br></code></pre></td></tr></table></figure><p>编者按：kissattach默认使用KISS模式，spattach默认使用6PACK模式，此外并无分别。</p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>将一个KISS或者6PACK接口连接到KISS或者6PACK模式的TNC，就像一条普通的tty连接线一样。这个程序在执行后会自动变成后台进程，可以通过给这个后台进程发送 <strong>SIGTERM</strong> 以终止。</p><p>kissattach从 <strong>axports</strong> 文件中读取port以及相关的参数（编者补充：传统上axports路径为&#x2F;etc&#x2F;ax25,kissattatch也会在这里寻找axports,不过我自己编译安装的ax25toos会在&#x2F;usr&#x2F;local&#x2F;etc&#x2F;ax25&#x2F;目录下寻找。另外make install后不知为何axports等配置文件没有被复制到这些位置，需要自己手动复制）。如果axports中speed是一个非零值，那么这个值会被用作串口通信速度，如果是0则意味着没有设置速度（貌似是废话）。paclen是设备的MTU值，可以通过-m选项覆盖。</p><p>tty在传统上是与KISS或者6PACK TNC连接的串口，不过也可以和伪终端（编者按：这是我们需要的，和Direwolf生成的伪终端连接）或者例如SCC卡这种KISS端口模拟器连接。kissattach也支持BSD和Unix98风格的伪终端。如果tty参数是 <strong>&#x2F;dev&#x2F;ptmx</strong> ，那么Kissattach就会自动适应Unix98的行为。对于Unix98伪终端，从tty名称是不可预见的，所以kissattach会在标准输出上另起一行输出对应从伪终端的名字。</p><p>port就是从axports文件中读取的portname值。</p><p>inetaddr参数是可选的，它是这个新接口的IP地址。有时这个选项不能省略，不过总体而言给这个接口分配IP地址的意义不大。（编者按：可以通过给接口分配IP地址来测试是否与Direwolf连接成功，该方法参考自Direwolf文档）</p><h1 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h1><p>-6 使用6PACK而非KISS。使用spattach调用时该选项默认开启。</p><p>-i inetaddr 设定接口的IP地址。接受hostname或者类似192.168.1.110的数字+点的形式。这个选项已经过时了，虽然能用但不推荐。</p><p>-l 将日志记载到系统日志中。默认不记载到系统日志。</p><p>-b 允许在接口上进行广播，默认不广播。</p><p>-m mtu 设置接口的mtu值，用于覆盖axports中的paclen。</p><p>-v 显示版本信息。</p><h1 id="参考阅读"><a href="#参考阅读" class="headerlink" title="参考阅读"></a>参考阅读</h1><p>kill(1), stty(1), ax25(4), axports(5), axparms(8), ifconfig(8).</p><h1 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h1><pre><code class="hljs">   Alan Cox GW4PTS &lt;alan@cymru.net&gt;   Jonathan Naylor G4KLX &lt;g4klx@g4klx.demon.co.uk&gt;</code></pre><p>2017年8月1日</p><h1 id="实际试验"><a href="#实际试验" class="headerlink" title="实际试验"></a>实际试验</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /usr/local/etc/ax25/axports <br><span class="hljs-comment">#portname       callsign        speed   paclen  window  description</span><br>wl2k              BH2VJW          1200    255     4     Direwolf<br><br><span class="hljs-built_in">sudo</span> direwolf -p<br><span class="hljs-built_in">sudo</span> kissattach `<span class="hljs-built_in">ls</span> -l /tmp/kisstnc | awk <span class="hljs-string">&#x27;&#123; print $11 &#125;&#x27;</span>` wl2k 10.89.1.123<br>AX.25 port wl2k bound to device ax0<br><br>ip a show ax0<br>31: ax0: &lt;BROADCAST,UP,LOWER_UP&gt; mtu 255 qdisc fq_codel state UNKNOWN group default qlen 10<br>    <span class="hljs-built_in">link</span>/ax25 BH2VJW-0 brd QST-0 permaddr LINUX-1<br>    inet 10.89.1.123/8 brd 10.255.255.255 scope global ax0<br>       valid_lft forever preferred_lft forever<br><br>ping 10.89.1.123<br></code></pre></td></tr></table></figure><p>主机的IP地址为10.89.1.122，给wl2k这个接口分配地址为10.89.1.123，此时从10.89.1.122 ping 10.89.1.123，Direwolf中会出现大量信息。</p><p>另外Direwolf文档声称kissattach对符号链接支持不佳，所以没有直接用 <strong>&#x2F;tmp&#x2F;kisstnc</strong> ， 而是通过命令展开方式获取了设备实际地址。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ax25</tag>
      
      <tag>tnc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM重新配置内核并打包</title>
    <link href="/2022/07/22/kernel_package/"/>
    <url>/2022/07/22/kernel_package/</url>
    
    <content type="html"><![CDATA[<p>linux-odroid内核没有预编译AX25模块，无法正常使用 <strong>kissattach</strong> 。主线内核预编译了这些模块，可惜与我的电视盒子兼容性不佳，无法正常重启，对于远程使用而言无法接受。于是只好自己编译内核了。</p><h1 id="获取内核软件包并修改配置文件"><a href="#获取内核软件包并修改配置文件" class="headerlink" title="获取内核软件包并修改配置文件"></a>获取内核软件包并修改配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitlab.manjaro.org/manjaro-arm/packages/core/linux-odroid.git<br><span class="hljs-built_in">cd</span> linux-odroid<br>vim config <span class="hljs-comment"># 修改 # CONFIG_AX25 is not set</span><br></code></pre></td></tr></table></figure><p>以下配置供参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs conf">1732 CONFIG_HAMRADIO=y<br>1733 <br>1734 #<br>1735 # Packet Radio protocols<br>1736 #<br>1737 CONFIG_AX25=m<br>1738 CONFIG_AX25_DAMA_SLAVE=y<br>1739 CONFIG_NETROM=m<br>1740 CONFIG_ROSE=m<br>1741 <br>1742 #<br>1743 # AX.25 network device drivers<br>1744 #<br>1745 CONFIG_MKISS=m<br>1746 CONFIG_6PACK=m<br>1747 CONFIG_BPQETHER=m<br>1748 CONFIG_BAYCOM_SER_FDX=m<br>1749 CONFIG_BAYCOM_SER_HDX=m<br>1750 CONFIG_YAM=m<br>1751 # end of AX.25 network device drivers<br></code></pre></td></tr></table></figure><h1 id="开始打包"><a href="#开始打包" class="headerlink" title="开始打包"></a>开始打包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">makepkg --skipchecksums <span class="hljs-comment"># 刚才修改了config文件所以无法通过校验，索性就不校验了</span><br>==&gt; Making package: linux-odroid 5.18.12-1 (Fri 22 Jul 2022 10:10:46 AM CST)<br>==&gt; Checking runtime dependencies...<br>==&gt; Checking buildtime dependencies...<br>==&gt; Retrieving sources...<br>  -&gt; Found 65a1da3b24ddcf7e4ddc52357d6f22d62ba441ad.tar.gz<br>  -&gt; Found 0065-add-ugoos-device.patch<br>  -&gt; Found config<br>  -&gt; Found linux.preset<br>  -&gt; Found 60-linux.hook<br>  -&gt; Found 90-linux.hook<br>==&gt; WARNING: Skipping verification of <span class="hljs-built_in">source</span> file checksums.<br>==&gt; Extracting sources...<br>  -&gt; Extracting 65a1da3b24ddcf7e4ddc52357d6f22d62ba441ad.tar.gz with bsdtar<br><span class="hljs-comment"># 以下省略</span><br></code></pre></td></tr></table></figure><h1 id="2000-YEARS-LATER"><a href="#2000-YEARS-LATER" class="headerlink" title="2000 YEARS LATER"></a>2000 YEARS LATER</h1><p>若干小时后编译还没有完成的迹象，还是找开发者吧 😂 已经私信了linux-odroid管理员，如果一切顺利linux-odroid 5.18.12即可支持AX25。</p><h1 id="再更新"><a href="#再更新" class="headerlink" title="再更新"></a>再更新</h1><p>发现编译已完成，R3300-M四核马力全开足足跑了5个小时。编译完成前的输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">==&gt; Tidying install...<br>  -&gt; Removing libtool files...<br>  -&gt; Purging unwanted files...<br>  -&gt; Removing static library files...<br>  -&gt; Compressing man and info pages...<br>==&gt; Checking <span class="hljs-keyword">for</span> packaging issues...<br>==&gt; Creating package <span class="hljs-string">&quot;linux-odroid&quot;</span>...<br>  -&gt; Generating .PKGINFO file...<br>  -&gt; Generating .BUILDINFO file...<br>  -&gt; Adding install file...<br>  -&gt; Generating .MTREE file...<br>  -&gt; Compressing package...<br>==&gt; Starting package_linux-odroid-headers()...<br>Removing scripts/dtc/include-prefixes/openrisc<br>Removing scripts/dtc/include-prefixes/nios2<br>Removing scripts/dtc/include-prefixes/mips<br>Removing scripts/dtc/include-prefixes/arm64<br>Removing scripts/dtc/include-prefixes/microblaze<br>Removing scripts/dtc/include-prefixes/arm<br>Removing scripts/dtc/include-prefixes/arc<br>Removing scripts/dtc/include-prefixes/h8300<br>Removing scripts/dtc/include-prefixes/powerpc<br>Removing scripts/dtc/include-prefixes/sh<br>Removing scripts/dtc/include-prefixes/xtensa<br>==&gt; Tidying install...<br>  -&gt; Removing libtool files...<br>  -&gt; Purging unwanted files...<br>  -&gt; Removing static library files...<br>  -&gt; Compressing man and info pages...<br>==&gt; Checking <span class="hljs-keyword">for</span> packaging issues...<br>==&gt; Creating package <span class="hljs-string">&quot;linux-odroid-headers&quot;</span>...<br>  -&gt; Generating .PKGINFO file...<br>  -&gt; Generating .BUILDINFO file...<br>  -&gt; Generating .MTREE file...<br>  -&gt; Compressing package...<br>==&gt; Leaving fakeroot environment.<br>==&gt; Finished making: linux-odroid 5.18.12-1 (Fri 22 Jul 2022 02:14:03 PM CST)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">marly@manjaro-minimal  /linux-odroid   master   <span class="hljs-built_in">ls</span><br>Permissions Size User  Group Date Modified Name<br>drwxr-xr-x     - marly marly 21 Jul 20:42   .git<br>.rw-r--r--   241 marly marly 21 Jul 20:42   .gitlab-ci.yml<br>.rw-r--r--  4.3k marly marly 22 Jul 10:04   0065-add-ugoos-device.patch<br>.rw-r--r--   282 marly marly 21 Jul 20:42   60-linux.hook<br>.rw-r--r--  207M marly marly 22 Jul 10:04   65a1da3b24ddcf7e4ddc52357d6f22d62ba441ad.tar.gz<br>.rw-r--r--   229 marly marly 21 Jul 20:42   90-linux.hook<br>.rwxr-xr-x  228k marly marly 22 Jul  9:58   config<br>.rw-r--r--   68M marly marly 22 Jul 14:12   linux-odroid-5.18.12-1-aarch64.pkg.tar.zst<br>.rw-r--r--   12M marly marly 22 Jul 14:14   linux-odroid-headers-5.18.12-1-aarch64.pkg.tar.zst<br>.rw-r--r--   239 marly marly 21 Jul 20:42   linux-odroid.install<br>.rw-r--r--   234 marly marly 21 Jul 20:42   linux.preset<br>drwxr-xr-x     - marly marly 22 Jul 14:12   pkg<br>.rwxr-xr-x  7.0k marly marly 21 Jul 20:42   PKGBUILD<br>.rw-r--r--  2.1k marly marly 21 Jul 20:42   s912-dmip-mhz.patch<br>drwxr-xr-x     - marly marly 22 Jul 10:14   src<br></code></pre></td></tr></table></figure><p>成功编译了内核和headers，运行 <code>sudo pacman -U ./linux-odroid-5.18.12-1-aarch64.pkg.tar.zst ./linux-odroid-headers-5.18.12-1-aarch64.pkg.tar.zst</code> 即可安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash"> marly@manjaro-minimal  /linux-odroid   master   <span class="hljs-built_in">sudo</span> pacman -U ./linux-odroid-5.18.12-1-aarch64.pkg.tar.zst ./linux-odroid-headers-5.18.12-1-aarch64.pkg.tar.zst <br>[<span class="hljs-built_in">sudo</span>] password <span class="hljs-keyword">for</span> marly: <br>loading packages...<br>resolving dependencies...<br>looking <span class="hljs-keyword">for</span> conflicting packages...<br>:: linux-odroid and linux are <span class="hljs-keyword">in</span> conflict. Remove linux? [y/N] y<br><br>Packages (3) linux-5.18.11-1 [removal]  linux-odroid-5.18.12-1  linux-odroid-headers-5.18.12-1<br><br>Total Installed Size:  139.23 MiB<br>Net Upgrade Size:        9.91 MiB<br><br>:: Proceed with installation? [Y/n] y<br>(2/2) checking keys <span class="hljs-keyword">in</span> keyring                                               [###########################################] 100%<br>(2/2) checking package integrity                                             [###########################################] 100%<br>(2/2) loading package files                                                  [###########################################] 100%<br>(2/2) checking <span class="hljs-keyword">for</span> file conflicts                                            [###########################################] 100%<br>(3/3) checking available disk space                                          [###########################################] 100%<br>:: Processing package changes...<br>(1/1) removing linux                                                         [###########################################] 100%<br>(1/2) installing linux-odroid                                                [###########################################] 100%<br>Optional dependencies <span class="hljs-keyword">for</span> linux-odroid<br>    crda: to <span class="hljs-built_in">set</span> the correct wireless channels of your country [installed]<br>(2/2) upgrading linux-odroid-headers                                         [###########################################] 100%<br>:: Running post-transaction hooks...<br>(1/4) Arming ConditionNeedsUpdate...<br>(2/4) Updating module dependencies...<br>(3/4) Updating linux-odroid module dependencies...<br>(4/4) Updating linux-odroid initcpios...<br>==&gt; Building image from preset: /etc/mkinitcpio.d/linux-odroid.preset: <span class="hljs-string">&#x27;default&#x27;</span><br>  -&gt; -k 5.18.12-1-MANJARO-ARM-ODROID -c /etc/mkinitcpio.conf -g /boot/initramfs-linux.img<br>==&gt; Starting build: 5.18.12-1-MANJARO-ARM-ODROID<br>  -&gt; Running build hook: [base]<br>  -&gt; Running build hook: [udev]<br>  -&gt; Running build hook: [plymouth]<br>  -&gt; Running build hook: [autodetect]<br>  -&gt; Running build hook: [modconf]<br>  -&gt; Running build hook: [block]<br>  -&gt; Running build hook: [filesystems]<br>  -&gt; Running build hook: [keyboard]<br>  -&gt; Running build hook: [fsck]<br>==&gt; WARNING: No modules were added to the image. This is probably not what you want.<br>==&gt; Creating gzip-compressed initcpio image: /boot/initramfs-linux.img<br>==&gt; Image generation successful<br></code></pre></td></tr></table></figure><p>至此编译安装内核成功完成，重启盒子继续折腾。</p><h1 id="内核测试"><a href="#内核测试" class="headerlink" title="内核测试"></a>内核测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -a<br>Linux manjaro-minimal 5.18.12-1-MANJARO-ARM-ODROID <span class="hljs-comment">#1 SMP PREEMPT Fri Jul 22 10:17:23 CST 2022 aarch64 GNU/Linux</span><br><br>modinfo ax25<br>name:           ax25<br>filename:       (<span class="hljs-built_in">builtin</span>)<br><span class="hljs-built_in">alias</span>:          net-pf-3<br>license:        GPL<br>file:           net/ax25/ax25<br>description:    The amateur radio AX.25 <span class="hljs-built_in">link</span> layer protocol<br>author:         Jonathan Naylor G4KLX &lt;g4klx@g4klx.demon.co.uk&gt;<br><br>modinfo mkiss<br>name:           mkiss<br>filename:       (<span class="hljs-built_in">builtin</span>)<br><span class="hljs-built_in">alias</span>:          tty-ldisc-5<br>license:        GPL<br>file:           drivers/net/hamradio/mkiss<br>description:    KISS driver <span class="hljs-keyword">for</span> AX.25 over TTYs<br>author:         Ralf Baechle DL5RB &lt;ralf@linux-mips.org&gt;<br>parm:           crc_force:crc [0 = auto | 1 = none | 2 = flexnet | 3 = smack] (int)<br><br><br><span class="hljs-built_in">sudo</span> direwolf -p<br><br>Dire Wolf DEVELOPMENT version 1.7 E (Jun 29 2022)<br>Includes optional support <span class="hljs-keyword">for</span>:  cm108-ptt dns-sd<br>Dire Wolf requires only privileges available to ordinary <span class="hljs-built_in">users</span>.<br>Running this as root is an unnecessary security risk.<br><br>Reading config file direwolf.conf<br>Audio device <span class="hljs-keyword">for</span> both receive and transmit: plughw:0,0  (channel 0)<br>Channel 0: 1200 baud, AFSK 1200 &amp; 2200 Hz, A+, 44100 sample rate.<br>Ready to accept AGW client application 0 on port 8000 ...<br>Ready to accept KISS TCP client application 0 on port 8001 ...<br>DNS-SD: Avahi: Failed to create Avahi client: Daemon not running<br>Virtual KISS TNC is available on /dev/pts/1<br>Created symlink /tmp/kisstnc -&gt; /dev/pts/1<br><br><br><span class="hljs-built_in">sudo</span> kissattach /dev/pts/1 wl2k<br>AX.25 port wl2k bound to device ax0<br></code></pre></td></tr></table></figure><p>测试结果符合预期。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Manjaro ARM中编译运行Pat</title>
    <link href="/2022/07/21/pat/"/>
    <url>/2022/07/21/pat/</url>
    
    <content type="html"><![CDATA[<p>经过一些阅读，比如<a href="https://groups.google.com/g/pat-users/c/tY1b15MD7ZM">Pt&#x2F;Direwolf&#x2F;SignaLink</a>，Linux上的AX.25栈在过去的20年中没有得到良好维护，在2022年的可用性堪忧。这些问题暂且搁置，继续收集Linux实现Packet radio的拼图🧩碎片。</p><h1 id="Pat是什么"><a href="#Pat是什么" class="headerlink" title="Pat是什么"></a>Pat是什么</h1><p>Pat是一个跨平台的 <strong>Winlink</strong> 客户端，提供了命令行界面和网页界面</p><p>特点：</p><ul><li>收信发信（简单的信箱功能）；</li><li>自动压缩图片附件；</li><li>可以通过GPS设备，网页定位或者手动输入方式报告位置消息；</li><li>借助hamlib,可以为winmor PTT 和 QSY 提供电台控制；</li><li>可以通过CRON风格的语法实现计划任务功能；</li><li>内建了http服务器，提供了移动端友好的页面；</li><li>提供了Git风格的命令行界面；</li><li>支持同时以多种模式监听多条P2P连接；</li><li>提供了 AX.25,telnet,WINMOR和ARDOP支持；</li><li>（试验性）消息可支持gzip压缩</li></ul><h1 id="Pat编译安装"><a href="#Pat编译安装" class="headerlink" title="Pat编译安装"></a>Pat编译安装</h1><p>编译平台：R3300-M,Manjaro ARM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/la5nta/pat<br><span class="hljs-built_in">cd</span> pat<br>./make.bash libax25<br><span class="hljs-built_in">sudo</span> ./make.bash<br></code></pre></td></tr></table></figure><p>最后在当前目录下会生成一个名为pat的可执行文件，把它复制到<code>/usr/local/bin</code>就可以了。</p><h1 id="Pat配置"><a href="#Pat配置" class="headerlink" title="Pat配置"></a>Pat配置</h1><p>首次执行后生成的配置文件为 <code>$HOME/.config/pat/config.json</code> ，结合实际修改。<code>&quot;http_addr&quot;: &quot;localhost:8080&quot;</code> 可修改为 <code>&quot;http_addr&quot;: &quot;0.0.0.0:8080&quot;</code> 以支持外部访问，否则只能在本机上打开网络页面。</p><p>Winlink账户貌似只能在 <strong>Winlink Express</strong> 客户端中注册，这个软件是免费的，运行于Windows系统。</p><p>Pat的网络页面提供了多样连接方式，在既无TNC又没有电台的情况下可以使用telnet连接，经测试连接正常。</p><h1 id="Direwolf-AX-25-Pat"><a href="#Direwolf-AX-25-Pat" class="headerlink" title="Direwolf, AX.25, Pat"></a>Direwolf, AX.25, Pat</h1><p><a href="https://groups.io/g/direwolf/topic/use_pat_with_direwolf/80185118?p=,,,20,0,0,0::recentpostdate/sticky,,,20,0,40,80185118">https://groups.io/g/direwolf/topic/use_pat_with_direwolf/80185118?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,0,40,80185118</a></p><p>参见Direwolf用户手册 <strong>5.8 Kiss TNC emulation-seial port</strong> (第25页)一节：</p><p>Direwolf可以扮演成一个使用Kiss协议、通过伪终端（pseudo terminal,设备路径形如&#x2F;dev&#x2F;pts&#x2F;1）通信的传统TNC。通过伪终端可实现虚拟COM功能（所以之前设想的socat就不需要了）：</p><p>编者按：伪终端（pseudo terminal）的应用很广泛。举个例子，通过SSH远程连接到Linux主机，在主机上便建立了一个伪终端。编号从0开始，由于建立了2个SSH连接，所以0和1便对应两个连接。（此时运行sudo direwolf -p，不出意外&#x2F;tmp&#x2F;kisstnc会指向&#x2F;dev&#x2F;pts&#x2F;2）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">who</span><br>marly    pts/0        2022-07-22 15:08 (10.89.1.253)<br>marly    pts/1        2022-07-22 15:08 (10.89.1.253)<br><br><span class="hljs-built_in">ls</span> /dev/pts<br>Permissions  Size User  Group Date Modified Name<br>crw--w----  136,0 marly <span class="hljs-built_in">tty</span>   22 Jul 15:08   0<br>crw--w----  136,1 marly <span class="hljs-built_in">tty</span>   22 Jul 15:11   1<br>c---------    5,2 root  root   1 Jan  1970   ptmx<br></code></pre></td></tr></table></figure><p>Jeff, NC6J 于2021年1月分享的direwolf与Pat使用方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> direwolf -p <br><span class="hljs-comment"># 观察pts符号链接，本例中假设为/dev/pts/1</span><br><span class="hljs-built_in">sudo</span> kissattach /dev/pts/1 port<br><span class="hljs-comment"># 这里的port是axports中定义的名称，对于Pat而言一般习惯用wl2k。我自编译的ax25apps,ax25tools,libax25不知为何没有将这些配置文件复制到指定位置。（axports复制到/usr/local/etc/ax25，自编译安装的kissattach在这里读取axports，而非 /etc/ax25）</span><br>pat http <span class="hljs-comment"># 启动pat的网页页面</span><br><span class="hljs-comment"># direwolf -p 进程停止后，符号链接消失，kissattach结束</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>winlink</tag>
      
      <tag>Pat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建支持telnet和packet radio访问的BBS服务器</title>
    <link href="/2022/07/19/bbs_build/"/>
    <url>/2022/07/19/bbs_build/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>硬件平台还是运行Manjaro ARM的R3300-M盒子，之前已经编译运行了direwolf，理论上连接各组件后即可使用。不过我的FT-8900R在车上，之前的试验中在车上给盒子供电的5V转12V升压线被烧掉了，所以一时半会儿还无法完成测试，可能加上1个12V直流稳压模块比较好。于是在这个“间隙”中，研究一下BBS系统的搭建。</p><h1 id="BBS系统选择"><a href="#BBS系统选择" class="headerlink" title="BBS系统选择"></a>BBS系统选择</h1><p>之前连接到<a href="https://hb1bbs.com/">hb1bbs</a>觉得还可以，这个BBS使用的是<a href="http://www.mysticbbs.com/">Mystic BBS</a>系统。可惜经过测试，这个系统在Manjaro ARM上缺少 <strong>ld-linux.so.3</strong> 库文件所以无法运行。 AUR提供的 <strong>arm-linux-gnueabihf-glibc</strong> 可能提供了这个文件不过可惜这个包的依赖不支持arm64,好事者可以在X86-64电脑上安装然后提取。</p><p>迫于上述原因，我转而投向了 <a href="https://sourceforge.net/projects/LinFBB/">LinFBB</a>。</p><h1 id="LinFBB安装"><a href="#LinFBB安装" class="headerlink" title="LinFBB安装"></a>LinFBB安装</h1><h2 id="编译安装ax25"><a href="#编译安装ax25" class="headerlink" title="编译安装ax25"></a>编译安装ax25</h2><p>到 <a href="https://github.com/ve7fet/linuxax25">https://github.com/ve7fet/linuxax25</a>  下载最新release然后编译。项目分三部分：ax25apps,ax25tools,libax25，分别进入目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">./autogen.sh<br>./configure<br>make -j4<br><span class="hljs-built_in">sudo</span> make install<br>````<br>编译过程大体上比较顺利。不过 **ax25app** 编译过程中会提示<br><br>```bash<br><br>call.c:45:10: fatal error: ncursesw/ncurses.h：No such file or directory<br>   45 | <span class="hljs-comment">#include &lt;ncursesw/ncurses.h&gt;</span><br>      | <br></code></pre></td></tr></table></figure><p>开发者是基于Debian编译测试所以头文件名称与Manjaro有差异。按提示进入对应C文件将 <code>#include &lt;ncursesw/ncurses.h&gt;</code>修改为<code>#include &lt;ncurses.h&gt;</code>即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim linuxax25-ax25tools-1.0.4/ax25apps/call/call.c <span class="hljs-comment">#修改第45行</span><br>````<br><br>另外对于 **ax25tools**，安装后编译文件夹📁下面etc目录中的配置文件没有被复制到预期位置。比如执行<br><br>```bash<br>$ man axports<br><br>AXPORTS(5)                                       Linux Programmer<span class="hljs-string">&#x27;s Manual                                       AXPORTS(5)</span><br><span class="hljs-string"></span><br><span class="hljs-string">NAME</span><br><span class="hljs-string">       /etc/ax25/axports - AX.25 port configuration file.</span><br><span class="hljs-string"></span><br><span class="hljs-string">DESCRIPTION</span><br><span class="hljs-string">……（以下省略）</span><br></code></pre></td></tr></table></figure><p>在man文件描述的位置并没有这个配置文件，<code>/usr/local</code> 下面也没有。或许有必要手动创建<code>/etc/ax25</code>，然后把这些配置文件复制过去？</p><h2 id="使libax25可被动态加载"><a href="#使libax25可被动态加载" class="headerlink" title="使libax25可被动态加载"></a>使libax25可被动态加载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/ld.so.conf.d/<br><span class="hljs-built_in">sudo</span> vim userlocal.conf <span class="hljs-comment"># 加入 /usr/local/lib 并保存</span><br><span class="hljs-built_in">sudo</span> ldconfig<br></code></pre></td></tr></table></figure><p>这样刚才自编译安装的 <strong>libax25</strong> 就可以被动态加载了。一种比较古老的方式是使用 <strong>LD_LIBRARY_PATH</strong> 这个环境变量，不过Manjaro已经将其抛弃了，这个值默认是空的。</p><h2 id="编译安装LinFBB"><a href="#编译安装LinFBB" class="headerlink" title="编译安装LinFBB"></a>编译安装LinFBB</h2><p>经过上面步骤后LinFBB编译安装水到渠成，照旧configure make make install三部曲，这个最后额外多了一步 <code>make installconf</code>。</p><p>如果刚才没有安装配置好 <strong>libax25</strong>，这里在configure时会提示 <strong>configure: error: Could not find the libax25 libraries; aborting</strong> 导致编译无法进行。</p><p>另外需要指出，我的编译环境没有X11,所以不会编译xfbbx X11客户端。</p><h1 id="LinFBB配置"><a href="#LinFBB配置" class="headerlink" title="LinFBB配置"></a>LinFBB配置</h1><p>上述编译安装步骤没有难度，从这里开始就要花一些心思了。</p><h2 id="首次运行"><a href="#首次运行" class="headerlink" title="首次运行"></a>首次运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> fbb<br></code></pre></td></tr></table></figure><p>首次运行会提示许多文件不存在，按提示选择新建即可，然后添加呼号，姓名等必要信息。这些之后都可以在配置文件中修改，所以即便填错也没关系。</p><p>之后管理fbb应当使用 <code>/usr/local/share/doc/fbb/fbb.sh</code>这个脚本，用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fbb.sh start | stop | status | restart<br></code></pre></td></tr></table></figure><p>等一切配置妥当后写一个systemd service用起来会更方便一点。</p><p>LinFBB提供了 <strong>xfbbd</strong> 和 <strong>xfbbC</strong> 。先不研究它们，当前的目的是配置端口以便能够通过telnet访问这个BBS。</p><h2 id="telnet配置"><a href="#telnet配置" class="headerlink" title="telnet配置"></a>telnet配置</h2><p>LinFBB虽然在持续的开发维护中，但BBS作为旧时代的遗珍，包括笔者在内的许多人对它很陌生。教人用wordpress之类东西搭建博客的教程浩如烟海，BBS的资料则只能散见于互联网的角落。 尽管搭建于上个世纪， <a href="https://www.f6fbb.org/">https://www.f6fbb.org/</a> 仍然保留了大量价值无边的资料，可以作为配置LinFBB的指导。</p><p>此外 <code>/home/manjaro/fbb-7.0.11/doc/html/</code> 目录中也提供了帮助文档，可以阅读。</p><p>参考页面： <a href="https://www.f6fbb.org/fbbdoc/fmttelne.htm">https://www.f6fbb.org/fbbdoc/fmttelne.htm</a><br>编辑PORT.SYS:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs conf"><br>#Ports：端口数量<br>#TNCs：总共有几个TNC（调制解调器）。在使用多工器的情况下，一个端口最多可以有4个TNC。<br>#Ports TNCs<br>2      2<br><br>#COM：串口序号，注意与Windows中的COM1 COM2概念不同，此处仅作为序号。<br>#Interface：在LinFBB中仅有9一个可选项，代表Linux，可以用于串口、AX25域套接字、Telnet端口。<br># Address：设备名/端口号。需要确保合适权限使LinFBB可以访问设备。此外，当使用 AF_AX25 内核端口时，地址是不需要的；当使用Telenet时，地址是Tenlet端口的16进制形式。<br># Baud：端口的波特率。BPQ，AF_AX25内核套接字，以及Telnet无视该设定所以填0即可。<br># 这一栏目的行数与上面的端口数量保持一致。（本例中为2）<br><br>#Com Interface Address (device)   Baud<br>1    9         /dev/cua0          9600<br>2    9         189C               0<br><br># TNC：使用中的TNC数量。0代表文件转发。<br># NbCh：TNC使用的频道数量，上限取决于TNC固件。（编者注：对于direwolf之类soundcard modem,是否意味着一个TNC只有一个Channel？）<br># Com：COM口的序号，需要与前文保持一致。<br># MultCh：使用端口多工器情况下的频道数量，否则为1。对于DRSI用途，值为0～7；by KAM use 1/VHF and 2/HF；Linux中使用AF_AX25内核套接字时，MultCh为接口名称（例如：ax0）<br># Paclen：TNC的Paclen（这是啥）<br># Maxfr：TNC最大可以同时发送的帧数<br># NbFwd：最多同时向外发送的频道数量。<br># MaxBloc：forward-block的大小，单位为kb。<br># M/P-Fwd：M代表每小时中开始转发的起始分钟，P-Fwd代表每次转发开始之间的时间间隔<br># Mode：单个字母的组合，每个字母代表一种允许的模式，太长了不翻。以TUWR为例，T代表Ethernet/TCP-IP（host-mode），U代表正常模式（Port mode），W代表网关允许这个频率（附加内容），R代表调制解调器端口允许只读模式（附加内容）<br># Freq：用于描述这个端口的字符串，长度最大为9,不允许空格（编者注：用Comment是不是更直观一点）<br><br>#TNC NbCh Com MultCh Pacln Maxfr NbFwd MxBloc M/P-Fwd Mode Freq<br>0    0    0   0      0     0     0     0      00/01   ----  File-fwd.<br>1    4    1   1      230   4     1     10     30/60   UDYL  433.650<br>2    8    2   0      250   2     1     10     00/60   TUWR  Telnet<br></code></pre></td></tr></table></figure><p>本例中，telnet端口号为6300,转换为16进制即为 <strong>189C</strong>。重启fbb,通过nmap可以看到本机6300端口已打开，局域网中其他设备也可以通过telnet访问BBS。虽然我们的TNC尚未配置好，**&#x2F;dev&#x2F;cua0** 也不存在，不过不影响Telnet端口的使用。</p><p>（编者补充：在linux中，com设备一般被命名为cua）</p><h1 id="AX-25探究"><a href="#AX-25探究" class="headerlink" title="AX.25探究"></a>AX.25探究</h1><p><code>fbb-7.0.11/doc/html/tllinux.htm</code> 成文时间久远（1997），许多内容已经过时。不过其提及的<a href="https://www.linuxdoc.org/HOWTO/AX25-HOWTO/">AX25-HOWTO</a>（成稿于2001年九月）值得阅读。如果上面链接不幸死掉了，可以访问 <a href="https://tldp.org/HOWTO/AX25-HOWTO/">https://tldp.org/HOWTO/AX25-HOWTO/</a>  。</p><h2 id="加载AX25内核模块"><a href="#加载AX25内核模块" class="headerlink" title="加载AX25内核模块"></a>加载AX25内核模块</h2><p>这一部分不太乐观。简单检查了一下Manjaro系统（21.3.3）的内核模块，以下是默认具备的：</p><ul><li>ax25</li><li>netrom</li><li>rose</li><li>slip</li><li>mkiss</li><li>lp</li><li>baycom_par baycom_ser_fdx baycom_ser_hdx</li></ul><p>关键的soundmodem（sm0）不在其中。<a href="https://github.com/VK3FNG/soundmodem">https://github.com/VK3FNG/soundmodem</a> 显示这个模块代码已经被开发者放弃。</p><ol><li>编译安装<code>linuxax25-ax25tools-1.0.4</code>其中的三个模块。上文中已完成。</li><li>执行 <code>sudo modporbe ax25</code></li></ol><p>编者按：ax25这个模块貌似是系统自带的，**&#x2F;lib&#x2F;modules&#x2F;5.16.20-2-MANJARO&#x2F;kernel&#x2F;net&#x2F;ax25&#x2F;ax25.ko.xz** 的创建时间远远早于编译时间。</p><p>如果需要系统启动时自动加载这个模块，可以利用 <code>/etc/modules-load.d</code> 实现，具体参见 <code>man modules-load.d</code>。</p><h3 id="整合Direwolf"><a href="#整合Direwolf" class="headerlink" title="整合Direwolf"></a>整合Direwolf</h3><p>参考<a href="https://packet-radio.net/xrpi-interfacing-with-linfbb/">XRpi interfacing with LinFBB</a> 一文，作者使用 <strong>socat</strong> 创建了虚拟COM口供 <strong>XRouter</strong> 和 <strong>LinFBB</strong> 使用。Linux中万物皆文件，所以使用socat创造的虚拟COM口也是一个文件，将这个文件提供给<strong>XRouter</strong> 和 <strong>LinFBB</strong>的配置文件，让它们都使用这个虚拟COM口，就实现了利用虚拟COM口连接<strong>XRouter</strong> 和 <strong>LinFBB</strong> 的目的。</p><p>Direwolf手册中描述了利用 <strong>com0com</strong> 创建虚拟COM接口以及修改Direwolf的步骤，可以作为参考。</p><p>未完待续</p>]]></content>
    
    
    
    <tags>
      
      <tag>bbs</tag>
      
      <tag>packet radio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>业余无线电linux发行版</title>
    <link href="/2022/07/05/ham_linux/"/>
    <url>/2022/07/05/ham_linux/</url>
    
    <content type="html"><![CDATA[<h1 id="KB1OIQ-Andy’s-Ham-Radio-Linux"><a href="#KB1OIQ-Andy’s-Ham-Radio-Linux" class="headerlink" title="KB1OIQ - Andy’s Ham Radio Linux"></a>KB1OIQ - Andy’s Ham Radio Linux</h1><p>项目地址： <a href="https://sourceforge.net/projects/kb1oiq-andysham/">https://sourceforge.net/projects/kb1oiq-andysham/</a> </p><p>一个被KB10IQ积极维护的Linux发行版，基于Xubuntu 22.04.0，最近更新于2022年6月14日。主要包含以下特性：</p><ul><li>Live medium which can be installed to the hard drive or USB thumb drive</li><li>Xfce4 desktop environment</li><li>Contains a large number of amateur radio programs</li><li>Amateur Radio menu customized for ease of use</li><li>Nothing proprietary (as far as I know)</li><li>Software came from the Ubuntu repositories, PPAs, and source tar files</li><li>Software defined radio receiver with RTL2832 USB dongle</li><li>Micro-Fox Config GPL and TinyTrak3 Config GPL</li><li>GNU Radio Companion and gqrx</li><li>FreeDV (free digital voice)</li><li>Packet radio software linpac and AX25</li><li>pskmail client and server</li><li>digital radio mondiale</li><li>Learn CW via the Wordsworth method</li><li>FT8 via wsjt-x</li><li>js8call</li><li>Arduino IDE and libraries, plus Fritzing</li><li>nanoVNA and tinySA software</li><li>Don’t forget to install GridTracker! See HOWTO_GridTracker document.</li><li>SDRangel</li></ul><p>Packet Radio是我所需要的，其他人可能对FT8更感兴趣。系统支持Live USB，方便使用体验。</p><h1 id="DragonOS-Focal"><a href="#DragonOS-Focal" class="headerlink" title="DragonOS_Focal"></a>DragonOS_Focal</h1><p>emaxecuter专门为SDR打造的Linux发行版，基于Lubuntu 20.04，最近更新于2022年5月21日。主要包含以下特性：</p><ul><li>Acarsdec w&#x2F; rtlsdr support</li><li>Aircrack-ng 1.6</li><li>Airspy_ADSB</li><li>Apache2</li><li>Asterisk</li><li>Auto137</li><li>BladeRF ADSB w&#x2F; Dump1090 Mutability (&#x2F;usr&#x2F;src)</li><li>BladeRF-Wiphy (usr&#x2F;src&#x2F;wiphy-build)</li><li>Blue hydra</li><li>Boatbod op25</li><li>BTLE w&#x2F; hackrf (can be recompiled for bladeRF)</li><li>CalypsoBTS w&#x2F; firmware + tools</li><li>Cesium</li><li>Chirp-daily (python2)</li><li>Composable-SDR AppImage with SDRPlay support (&#x2F;usr&#x2F;src&#x2F;Soapy_SDR-x86_64)</li><li>Crocodile Hunter (LimeSDR Mini support)</li><li>CubicSDR</li><li>DF-Aggregator w&#x2F; Offline capability</li><li>Direwolf</li><li>Dumphfdl</li><li>DumpVDL2</li><li>Esptool</li><li>FALCON</li><li>Fldigi</li><li>GNU Radio 3.8</li><li>Gpredict</li><li>GQRX</li><li>GQRX Scanner</li><li>GR-ADSB</li><li>GR-AIR-Modes</li><li>GR-AOA</li><li>GR-Correctiq</li><li>GR-DECT2</li><li>GR-DSD</li><li>GR-FHSS_Utils</li><li>GR-Foo</li><li>GR-Grnet</li><li>GR-GSM</li><li>GR-ieee802-11 w&#x2F; HackRF Sink TX Flowgraph</li><li>GR-ieee802-15-4</li><li>GR-IIO</li><li>Gr-Inspector (&#x2F;usr&#x2F;src)</li><li>GR-Iridium</li><li>GR-limesdr</li><li>GR-Lora</li><li>GR-Lora_SDR</li><li>GR-Mixalot</li><li>GR-NFC</li><li>GR-NRSC5</li><li>GR-NTSC-RC</li><li>GR-Paint38</li><li>GR-PDU_Utils</li><li>GR-RDS</li><li>GR-Sandia_Utils</li><li>GR-Satellites</li><li>GR-Smart_Meters</li><li>GR-Soapy</li><li>GR-Tempest</li><li>GR-Timing_Utils</li><li>Grgsm_scanner-GUI</li><li>GSMEvil2</li><li>HackTV GUI v2021-11-09</li><li>Ham2Mon by lordmorgul</li><li>IceCast2 (needs configured before starting)</li><li>IMSI-catcher</li><li>Inotify-tools</li><li>Inspectrum 0.2.3</li><li>Iridium-Toolkit</li><li>IridiumLive</li><li>JAERO</li><li>Js8call</li><li>JTDX</li><li>Kalibrate (HackRF)</li><li>Kismet</li><li>Kismet rest api</li><li>Kisstatic2mobile w&#x2F; latest kismet support</li><li>Kismon</li><li>Larry Tetra Kit e9f93618</li><li>LeanSDR&#x2F;LeanDVB</li><li>Libacars</li><li>LibBladeRF 2.4.1 w&#x2F; xA5 support</li><li>LibhackRF&#x2F;hackRF tools 2021.03.1</li><li>Libosmo-dsp</li><li>LimeSuite</li><li>Linrad</li><li>LiquidSoap</li><li>LTE-Cell-Scanner (v2 remains and supports RTLSDR, HackRF, BladeRF with CMake options)</li><li>LuaRadio v0.10.0 w&#x2F; examples</li><li>M17-Gnuradio</li><li>Meshtastic Python API 1.2.58(standalone)</li><li>Mirage (GitHub.com&#x2F;RCayre&#x2F;mirage</li><li>)</li><li>MMDVM</li><li>Mmdvm-sdr by r4d10n</li><li>MMDVMHost by g4klx</li><li>Multimon-ng</li><li>Nmap</li><li>NOAA-Apt 1.3.1</li><li>NRSC5 decoder for RTLSDR</li><li>Nzyme</li><li>OP25 “Boatbod” (GNU Radio 3.8&#x2F;Python3 testing &#x2F;usr&#x2F;src&#x2F;op25&#x2F;)</li><li>OpenWebRX 0.20.3</li><li>Osmo-bsc</li><li>Osmo-bts-trx</li><li>Osmo-hlr</li><li>Osmo-MGW</li><li>Osmo-msc</li><li>Osmo-NITB</li><li>Osmo-nitb-scripts (@NotPike)</li><li>Osmo-Sip-Connector</li><li>Osmo-trx-lms (LimeSDR support)</li><li>Osmo-trx-uhd</li><li>Osmocom-BB tools in &#x2F;usr&#x2F;src</li><li>Photonmap</li><li>Probequest</li><li>Pyadi-iio</li><li>PyRtlSDR</li><li>PySDR 2.0 (Guide to SDR and DSP using Python)</li><li>Qalculate</li><li>Qfits for use with sattools</li><li>QradioLink w&#x2F; MMDVM ability</li><li>QspectrumAnalyzer</li><li>Qsstv</li><li>Qt-DAB</li><li>RDF-Sim</li><li>Retrogram-RTLSDR</li><li>Retrogram-soapysdr</li><li>Reveng</li><li>RFcat</li><li>RFCrack</li><li>RFsoapyfile</li><li>RMSViewer</li><li>RSP TCP Server (SDRPlay support)</li><li>RTL_433</li><li>RTLSDR-Airband v4.0.1 (conf in &#x2F;usr&#x2F;src&#x2F;)</li><li>RX_Tools</li><li>SatDump</li><li>SDR++ w&#x2F; server capability</li><li>SDR4space.lite w&#x2F; examples</li><li>SDRAngel</li><li>SDRReceiver</li><li>SDRTrunk</li><li>ShinySDR</li><li>SigDigger</li><li>Signal Server GUI w&#x2F; python3 virtual environment</li><li>Signal Server N90ZB w&#x2F; Web Interface by Dr. Bill Walker</li><li>Soapysdr modules</li><li>Sparrow-WiFi w&#x2F; FALCON tools + wpapcap2john</li><li>Splat!</li><li>SpyServer (usr&#x2F;src&#x2F;spyserver-linux-x64)</li><li>srsLTE-Sniffer (loop-catcher.sh in &#x2F;usr&#x2F;src&#x2F;srsLTE-release_18_12&#x2F;build&#x2F;lib&#x2F;examples)</li><li>srsRAN</li><li>Strf</li><li>Tetra-kit “screen2tetra.sh” script in &#x2F;usr&#x2F;src&#x2F;tetra-kit&#x2F;recorder&#x2F;wav</li><li>Tetra-Kit-Player in &#x2F;usr&#x2F;src (needs npm installed)</li><li>Trunk-Recorder</li><li>Ubertooth 2020-12-R1</li><li>Umurmur</li><li>Universal Radio Hacker</li><li>WFView from source</li><li>wireguard</li><li>Wireshark</li><li>WSJT-X</li><li>Yate&#x2F;YateBTS w&#x2F; BladeRF xA4 improvements</li><li>yellowShoes nrsc5 HD FM audio player</li><li>Zenmap</li></ul><p>包含了先前提到的Direwolf。</p>]]></content>
    
    
    
    <tags>
      
      <tag>业余无线电</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>direwolf + 电视盒子打造TNC</title>
    <link href="/2022/07/04/direwolf/"/>
    <url>/2022/07/04/direwolf/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一直想体验下packet radio，不过国内错过了packet radio最流行的年代，所以硬件TNC也淘不到，大家都一步跨进了声卡时代，用 soundcard modem 作为关键词可以搜索到很多。基于此，尝试用手边的廉价配件拼凑出一台可用的TNC,用作packet radio之途。</p><p>所谓的soundcard modem,简单而言利用声卡的DSP（Digital Signal Processing）功能，实现数模转换。以AFSK为例，定义了2个不同声调分别代表0和1,实现数传功能。硬件方面需要一部具备声卡的计算机，软件方面需要特定程序实现调制解调以及PTT控制功能。伴随着思路逐渐清晰，整个系统的组件大致如下：</p><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><ol><li>计算机<br>还是老朋友R3300-M :P 安装运行Manjaro ARM minimal。我打算把它当成网络TNC,通过网络用其他电脑远程连接使用。如果需要本地使用也可以运行sway之类图形系统，配置应该不成问题。</li><li>声卡<br>几块钱包邮的USB声卡。</li><li>电台连接器<br>这个是整套系统中最有难度抑或最花钱的部分。成品难找而且价格普遍不菲，DIY需要专业知识以及动手能力。</li><li>电台<br>电台要求很低，最廉价的FM收发机即可，当然要结合电台连接器。</li><li>TNC 软件<br>使用Dire Wolf。这个软件的功能比较多，对于我的用途而言使用KISS协议作为一个远程TNC即可。</li></ol><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><ol><li>在R3300-M上运行Dire Wolf。毫无难度，按说明编译运行即可。</li><li>声卡配置。USB声卡即插即用，为方便配置可以安装 <code>alsa-utils</code>，这个包提供了 <code>alsamixer</code> ，可以比较直观地对音频进行配置。</li><li>电台连接器。从马工淘宝店250块钱买的。</li><li>电台。FT-8900R。其实更想用UV-5R,不过国内没找到连接器，国外论坛有人分享电路图，有心人自己去看吧。电台的波特率设置为1200bps。</li><li>路由器。闲鱼15块钱收的必虎无线路由器。5V DC供电，1 WAN 2 LAN,刷了openwrt后用来连接R3300-M很合适。</li><li>终端电脑。华硕EEE 1025CE。渣配上网本，特意为它更换了SSD,又淘来了一枚100W PD诱骗头，这样可以在汽车上搭配小米100W充电器使用，达到全直流供电目的，与整套车载供电与太阳能发电系统形成整体。</li></ol><p>整套系统依托汽车搭建。调试成功后，在无线路由器覆盖范围内，都可以方便地用笔记本进行Packet Radio操作。</p><h1 id="进度"><a href="#进度" class="headerlink" title="进度"></a>进度</h1><h2 id="已完成"><a href="#已完成" class="headerlink" title="已完成"></a>已完成</h2><ol><li>所有必备硬件已准备完毕。</li><li>Dire Wolf编译完毕，可正常运行。</li><li>必虎路由器刷机完毕。</li></ol><h2 id="计划中"><a href="#计划中" class="headerlink" title="计划中"></a>计划中</h2><ol><li>安装合适的Packet Radio终端软件。</li><li>连接系统各硬件模块。</li><li>参照手册对Dire Wolf进行配置。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro ARM</tag>
      
      <tag>direwolf</tag>
      
      <tag>ham</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro中搭建openwrt编译环境</title>
    <link href="/2022/07/04/compile_openwrt/"/>
    <url>/2022/07/04/compile_openwrt/</url>
    
    <content type="html"><![CDATA[<p>原本用于编译openwrt的Deepin在一次升级中挂掉了，于是尝试在Manjaro下编译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S base-devel asciidoc binutils bzip2 gawk gettext git ncurses zlib patch unzip lib32-glibc subversion flex gcc-multilib p7zip msmtp lib32-openssl texinfo xmlto qemu upx libelf autoconf automake libtool gettext<br></code></pre></td></tr></table></figure><p>比ubuntu下的依赖项少了一些，不过用默认配置跑了一遍正常生成镜像。</p><h1 id="7月11日更新"><a href="#7月11日更新" class="headerlink" title="7月11日更新"></a>7月11日更新</h1><p>由于众所周知的原因golang在编译时会提示 <code>dial tcp 172.217.160.113:443: i/o timeout</code> 并导致编译失败。可以通过使用代理解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> GO111MODULE=on<br><span class="hljs-built_in">export</span> GOPROXY=https://goproxy.cn<br>make download -j8<br>make -j2 V=s<br></code></pre></td></tr></table></figure><p>如此之后顺利编译：</p><pre><code class="bash">ls lede/build_dir/target-mipsel_24kc_musl/linux-ramips_mt76x8/tmp/openwrt-ramips-mt76x8-glinet_vixmini-initramfs-kernel.binopenwrt-ramips-mt76x8-glinet_vixmini-squashfs-sysupgrade.binopenwrt-ramips-mt76x8-glinet_vixmini-squashfs-sysupgrade.bin.sigopenwrt-ramips-mt76x8-glinet_vixmini-squashfs-sysupgrade.bin.ucert</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>openwrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在manjaro中使用ctex</title>
    <link href="/2022/06/22/manjaro-ctex/"/>
    <url>/2022/06/22/manjaro-ctex/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S texlive-most texlive-langchinese<br></code></pre></td></tr></table></figure><p>manjaro软件仓库里的 <strong>texlive</strong> 比较精简，没有附带宏包手册所以 <strong>texdoc</strong> 不能用， <strong>latex</strong> 初学者还是建议去CTAN下载完整镜像手动安装。我是为了编译之前写好的文件所以没有手册影响不大。（原本写作环境Deepin挂掉了）</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>manjaro</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重装Windows 10 + 修复grub</title>
    <link href="/2022/06/22/repair-grub/"/>
    <url>/2022/06/22/repair-grub/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>单位 <strong>G3930</strong> 电脑的windows 10系统最近更新几次失败后就频繁死机，被迫重装，于是grub就无了。为啥要重装windows,而不是Linux only呢，因为我搞不定Linux下的打印机 Orz Windows 10的打印机其实也有bug,最著名的便是 <strong>KB5006670</strong> 导致远程smb打印机连接失败，一顿折腾后参考<a href="https://bbs.pcbeta.com/viewthread-1907877-1-1.html">真解决Win10最新补丁导致共享打印问题</a> 通过替换 <strong>win32spl</strong> 文件解决了。</p><h1 id="下载Windows-10"><a href="#下载Windows-10" class="headerlink" title="下载Windows 10"></a>下载Windows 10</h1><p>微软官网直接提供了ISO下载地址，不需要安装工具： <a href="https://www.microsoft.com/en-us/software-download/windows10ISO">https://www.microsoft.com/en-us/software-download/windows10ISO</a></p><h1 id="制作安装U盘"><a href="#制作安装U盘" class="headerlink" title="制作安装U盘"></a>制作安装U盘</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Syu woeusb<br><span class="hljs-built_in">sudo</span> woeusb --device /home/manjaro/迅雷下载/Win10_21H2_Chinese_x64.iso /dev/sdb<br>````<br>windows下我习惯用rufus制作各类安装U盘，Linux下 **woeusb** 是个不错的命令行工具，用法和 **<span class="hljs-built_in">dd</span>** 类似，更多用法可以通过 **man** 查询。注意提供的文件名不要太复杂，比如<br><br>```bash<br><span class="hljs-built_in">sudo</span> woeusb --device /home/manjaro/迅雷下载/Win10_21H2_Chinese(Simplified)_x64.iso /dev/sdb<br></code></pre></td></tr></table></figure><p>就会执行失败，推测原因是圆括号不能正常识别。</p><h1 id="安装Windows-10"><a href="#安装Windows-10" class="headerlink" title="安装Windows 10"></a>安装Windows 10</h1><p>傻瓜操作</p><h1 id="修复-grub"><a href="#修复-grub" class="headerlink" title="修复 grub"></a>修复 grub</h1><p>以下步骤在 <strong>Manjaro live usb</strong> 中进行，或者其他自己惯用的Linux发行版，制作好安装U盘后启动即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">su<br>mount /dev/sda8 /mnt<br>mount mount --<span class="hljs-built_in">bind</span> /dev /mnt/dev<br>mount --<span class="hljs-built_in">bind</span> /proc /mnt/proc<br>mount --<span class="hljs-built_in">bind</span> /sys /mnt/sys<br><span class="hljs-built_in">chroot</span> /mount<br>grub-install --target i386-pc /dev/sda<br>update-grub<br></code></pre></td></tr></table></figure><p>有两处需要注意。其一是Linux位置，可以通过 <strong>fdisk</strong> 查看，本例中为 <strong>sda8</strong> 。其二是 <strong>grub</strong> 安装。我这里 <strong>EFI</strong> 安装失败，所以指定了 <strong>i386-pc</strong> 这种老式方式。重启后问题圆满解决。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>grub</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用R分析OBD数据</title>
    <link href="/2022/05/17/R-obd/"/>
    <url>/2022/05/17/R-obd/</url>
    
    <content type="html"><![CDATA[<h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>为了分析自己的驾驶行为，最近斥巨资35元在PDD上买了2个OBD盒子。结合Car Scanner得到了CSV格式的数据。在此基础上，计划利用R进行分析。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><p><a href="https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html">R语言教程</a> ，北京大学出品，适合快速上手。</p></li><li><p><a href="https://blog.csdn.net/Megajojo/article/details/81629450">R语言中变量命名规则与反引号的使用</a> ，阐述了R中变量名的自动转换问题。</p></li></ol><h1 id="将数据从CSV文件导入R"><a href="#将数据从CSV文件导入R" class="headerlink" title="将数据从CSV文件导入R"></a>将数据从CSV文件导入R</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">data <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;2022-05-17+08-26-13.csv&quot;</span><span class="hljs-punctuation">,</span> header<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> as.is<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> check.names<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>程序中的选项<code>header=TRUE</code>指明第一行作为变量名行， 选项<code>as.is=TRUE</code>说明字符型列要原样读入而不是转换为因子(factor)，<code>check.names=FALSE</code>禁止变量名检查与自动转换。如果不禁用变量名检查，导入R的列名如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> colnames<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;time&quot;</span>                                     <br> <span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;发动机转速..rpm.&quot;</span>                         <br> <span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;已耗燃油..L.&quot;</span>                             <br> <span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;已耗燃油.总计...L.&quot;</span>                       <br> <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;平均速度..km.h.&quot;</span>                          <br> <span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;平均速度..GPS...km.h.&quot;</span>                    <br> <span class="hljs-punctuation">[</span><span class="hljs-number">7</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;气压..kPa.&quot;</span>                               <br> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;氧传感器1宽范围.电流.mA...mA.&quot;</span>            <br> <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;氧传感器1宽范围.等价比...&quot;</span>                <br><span class="hljs-punctuation">[</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃料价格....&quot;</span>                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">11</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃料价格.总计.....&quot;</span>                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">12</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油平均消耗.升.100公里...L.100km.&quot;</span>       <br><span class="hljs-punctuation">[</span><span class="hljs-number">13</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油平均消耗.升.100公里..10.sec..L.100km.&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">14</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油平均消耗.升.100公里..总计...L.100km.&quot;</span> <br><span class="hljs-punctuation">[</span><span class="hljs-number">15</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油瞬时消耗.升.100公里...L.100km.&quot;</span>       <br><span class="hljs-punctuation">[</span><span class="hljs-number">16</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;省油器.基于燃油系统状态和油门位置....&quot;</span>    <br><span class="hljs-punctuation">[</span><span class="hljs-number">17</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;瞬时发动机功率.根据燃油消耗...kW.&quot;</span>        <br><span class="hljs-punctuation">[</span><span class="hljs-number">18</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;瞬时燃油消耗.升.小时...L.h.&quot;</span>              <br><span class="hljs-punctuation">[</span><span class="hljs-number">19</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;节气门位置....&quot;</span>                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">20</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;计算增压..bar.&quot;</span>                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">21</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;路程..km.&quot;</span>                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">22</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;路程.总计...km.&quot;</span>                          <br><span class="hljs-punctuation">[</span><span class="hljs-number">23</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;车辆加速..g.&quot;</span>                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;车速..km.h.&quot;</span>                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">25</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;进气歧管绝对压力..kPa.&quot;</span>                   <br><span class="hljs-punctuation">[</span><span class="hljs-number">26</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;进气温度....&quot;</span>                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">27</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;速度..GPS...km.h.&quot;</span>                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">28</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;高度..GPS...m.&quot;</span>                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">29</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Latitude&quot;</span>                                 <br><span class="hljs-punctuation">[</span><span class="hljs-number">30</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Longtitude&quot;</span>                               <br><span class="hljs-punctuation">[</span><span class="hljs-number">31</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;X&quot;</span>                                        <br></code></pre></td></tr></table></figure><p>禁用检查后，结果如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> colnames<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;time&quot;</span>                                        <br> <span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span>                            <br> <span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;已耗燃油 (L)&quot;</span>                                <br> <span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;已耗燃油（总计） (L)&quot;</span>                        <br> <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;平均速度 (km/h)&quot;</span>                             <br> <span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;平均速度 (GPS) (km/h)&quot;</span>                       <br> <span class="hljs-punctuation">[</span><span class="hljs-number">7</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;气压 (kPa)&quot;</span>                                  <br> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;氧传感器1宽范围 电流（mA） (mA)&quot;</span>             <br> <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;氧传感器1宽范围 等价比 ()&quot;</span>                   <br><span class="hljs-punctuation">[</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃料价格 (¥)&quot;</span>                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">11</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃料价格（总计） (¥)&quot;</span>                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">12</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油平均消耗（升/100公里） (L/100km)&quot;</span>        <br><span class="hljs-punctuation">[</span><span class="hljs-number">13</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油平均消耗（升/100公里） 10 sec (L/100km)&quot;</span> <br><span class="hljs-punctuation">[</span><span class="hljs-number">14</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油平均消耗（升/100公里）（总计） (L/100km)&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">15</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;燃油瞬时消耗（升/100公里） (L/100km)&quot;</span>        <br><span class="hljs-punctuation">[</span><span class="hljs-number">16</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;省油器（基于燃油系统状态和油门位置） ()&quot;</span>     <br><span class="hljs-punctuation">[</span><span class="hljs-number">17</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;瞬时发动机功率（根据燃油消耗） (kW)&quot;</span>         <br><span class="hljs-punctuation">[</span><span class="hljs-number">18</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;瞬时燃油消耗（升/小时） (L/h)&quot;</span>               <br><span class="hljs-punctuation">[</span><span class="hljs-number">19</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;节气门位置 (%)&quot;</span>                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">20</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;计算增压 (bar)&quot;</span>                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">21</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;路程 (km)&quot;</span>                                   <br><span class="hljs-punctuation">[</span><span class="hljs-number">22</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;路程（总计） (km)&quot;</span>                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">23</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;车辆加速 (g)&quot;</span>                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;车速 (km/h)&quot;</span>                                 <br><span class="hljs-punctuation">[</span><span class="hljs-number">25</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;进气歧管绝对压力 (kPa)&quot;</span>                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">26</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;进气温度 (℃)&quot;</span>                               <br><span class="hljs-punctuation">[</span><span class="hljs-number">27</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;速度 (GPS) (km/h)&quot;</span>                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">28</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;高度 (GPS) (m)&quot;</span>                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">29</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Latitude&quot;</span>                                    <br><span class="hljs-punctuation">[</span><span class="hljs-number">30</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Longtitude&quot;</span>                                  <br><span class="hljs-punctuation">[</span><span class="hljs-number">31</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;&quot;</span>  <br></code></pre></td></tr></table></figure><p>禁用变量检查与转换后，可以不加考虑地通过列名调用指定列：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> data<span class="hljs-operator">$</span><span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span><br>   <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>   <span class="hljs-literal">NA</span>   <span class="hljs-literal">NA</span>   <span class="hljs-literal">NA</span>  <span class="hljs-number">911</span>  <span class="hljs-number">910</span>   <span class="hljs-literal">NA</span>   <span class="hljs-literal">NA</span>  <span class="hljs-number">907</span>  <span class="hljs-number">908</span>  <span class="hljs-number">902</span>  <span class="hljs-number">909</span>  <span class="hljs-number">899</span>  <span class="hljs-number">895</span>  <span class="hljs-number">895</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">15</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">896</span>  <span class="hljs-number">895</span>  <span class="hljs-number">895</span>  <span class="hljs-number">902</span>  <span class="hljs-number">910</span>  <span class="hljs-number">910</span>  <span class="hljs-number">898</span>  <span class="hljs-number">910</span>  <span class="hljs-number">902</span>  <span class="hljs-number">898</span>  <span class="hljs-number">902</span>  <span class="hljs-number">896</span>  <span class="hljs-number">897</span>  <span class="hljs-number">897</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">29</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">895</span>  <span class="hljs-number">903</span>  <span class="hljs-number">907</span>  <span class="hljs-number">902</span>  <span class="hljs-number">903</span>  <span class="hljs-number">903</span>  <span class="hljs-number">901</span>  <span class="hljs-number">905</span>  <span class="hljs-number">900</span>  <span class="hljs-number">900</span>  <span class="hljs-number">900</span>  <span class="hljs-number">898</span>  <span class="hljs-number">904</span>  <span class="hljs-number">905</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">43</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">905</span>  <span class="hljs-number">902</span>  <span class="hljs-number">899</span>  <span class="hljs-number">899</span>  <span class="hljs-number">901</span>  <span class="hljs-number">900</span>  <span class="hljs-number">905</span>  <span class="hljs-number">898</span>  <span class="hljs-number">897</span>  <span class="hljs-number">900</span>  <span class="hljs-number">900</span>  <span class="hljs-number">898</span>  <span class="hljs-number">905</span>  <span class="hljs-number">902</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">57</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">899</span>  <span class="hljs-number">897</span>  <span class="hljs-number">897</span>  <span class="hljs-number">896</span>  <span class="hljs-number">906</span>  <span class="hljs-number">897</span>  <span class="hljs-number">903</span>  <span class="hljs-number">904</span>  <span class="hljs-number">899</span>  <span class="hljs-number">904</span>  <span class="hljs-number">908</span>  <span class="hljs-number">908</span>  <span class="hljs-number">901</span>  <span class="hljs-number">898</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">71</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">899</span>  <span class="hljs-number">893</span>  <span class="hljs-number">893</span>  <span class="hljs-number">903</span>  <span class="hljs-number">902</span>  <span class="hljs-number">909</span>  <span class="hljs-number">904</span>  <span class="hljs-number">897</span>  <span class="hljs-number">891</span>  <span class="hljs-number">891</span>  <span class="hljs-number">903</span>  <span class="hljs-number">902</span>  <span class="hljs-number">903</span>  <span class="hljs-number">892</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">85</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">889</span>  <span class="hljs-number">895</span>  <span class="hljs-number">892</span>  <span class="hljs-number">892</span>  <span class="hljs-number">882</span>  <span class="hljs-number">886</span>  <span class="hljs-number">889</span>  <span class="hljs-number">896</span>  <span class="hljs-number">892</span>  <span class="hljs-number">887</span>  <span class="hljs-number">887</span>  <span class="hljs-number">890</span>  <span class="hljs-number">896</span>  <span class="hljs-number">893</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">99</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">893</span>  <span class="hljs-number">893</span>  <span class="hljs-number">884</span>  <span class="hljs-number">895</span>  <span class="hljs-number">890</span>  <span class="hljs-number">893</span>  <span class="hljs-number">891</span>  <span class="hljs-number">880</span>  <span class="hljs-number">880</span>  <span class="hljs-number">883</span>  <span class="hljs-number">890</span>  <span class="hljs-number">889</span>  <span class="hljs-number">886</span>  <span class="hljs-number">889</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">113</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">892</span>  <span class="hljs-number">892</span>  <span class="hljs-number">886</span>  <span class="hljs-number">890</span>  <span class="hljs-number">900</span>  <span class="hljs-number">890</span>  <span class="hljs-number">886</span>  <span class="hljs-number">895</span>  <span class="hljs-number">895</span>  <span class="hljs-number">886</span>  <span class="hljs-number">887</span>  <span class="hljs-number">895</span>  <span class="hljs-number">889</span>  <span class="hljs-number">891</span><br></code></pre></td></tr></table></figure><p>（数据为节选）</p><h1 id="绘制折线图"><a href="#绘制折线图" class="headerlink" title="绘制折线图"></a>绘制折线图</h1><h2 id="字符串转时间"><a href="#字符串转时间" class="headerlink" title="字符串转时间"></a>字符串转时间</h2><p>分析某一变量随时间变化趋势，首先尝试绘制折线图。这里有一个小小的问题：数据中的时间格式如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> data<span class="hljs-operator">$</span>time<br>   <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;08:26:19.571&quot;</span> <span class="hljs-string">&quot;08:26:19.573&quot;</span> <span class="hljs-string">&quot;08:26:19.575&quot;</span> <span class="hljs-string">&quot;08:26:20.597&quot;</span><br>   <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;08:26:20.771&quot;</span> <span class="hljs-string">&quot;08:26:20.933&quot;</span> <span class="hljs-string">&quot;08:26:21.100&quot;</span> <span class="hljs-string">&quot;08:26:21.266&quot;</span><br>   <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;08:26:21.424&quot;</span> <span class="hljs-string">&quot;08:26:21.612&quot;</span> <span class="hljs-string">&quot;08:26:21.769&quot;</span> <span class="hljs-string">&quot;08:26:21.938&quot;</span><br></code></pre></td></tr></table></figure><p>这种格式的数据R不能直接使用，需要进行转换，即将字符串转换为R可以理解的时间。</p><p>显而易见，原始数据中的时间格式为<code>hms</code>格式，R提供了一个同名的第三方包：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;hms&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>如果没用用户权限，包就会安装在home下某一个目录内。</p><p>然后加载这个包：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>hms<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>进行类型转换：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">x <span class="hljs-operator">&lt;-</span> as_hms<span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span>time<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h2><p>OBD通过采样读取数据流，受采样率限制，不可能在同一时间读取到全部参数，所以值缺失现象在样本数据中随处可见。为了绘制折线图，需要对缺失值进行适当处理。</p><h3 id="发动机转速随时间变化折线图"><a href="#发动机转速随时间变化折线图" class="headerlink" title="发动机转速随时间变化折线图"></a>发动机转速随时间变化折线图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>hms<span class="hljs-punctuation">)</span><br>rpm <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data<span class="hljs-operator">$</span>time<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> data<span class="hljs-operator">$</span><span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span><span class="hljs-punctuation">)</span><br>rpm <span class="hljs-operator">&lt;-</span> rpm<span class="hljs-punctuation">[</span><span class="hljs-operator">!</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>rpm<span class="hljs-operator">$</span>y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>plot<span class="hljs-punctuation">(</span>as_hms<span class="hljs-punctuation">(</span>rpm<span class="hljs-operator">$</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> rpm<span class="hljs-operator">$</span>y<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;b&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>然后就得到了一个比较简陋的发动机转速随时间变化折线图。由于数据采样比较频繁，不显示标点的”l”类型更合适。添加主标题，xy轴标题，得到的折线图好看了一些：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">plot<span class="hljs-punctuation">(</span>as_hms<span class="hljs-punctuation">(</span>rpm<span class="hljs-operator">$</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> rpm<span class="hljs-operator">$</span>y<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;l&quot;</span><span class="hljs-punctuation">,</span> main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;远景x3 pro cvt 发动机转速随时间变化折线图&quot;</span><span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;时间&quot;</span><span class="hljs-punctuation">,</span> ylab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;发动机转速(rpm)&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h1 id="最大值、最小值、平均值、分位数"><a href="#最大值、最小值、平均值、分位数" class="headerlink" title="最大值、最小值、平均值、分位数"></a>最大值、最小值、平均值、分位数</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span><span class="hljs-punctuation">,</span> na.rm<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1837</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span><span class="hljs-punctuation">,</span> na.rm<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">724</span><br><span class="hljs-operator">&gt;</span> mean<span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span><span class="hljs-punctuation">,</span> na.rm<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1199.271</span><br><span class="hljs-operator">&gt;</span> quantile<span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;燃油平均消耗（升/100公里） (L/100km)&quot;</span><span class="hljs-punctuation">,</span> na.rm<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>         <span class="hljs-number">0</span><span class="hljs-operator">%         25%</span>         <span class="hljs-number">50</span><span class="hljs-operator">%         75%</span>        <span class="hljs-number">100</span>% <br>   <span class="hljs-number">10.43989</span>    <span class="hljs-number">11.06329</span>    <span class="hljs-number">13.97581</span>    <span class="hljs-number">31.61916</span> <span class="hljs-number">57746.89340</span> <br></code></pre></td></tr></table></figure><p>summary提供了更快捷的数据摘要：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> summary<span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;发动机转速 (rpm)&quot;</span><span class="hljs-punctuation">)</span><br>   Min. <span class="hljs-number">1</span>st Qu.  Median    Mean <span class="hljs-number">3</span>rd Qu.    Max.    <span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s </span><br><span class="hljs-string">    724     895    1251    1199    1460    1837    1002 </span><br><span class="hljs-string">&gt; </span><br></code></pre></td></tr></table></figure><h1 id="异常值处理"><a href="#异常值处理" class="headerlink" title="异常值处理"></a>异常值处理</h1><h2 id="将异常值标记为NA"><a href="#将异常值标记为NA" class="headerlink" title="将异常值标记为NA"></a>将异常值标记为NA</h2><p>在整体数据的summary中，发现 <strong>高度 (GPS) (m)</strong> 的最小值为零：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">高度 <span class="hljs-punctuation">(</span>GPS<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">(</span>m<span class="hljs-punctuation">)</span><br>Min.   <span class="hljs-operator">:</span>  <span class="hljs-number">0.0</span><br><span class="hljs-number">1</span>st Qu.<span class="hljs-operator">:</span><span class="hljs-number">144.4</span><br>Median <span class="hljs-operator">:</span><span class="hljs-number">147.3</span><br>Mean   <span class="hljs-operator">:</span><span class="hljs-number">134.1</span><br><span class="hljs-number">3</span>rd Qu.<span class="hljs-operator">:</span><span class="hljs-number">149.8</span><br>Max.   <span class="hljs-operator">:</span><span class="hljs-number">176.3</span><br><span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s   :2690 </span><br></code></pre></td></tr></table></figure><p>结合实际，显然这些零值是错误的，应当视为缺失值一并处理：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> data<span class="hljs-operator">$</span><span class="hljs-string">&quot;高度 (GPS) (m)&quot;</span><span class="hljs-punctuation">[</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;高度 (GPS) (m)&quot;</span><span class="hljs-operator">==</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NA</span><br><span class="hljs-operator">&gt;</span> summary<span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span><span class="hljs-string">&quot;高度 (GPS) (m)&quot;</span><span class="hljs-punctuation">)</span><br>   Min. <span class="hljs-number">1</span>st Qu.  Median    Mean <span class="hljs-number">3</span>rd Qu.    Max.    <span class="hljs-literal">NA</span><span class="hljs-string">&#x27;s </span><br><span class="hljs-string">  140.3   145.2   147.8   148.6   150.0   176.3    2780</span><br></code></pre></td></tr></table></figure><p>剔除零值后数据变得更有意义了。</p><p>拓展阅读：<a href="https://www.zhihu.com/question/48472404">如何理解R中因子(factor)的概念?</a>，猴子的回答同时阐明了 <strong>因子</strong> 的概念。</p><p>library(hms)<br>rpm &lt;- data.frame(x &#x3D; data$time, y &#x3D; data$”高度 (GPS) (m)”)<br>rpm &lt;- rpm[!is.na(rpm$y),]<br>plot(as_hms(rpm$x), rpm$y, type &#x3D; “l”, main &#x3D; “高度随时间变化折线图”, xlab &#x3D; “时间”, ylab &#x3D; “高度”)</p><p>library(hms)<br>rpm &lt;- data.frame(x &#x3D; data$time, y &#x3D; data$”燃油平均消耗（升&#x2F;100公里） (L&#x2F;100km)”)<br>rpm &lt;- rpm[!is.na(rpm$y),]<br>rpm &lt;- rpm[!is.na(quantile(rpm$y,probs&#x3D;c(.3, .75),na.rm&#x3D;TRUE)),]<br>plot(as_hms(rpm$x), rpm$y, type &#x3D; “l”, main &#x3D; “燃油平均消耗（升&#x2F;100公里） (L&#x2F;100km)”, xlab &#x3D; “时间”, ylab &#x3D; “燃油平均消耗（升&#x2F;100公里） (L&#x2F;100km)”)</p><p>y&#x3D;log2(x)<br>x&#x3D;2^y</p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>OBD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rust模块小结</title>
    <link href="/2022/04/02/rust-module/"/>
    <url>/2022/04/02/rust-module/</url>
    
    <content type="html"><![CDATA[<p>Rust官方教程中Packages,Crates与Modules一章略有些晦涩，特别是Packages与Crates的关系。这部分翻来覆去读了几遍，结合别人项目和<a href="https://jeffa.io/rust_packages_vs_crates">Rust Packages vs Crates</a>大概弄懂了。</p><h1 id="Package"><a href="#Package" class="headerlink" title="Package"></a>Package</h1><p><strong>Package</strong> 为其中的最高单位：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs rust">$ cargo new my-project<br>     Created <span class="hljs-title function_ invoke__">binary</span> (application) `my-project` package<br></code></pre></td></tr></table></figure><p>执行<code>cargo new</code>命令，便得到了一个<code>package</code>，大概对应其他语言中的 <strong>project</strong> ?</p><p><strong>Package</strong> 具备如下特点：<br>d</p><ol><li><strong>Package</strong> 至少包装了一个 <strong>crate</strong>;</li><li><strong>Package</strong> 是可发布的;</li><li><strong>Package</strong> 可包含一个或零个 <strong>library crate</strong>;</li><li><strong>Package</strong> 可包含多个 <strong>binary crate</strong>;</li><li>当将<strong>Package</strong>添加到自己的依赖时（在Cargo.toml中添加），实际上是使用了package中的 library crate。</li></ol><h1 id="Crate"><a href="#Crate" class="headerlink" title="Crate"></a>Crate</h1><ol><li>crate 是一种组织代码的形式;</li><li>crate不是binary就是library;</li><li>crate不能独立发布，只能作为package的成员发布;</li><li>对于编译器，crate更多起到命名空间作用</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Rust之Packages,Crates与Modules</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rust结构体实验</title>
    <link href="/2022/04/02/rust-struct/"/>
    <url>/2022/04/02/rust-struct/</url>
    
    <content type="html"><![CDATA[<p>Rust官方教程读到智能指针一章就有些迷糊了，毕竟上次接触指针还是N年前的 <strong>谭浩强</strong> C语言 XD 而且只看不练基础没法牢固，所以打算对前面章节进行一些实验，研究下可行的编程范例。</p><p>这个例子是对结构体的实验。之前用python时 <strong>字典 + 列表</strong> 足以应对绝大部分场景。Rust中 <strong>Vec</strong> 有些类似列表，不过 <strong>Vec</strong> 中成员类型要求一致。 <strong>Vec</strong> 提供了push和pop方法用于增删成员，也可以通过索引或者get方法调用成员。注意get方法返回 <strong>Option&lt;&amp;T&gt;</strong> 类型需要自己match一下。</p><p>此外有几点需要留意：</p><ol><li>迭代器。使用迭代器会发生所有权的转移！所以该借用（borrow）就借用吧。</li><li>字符串。需要留意 <strong>+</strong> 运算符对于字符串的实现，大致看起来这样：<figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">add</span>(<span class="hljs-keyword">self</span>, s: &amp;<span class="hljs-type">str</span>) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">String</span> &#123;<br>```  <br>所以对于一般 `<span class="hljs-keyword">let</span> <span class="hljs-variable">s3</span> = s1 + &amp;s2` 的情形， **s1** 所有权会发生转移。<br><br>如果要避免所有权转移的麻烦，使用`<span class="hljs-built_in">format!</span>`即可。<br>```rust<br><span class="hljs-meta">#[derive(Debug)]</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Rect1</span> &#123;<br>    id: <span class="hljs-type">u64</span>,<br>    name: <span class="hljs-type">String</span>,<br>&#125;<br><span class="hljs-keyword">impl</span> <span class="hljs-title class_">Rect1</span> &#123;<br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">new</span>(id:<span class="hljs-type">u64</span>, name: <span class="hljs-type">String</span>) <span class="hljs-punctuation">-&gt;</span> Rect1 &#123;<br>        Rect1 &#123;<br>            id,<br>            name,<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">id</span>: <span class="hljs-type">u64</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">name</span>: <span class="hljs-type">String</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">clbox</span>: <span class="hljs-type">Vec</span>&lt;Rect1&gt; = <span class="hljs-type">Vec</span>::<span class="hljs-title function_ invoke__">new</span>();<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-variable">i</span> <span class="hljs-keyword">in</span> <span class="hljs-number">0</span>..<span class="hljs-number">5</span> &#123;<br>        id = i;<br>        name = <span class="hljs-string">&quot;a&quot;</span>.<span class="hljs-title function_ invoke__">to_string</span>() + &amp;id.<span class="hljs-title function_ invoke__">to_string</span>();<br>        <span class="hljs-comment">//name = format!(&quot;&#123;&#125;&#123;&#125;&quot;, &quot;a&quot;, &amp;id.to_string());</span><br>        <span class="hljs-comment">//let tmp_rect = Rect1::new(id, name);</span><br>        clbox.<span class="hljs-title function_ invoke__">push</span>(Rect1::<span class="hljs-title function_ invoke__">new</span>(id, name));<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-variable">item</span> <span class="hljs-keyword">in</span> &amp;clbox &#123;<br>        <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;&#125; - &#123;&#125;&quot;</span>, item.id, item.name);<br>    &#125;<br>    <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    <span class="hljs-keyword">for</span> <span class="hljs-variable">item</span> <span class="hljs-keyword">in</span> &amp;clbox &#123;<br>        <span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;:?&#125;&quot;</span>, item);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Rust</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro 修复 key错误问题</title>
    <link href="/2022/02/14/manjaro-key/"/>
    <url>/2022/02/14/manjaro-key/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman-key --init &amp;&amp; <span class="hljs-built_in">sudo</span> pacman-key --populate &amp;&amp; <span class="hljs-built_in">sudo</span> pacman -Syyu<br></code></pre></td></tr></table></figure><p>网上随便搜来的，解决了问题。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM 21.12 测评</title>
    <link href="/2021/12/30/manjaro2112/"/>
    <url>/2021/12/30/manjaro2112/</url>
    
    <content type="html"><![CDATA[<p>Manjaro ARM 21.12 已发布了一段时间，照例测试了VIM2镜像。除了软件包例行更新外，引导方式发生了重大改变。在21.10及之前版本中，系统启动顺序为 <strong>BSP U-BOOT</strong> - <strong>Mainline U-BOOT</strong> - <strong>Linux Kernel</strong> ，21.12抛弃了 <strong>Mainline U-BOOT</strong> ，由 <strong>BSP U-BOOT</strong> 直接加载 <strong>Linux Kernel</strong> 。</p><p>理论上此次改动缩短了启动流程，项目维护成本更小。不过实际测试来看，取消 <strong>Mainline U-BOOT</strong> 后，系统暴露出一些问题：</p><ol><li><strong>HDMI</strong> 无输出。并非在全部场景下均无输出，系统刚上电时接通显示器，HDMI输出正常。如果在系统完全启动后再连接显示器，HDMI无任何输出。</li><li>关机重启异常。测试了Mainline、Odroid、khadas内核，执行关机或重启命令后系统均为进入僵死状态，只能通过断电恢复。</li></ol><p>问题1对于无头服务器影响轻微，即便是第一次开机初始化配置也可以通过SSH远程完成，完成初始化配置前root用户无密码可远程登录。</p><p>问题2只要不频繁重启主机影响也不大。除了更新内核外，必须重启的场景不多。关机基本不存在的，低功耗零噪音7X24开机运行无压力。</p><p>值得一提的是，放弃主线内核后，有线网卡MAC地址不会每次重启后变化了，所以不再需要用nmtui提供的mac address clone功能固定地址。</p><p>当然对于需要从低版本更新到21.12的盒子，还是建议在 <strong>&#x2F;etc&#x2F;pacman.conf</strong> 中，将 <strong>boot-vim2</strong> 添加到 <strong>IgnorePkg</strong> 中。直接更新 <strong>boot-vim2</strong> 会干掉 <strong>Image</strong>，而且不会更新启动配置文件，稳妥起见不要乱折腾为宜。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>R3300-M</tag>
      
      <tag>AARCH64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GXBB S905从EMMC启动Linux研究</title>
    <link href="/2021/12/08/s905inemmc/"/>
    <url>/2021/12/08/s905inemmc/</url>
    
    <content type="html"><![CDATA[<h1 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h1><p>过去在R3300-M上进行过几次不成功的试验。无论是balbes150的Armbian 20.10还是目前使用的Manjaro Linux ARM，使用所提供的安装脚本均无法启动。最近发现论坛上名为pista一网友遇到类似问题并成功解决，看看我们能不能成功复现。</p><p><a href="https://forum.armbian.com/topic/18902-s905-failed-to-boot-from-emmc/">https://forum.armbian.com/topic/18902-s905-failed-to-boot-from-emmc/</a></p><h1 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h1><p>Minix Neo U1 … S905, 2GB RAM &#x2F; 16GB Flash ，搭配meson-gxbb-vega-s95-meta.dtb运行Armbian_20.10_Arm-64_bullseye_current_5.9.0.img。既然和R3300-M同为GXBB S905，那么如果Minix Neo U1可以从emmc启动linux，R3300-M也没有问题。</p><h1 id="默认安装脚本从EMMC启动Armbian-20-10遇到的问题"><a href="#默认安装脚本从EMMC启动Armbian-20-10遇到的问题" class="headerlink" title="默认安装脚本从EMMC启动Armbian_20.10遇到的问题"></a>默认安装脚本从EMMC启动Armbian_20.10遇到的问题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">** No partition table - mmc 2 **<br></code></pre></td></tr></table></figure><p>与R3300-M当时遇到的问题一致。</p><h1 id="妥协方案"><a href="#妥协方案" class="headerlink" title="妥协方案"></a>妥协方案</h1><p>emmc分区保留前700MB，剩余空间分给ROOTFS，然后利用TF卡启动。在R3300-M上也曾试验成功，但我们的目的是完全脱离TF卡，于是pista开始了深入研究。</p><h1 id="纯emmc方案"><a href="#纯emmc方案" class="headerlink" title="纯emmc方案"></a>纯emmc方案</h1><p>pista成功从EMMC分区启动了Armbian 20.10。关键所在是使用 <strong>mmc read</strong> 而不是 <strong>load&#x2F;fatload</strong> 来加载 *<strong>kernel</strong>， <strong>ramdisk</strong> ，以及 <strong>dtb</strong> 。检查了Manjaro Linux ARM， <strong>&#x2F;boot&#x2F;boot.ini</strong> 内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini">ODROIDN2-UBOOT-CONFIG<br><span class="hljs-comment">#ODROIDC2-UBOOT-CONFIG</span><br><br>if test <span class="hljs-attr">&quot;$&#123;devtype&#125;&quot;</span> = <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">; then setenv devtype &quot;mmc&quot;; fi</span><br><br>if fatload $&#123;devtype&#125; $&#123;devnum&#125; 0x1000000 u-boot.ext<span class="hljs-comment">; then go 0x1000000; fi;</span><br></code></pre></td></tr></table></figure><p>看来需要想办法用 <strong>mmc read</strong> 替换 <strong>load&#x2F;fatload</strong> 。</p><h1 id="深入研究"><a href="#深入研究" class="headerlink" title="深入研究"></a>深入研究</h1><h2 id="emmc分区理论"><a href="#emmc分区理论" class="headerlink" title="emmc分区理论"></a>emmc分区理论</h2><p>首先对emmc分区进行描述，pista的看起来这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">blkdevparts=mmcblk1:209715200@1463812096(boot),-@1673528320(root)<br></code></pre></td></tr></table></figure><p>209715200Byte对应200MByte，1463812096Byte对应1396MByte，1673528320约合1596MByte，并非精确匹配。</p><p>查询可知blkdevparts命令用法： <a href="https://www.kernel.org/doc/html/latest/block/cmdline-partition.html">https://www.kernel.org/doc/html/latest/block/cmdline-partition.html</a></p><p>通过学习，可知pista的分区描述为boot分区大小200MB（offset为1396MB，即emmc的前1396MB跳过，保留给为Amlogic的老uboot），这样EMMC的前1596MB就分配完毕了，209715200加上1463812096等于1673527296，比1673528320刚好小了1024。至此分区全貌一目了然：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">1 - 1463812096 (前1396MB) 预留<br>1463812097 - 1673527296 boot分区，大小200MB<br>1673527297 - 1673528320 预留，大小1MB<br>1673528321 -           root分区，占据剩余空间<br></code></pre></td></tr></table></figure><p>pista为了保险起见，在EMMC分区头部保留了足足1396MB大小的空间。我们的R3300-M的EMMC容量总共才3728MB，可以适当减小预留空间，比如700MB。这样root分区大概有2.5GB空间可用，可以装下Manjaro ARM Minimal或者openwrt等无GUI界面的Linux发行版了。</p><h2 id="emmc实际分区操作"><a href="#emmc实际分区操作" class="headerlink" title="emmc实际分区操作"></a>emmc实际分区操作</h2><p>pista没有给出具体命令，只是介绍了大概过程：</p><ol><li>预留出 <strong>&#x2F;dev&#x2F;mmcblk1</strong> 头部1396MB空间；</li><li>新建 <strong>&#x2F;dev&#x2F;mmcblk1p1</strong> 和 <strong>&#x2F;dev&#x2F;mmcblk1p2</strong>两个分区，分别对应boot和root分区。root分区内容直接复制过去即可，重点是boot分区，需要使用dd命令，将 <strong>mainline uboot</strong> 、 <strong>kernel</strong> 、 <strong>ramdisk</strong> 和 <strong>dtb</strong> 写入预定义的区块位置，例如：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=zImage of=/dev/mmcblk1p2 bs=512 seek=2859008 count=54841<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure></li><li>对于Amlogic的uboot，使用 <strong>mmc read</strong> 替代 <strong>fatload</strong> 来加载全部文件，例如： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mmc <span class="hljs-built_in">read</span> 0x08080000 0x2BA3FC 0xD639<br></code></pre></td></tr></table></figure></li><li>在被链式启动的Mainline uboot中，使用 <strong>booti 0x08080000 0x13000000 0x08008000</strong> 替代 <strong>bootcmd</strong> 来启动系统。</li></ol><h1 id="重现流程"><a href="#重现流程" class="headerlink" title="重现流程"></a>重现流程</h1><p>pista并没有给出可无脑照抄的流程，所以我们试着重现具体过程。</p><h2 id="建立分区"><a href="#建立分区" class="headerlink" title="建立分区"></a>建立分区</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>保留EMMC分区前700MB，创建200MB的 <strong>BOOT_MNJRO</strong> 分区，然后剩余空间创建 <strong>ROOT_MNJRO</strong> 分区。分区名称来自在Manjaro ARM Minimal中用 <strong>e2label</strong> 查看的结果。fdisk结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Device         Boot  Start       End   Sectors   Size Id Type<br>/dev/mmcblk0p1       62500    500000    437501 213.6M  c W95 FAT32 (LBA)<br>/dev/mmcblk0p2      500001 250347519 249847519 119.1G 83 Linux<br></code></pre></td></tr></table></figure><p>利用 <strong>df -h</strong> 查看，<strong>BOOT_MNJRO</strong> 使用了54MB大小空间，故分配200MB应该够用。（Manjaro ARM分配了214MB）</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>然后就不会了 XD 求指点</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>R3300-M</tag>
      
      <tag>AARCH64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM Minimal装修</title>
    <link href="/2021/12/07/finetune-manjaro/"/>
    <url>/2021/12/07/finetune-manjaro/</url>
    
    <content type="html"><![CDATA[<h1 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h1><p>先回顾一下，我们之前为R3300-M刷入了ATV固件，目的是提升CPU主频；在TF卡上刷入了VIM2的Manjaro ARM Minimal 21.10镜像，并使用meson-gxbb-p201.dtb启动。随后，用linux-odroid替换了主线内核。配合编译WIFI驱动、更换软件源、设置NetworkManager等操作，现在Manjaro ARM已经能够稳定运行，为运行各种服务做好了充分准备。不过默认命令行界面略显简陋，下文将介绍如何用较少的硬件资源使Manjaro ARM Minimal看起来更现代、更好用。</p><h1 id="配置nano高亮"><a href="#配置nano高亮" class="headerlink" title="配置nano高亮"></a>配置nano高亮</h1><p>nano是Manjaro ARM Minimal的默认文本编辑器，稍作修改使其更好用：</p><h2 id="安装拓展高亮"><a href="#安装拓展高亮" class="headerlink" title="安装拓展高亮"></a>安装拓展高亮</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy nano-syntax-highlighting<br></code></pre></td></tr></table></figure><h2 id="应用高亮"><a href="#应用高亮" class="headerlink" title="应用高亮"></a>应用高亮</h2><p>编辑 <strong>&#x2F;etc&#x2F;nanorc</strong> ，加入以下两行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nanorc">include &quot;/usr/share/nano/*.nanorc&quot;<br>include &quot;/usr/share/nano-syntax-highlighting/*.nanorc&quot;<br></code></pre></td></tr></table></figure><p>重新登录后生效。</p><h1 id="美化命令行界面"><a href="#美化命令行界面" class="headerlink" title="美化命令行界面"></a>美化命令行界面</h1><h2 id="silver安装"><a href="#silver安装" class="headerlink" title="silver安装"></a>silver安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy silver ttf-nerd-fonts-symbols<br></code></pre></td></tr></table></figure><h2 id="silver配置"><a href="#silver配置" class="headerlink" title="silver配置"></a>silver配置</h2><p>创建 <strong>~&#x2F;.config&#x2F;silver&#x2F;silver.toml</strong> 文件，内容如下：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;status&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;black&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;white&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;user&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;yellow&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;dir&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;blue&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;git&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;green&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;cmdtime&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;magenta&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br></code></pre></td></tr></table></figure><p>然后修改 <strong>~&#x2F;.bashrc</strong> 文件。默认文件大概这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#</span><br><span class="hljs-comment"># ~/.bashrc</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment"># If not running interactively, don&#x27;t do anything</span><br>[[ $- != *i* ]] &amp;&amp; <span class="hljs-built_in">return</span><br><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">ls</span>=<span class="hljs-string">&#x27;ls --color=auto&#x27;</span><br>PS1=<span class="hljs-string">&#x27;[\u@\h \W]\$ &#x27;</span><br></code></pre></td></tr></table></figure><p>修改成这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#</span><br><span class="hljs-comment"># ~/.bashrc</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment"># If not running interactively, don&#x27;t do anything</span><br>[[ $- != *i* ]] &amp;&amp; <span class="hljs-built_in">return</span><br><br>PS1=<span class="hljs-string">&#x27;[\u@\h \W]\$ &#x27;</span><br><br><span class="hljs-comment"># configure silver command prompt</span><br><span class="hljs-built_in">export</span> SILVER_ICONS=nerd<br><span class="hljs-built_in">source</span> &lt;(silver init)<br><br><span class="hljs-comment"># source bash aliases</span><br><span class="hljs-built_in">source</span> ~/.bash_aliases<br></code></pre></td></tr></table></figure><p>现在还没有 <strong>~&#x2F;.bash_aliases</strong> ，手动创建一个，一会儿要用。</p><h1 id="老命令替代"><a href="#老命令替代" class="headerlink" title="老命令替代"></a>老命令替代</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy exa bat chafa<br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>编辑 <strong>~&#x2F;.bash_aliases</strong> ，加入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> <span class="hljs-built_in">ls</span>=<span class="hljs-string">&quot;exa -aglh --icons&quot;</span><br><span class="hljs-built_in">alias</span> tree=<span class="hljs-string">&quot;exa --tree --icons&quot;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cat</span>=<span class="hljs-string">&quot;bat&quot;</span><br><span class="hljs-built_in">alias</span> chafa=<span class="hljs-string">&quot;chafa -f sixel&quot;</span><br></code></pre></td></tr></table></figure><p>exa和bat分别是ls和cat的现代化替代。chafa比较有意思，可以将图片转换为在命令行终端中显示的字符画。</p><p>保存后，重新登录或者执行<code>source ~/.bashrc</code>生效。</p><h1 id="安装文件浏览器"><a href="#安装文件浏览器" class="headerlink" title="安装文件浏览器"></a>安装文件浏览器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Ss mc ranger<br></code></pre></td></tr></table></figure><p>mc是老前辈，ranger是后生，根据个人喜好使用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>R3300-M</tag>
      
      <tag>AARCH64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM更换linux-odroid内核</title>
    <link href="/2021/12/02/linux-odroid/"/>
    <url>/2021/12/02/linux-odroid/</url>
    
    <content type="html"><![CDATA[<p>Manjaro ARM最近似乎用<strong>linux-odroid</strong>替换了<strong>linux-vim</strong>，执行<strong>pacman -Syu</strong>系统更新时会提示是否替换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">core/linux 5.15.5-1<br>core/linux-headers 5.15.5-1<br>core/linux-vim 5.14.10-1<br>core/linux-vim-headers 5.14.10-1<br>core/linux-odroid 5.15.3-1<br>core/linux-odroid-headers 5.15.3-1<br></code></pre></td></tr></table></figure><p>更新后测试没问题，重启正常，关机没测不过应该没问题。主线内核有空可以测下。</p><p>另外测试无线仍然无法正常驱动，可以看到WIFI列表但是连接失败。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>R3300-M</tag>
      
      <tag>AARCH64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Packet Radio学习</title>
    <link href="/2021/11/18/packet-radio/"/>
    <url>/2021/11/18/packet-radio/</url>
    
    <content type="html"><![CDATA[<h1 id="从零开始"><a href="#从零开始" class="headerlink" title="从零开始"></a>从零开始</h1><p>手里有台八重州FT-8900R，是当年对业余无线电近乎一无所知时购买的第一步电台。官方手册上说其背部的Data Port可以搭配TNC实现Packet Radio功能。由此，很自然产生了几个疑问：</p><ol><li><p>何为封包无线电<br>可以参考<a href="https://www.qsl.net/bd6cr/prdiy.pdf">业余无线分包通信DIY</a>、<a href="http://www.symek.com/g/pacmod.html">Packet-Radio-Modulation</a>、<a href="https://www.bugoutbagbuilder.com/blog/introduction-packet-radio">Introduction to Packet Radio</a>、<a href="http://www.wattystuff.net/amateur/packet/whatispacket.htm">Packet Radio</a>以及<a href="https://www.dxzone.com/catalog/Software/Packet/">Packet Radio</a>几篇文章。封包无线电的概念无需赘述，这里只需要明确一点：普通的FM收发机即可使用NFM模式，在UHF&#x2F;VHF频段以1200或2400bps速率进行封包无线电操作。</p></li><li><p>FM收发机支持哪些玩法<br>身边的ham圈里大家不是在玩短波就是数字+MMDVM，FM少有人涉足。刚刚通读了《业余无线电通信（第四版）》的小白可能会对语音以外的诸多通信模式跃跃欲试，不过在购买设备前最好先弄明白模式与频段对于一台收发机的意义。频段很直观，一部仅支持U&#x2F;V两端的手台，当然不支持收发5MHz的短波。另一方面，电台即便支持某一频段，也未必支持特定模式。FM收发机价格便宜，不过只支持频率调制，即<strong>Frequency Modulation</strong>的字面含义，没有办法进行CW、PSK31等操作。具体可以参考<a href="https://ham.stackexchange.com/questions/464/2m-or-70cm-fm-mobile-radio-for-digital-mode-operation">2m or 70cm FM mobile radio for digital mode operation</a>和<a href="https://jontio.zapto.org/hda1/psk-and-fsk-over-fm.html">PSK and FSK over NBFM</a>。举个例子，FM收发机连接电脑可以用类似cw player软件在439.500MHz“发电报”，在其他电台里守听可以听到滴滴哒哒的摩斯码声音，不过这和真正的全模式电台在439.500MHz进行CW操作存在本质区别，其核心就是电台调制解调方式。CW最大带宽不超过150Hz，NFM则要占用3KHz，是CW的20倍，遑论能效比的差距。</p></li></ol><p>所以总结下来，FM收发机除了语音通联&#x2F;中继，貌似只有封包无线电一路可走。</p><ol start="3"><li>TNC是什么<br>TNC，Terminal Node Controller，中文翻译终端节点控制器。淘宝搜索零条匹配 …… 请教了群里大佬，大佬在指出封包无线电与TNC是上世纪遗产之余，推荐了名为<strong>专用电台连接器</strong>的东西。到手后主体就是个小盒子，盒子反面具备<strong>CAT</strong>、<strong>DATA</strong>、<strong>CW</strong>接口（对于FT-8900R只能用上DATA），正面具备<strong>SP</strong>、<strong>MIC</strong>和<strong>USB</strong>口，显然这3个都需要连接电脑。简单测试下来，可以实现用电脑控制收发信息，自动录音等操作。</li></ol><p>至于这个所谓的<strong>专用电台连接器</strong>，卖家没有提供原理图，不过国外ham显然也折腾过类似东西：<a href="https://pdf4pro.com/cdn/ud04ya-radioarena-5b0ccd.pdf">UD04YA USB Data Mode Cable - PDF4PRO</a>。结合八重州电台DATA针脚定义来看，电台输入输出音频信号直连电脑，PTT通过虚拟COM口和电脑连接实现控制。所以<strong>专用电台连接器</strong>并不是TNC，是字面意义上的连接器。过去硬件TNC的大部分功能，如今已经在电脑上软件实现了。</p><h1 id="软件包选择"><a href="#软件包选择" class="headerlink" title="软件包选择"></a>软件包选择</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>参考<a href="http://www.wattystuff.net/amateur/packet/whatwindowsprograms.htm">Packet Radio</a>，作者介绍了<a href="http://www.mixw.net/">MixW</a>，<strong>Flexnet32</strong>和<a href="https://www.sv2agw.com/">AWGPE</a>。对于前两者作者给予了积极评价。至于<strong>AWGPE</strong>，作者评价其“不稳定”“不值得花钱”，不过<strong>AWGPE</strong>在国内较前两者知名度更高一些，可以自行评估判断。</p><p>除了上面3个Windows专有软件，跨平台的<strong>soundmodem</strong>值得一提。在Debian衍生系统中，可以用apt命令直接安装，最新版为0.2，更新于2000年8月1日……如果发行版软件仓库里没有，那就只能自行编译。经过一番考古找到了0.2版本的源码：</p><p><a href="https://github.com/yu4zed/soundmodem-backup">https://github.com/yu4zed/soundmodem-backup</a></p><p>备用下载地址：</p><ol><li><a href="https://archive.org/details/soundmodem-0.20">https://archive.org/details/soundmodem-0.20</a></li><li><a href="https://archive.org/download/soundmodem-0.20/soundmodem-0.20.tar.gz">https://archive.org/download/soundmodem-0.20/soundmodem-0.20.tar.gz</a></li><li><a href="http://archive.ubuntu.com/ubuntu/pool/universe/s/soundmodem/soundmodem_0.20.orig.tar.gz">http://archive.ubuntu.com/ubuntu/pool/universe/s/soundmodem/soundmodem_0.20.orig.tar.gz</a></li></ol><p>源码包下载下来解压缩，进入目录执行<code>./configure</code>，根据提示查缺补漏。我的Deepin编译环境比较全，所以只额外安装了<strong>libgtk2.0-0</strong>和<strong>libaudiofile-dev</strong>。configure没问题执行<code>make CXXFLAGS+=&quot; -fpermissive&quot;</code>，然后<code>sudo make install</code>即可。</p><p>除了man页面，对<strong>soundmodem</strong>的介绍还可以参考<a href="https://www.qsl.net/g0wfv/soundmodem/">Multiplatform Soundcard Packet Radio Modem</a>，页面上同时给出了Windows安装包。不过都是老古董，即便不能正常运行也不要过于失望。</p><h2 id="AGWPE"><a href="#AGWPE" class="headerlink" title="AGWPE"></a>AGWPE</h2><p>本部分主要参考自<a href="https://www.soundcardpacket.org/2agwget.aspx">Download and Install AGWPE</a>。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>下载页面： <a href="https://www.sv2agw.com/downloads/default.htm">https://www.sv2agw.com/downloads/default.htm</a></p><p>作者的许可比较宽松，Pro版于2020年1月6日更新，以Shareware许可分发，试用期30天。按页面上对Shareware的定义，应该是试用期后也可继续使用，售价约合人民币320元。不想掏钱又不愿意试用的可以下载2013年4月15日发布的旧版，这个作者宣布ham可以永久免费使用。而且旧版支持从Win95到Win10的Windows系统，捡一台瘦主机或者上网本搭建平台也很合适。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载下来的压缩包绿色免安装直接运行。注意不要把程序文件夹放到<strong>C:\Program Files</strong>即可，否则权限问题会导致配置文件写入失败。</p><p>程序入口为<strong>AGW Packet Engine.exe</strong>，建议在桌面新建快捷方式。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>以一个声卡，一部电台为例配置。</p><p>注意声卡的选择。一般而言，连接主板音频插口，然后软件里选择主板声卡即可。类似无线耳机、显示器等都不要选。</p><p>2021-12-02 16:17:49 更新：</p><p>后来使用了MixW，没有用AGWPE。</p><h2 id="MixW"><a href="#MixW" class="headerlink" title="MixW"></a>MixW</h2><p>MixW还算好用，SSTV等没问题，不过受限于FT-8900R本身，可用模式不多。没有CAT功能，瀑布图不知道有什么用。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>FT-8900R作为车载FM收发机还算好用，临时架设中继也行，数字通信没有折腾价值，Packet Radio没人玩。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ham</tag>
      
      <tag>FM</tag>
      
      <tag>TNC</tag>
      
      <tag>Packet Radio</tag>
      
      <tag>Yaesu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>业余无线电亚音探究</title>
    <link href="/2021/11/12/tone/"/>
    <url>/2021/11/12/tone/</url>
    
    <content type="html"><![CDATA[<h1 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h1><p>终于，折腾电视盒子告一段落了。想要的功能已经实现，于是回头继续学习无线电。前些年考取了业余无线电A证，买了八重州车台和ICOM手台，不过一直没深入，呼号也是拖到今年才办下来。考虑到当前形势，又入手了2部宝峰UV-5R。我买的是一代，2800mah电池版才90多块，上手感觉还不错，以ICOM手台5%的价格实现了80%以上功能，通过验机也没问题，深受海内外hammer欢迎，配件便宜资料齐全，是入门hammer的好伙伴。以UV-5R为工具，我们来探究下亚音。</p><h1 id="亚音"><a href="#亚音" class="headerlink" title="亚音"></a>亚音</h1><h2 id="CTCSS"><a href="#CTCSS" class="headerlink" title="CTCSS"></a>CTCSS</h2><p>CTCSS (Continuous Tone Controlled Squelch System) ，模拟亚音。<br>UV-5R可以使用如下模拟亚音：</p><img src="/2021/11/12/tone/CTCSS.png" class="" title="CTCSS频率表"><h2 id="DCS"><a href="#DCS" class="headerlink" title="DCS"></a>DCS</h2><p>DCS(DigitalCoded Squelch)，数字亚音。<br>UV-5R可以使用如下数字亚音：</p><img src="/2021/11/12/tone/DCS.png" class="" title="DCS频率表"><p>实际上在设置中你会发现，每个亚音有N和I两种，以023为例，有D023N和D023I两种，这是怎么回事呢？</p><p>字面含义，N是正码（normal），I是反码（inverted），两者选用的原则又是什么呢？</p><p>经过一番搜索，在<a href="https://www.transmission1.net/viewtopic.php?t=18800">D023N&#x2F;D0231</a>找到了答案。信号经过单相放大电路时（原文single stage amplifier circuit，不知这样翻译是否妥当），信号相位会翻转180°，在这种情况下，需要用反码。中文以<strong>放大器 相位反转</strong>为关键词搜索，可以找到许多解释及解决办法。</p><p>另外需要澄清，反码一般上不作为DCS的拓展，简单的例子，D413N与D054I是一模一样的，并不是说用了反码DCS范围就拓展到原来的2倍。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>亚音的运用可以屏蔽干扰。比如在繁忙的信道，通过约定接收亚音与发射亚音，不符合条件的信号得以过滤。需要特别指出，亚音本身并非加密手段，对于未设置接收亚音的收听者，无论信号有无亚音，被如何设置，他都可以接受到。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ham</tag>
      
      <tag>tune</tag>
      
      <tag>CTCSS</tag>
      
      <tag>DCS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LCMP搭建WordPress</title>
    <link href="/2021/11/09/lcmp/"/>
    <url>/2021/11/09/lcmp/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>LAMP</strong>和<strong>LNMP</strong>许多人不会陌生。L代表Linux，P代表PHP，M以前指代MySQL，如今换成了MariaDB，用法大体相同。至于server本身也有很多选择。Apache和Nginx之外，Caddy现在也很流行，具备反代和自动获取证书等许多实用功能。本文介绍搭建<strong>LCMP</strong>以及安装<strong>WordPress</strong>过程，希望对潜在的读者有所帮助。</p><h1 id="硬件平台"><a href="#硬件平台" class="headerlink" title="硬件平台"></a>硬件平台</h1><p>还是 <strong>R3300-M</strong> 盒子哈哈，4核2GHz加上1G内存配置足够了，TF卡选择三星128G，IO性能不是瓶颈。</p><h1 id="网络环境"><a href="#网络环境" class="headerlink" title="网络环境"></a>网络环境</h1><p>我有公网IPv6地址，使用 <strong>cloudflare</strong> 做AAAA记录，本地运行<a href="https://github.com/NewFuture/DDNS">NewFuture DDNS</a>自动更新IP地址。为了隐藏真实IP + 提供IPv4接入，cloudflare那边请打开Proxy。</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>使用 <strong>Manjaro ARM 21.10 minimal vim2</strong> 镜像。为了关机重启正常请使用vim内核。emmc安卓底包为ATV，可提升CPU频率至2016MHz，约提升19%性能。刷机、换国内软件源、换内核等可参考本人之前的文章。</p><h2 id="清理无用软件包"><a href="#清理无用软件包" class="headerlink" title="清理无用软件包"></a>清理无用软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Rsu ap6398s-firmware kvim1-firmware kvim2-firmware<br></code></pre></td></tr></table></figure><p>R3300-M不具备相应硬件，故其驱动可以卸载。</p><h2 id="禁用SWAP"><a href="#禁用SWAP" class="headerlink" title="禁用SWAP"></a>禁用SWAP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl stop zswap-arm.service<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">disable</span> zswap-arm.service<br></code></pre></td></tr></table></figure><p>1G内存专门用来搭建环境运行WordPress足够了。Manjaro ARM中SWAP服务由 <strong>zswap-arm</strong> 这个包提供，如有洁癖也可以直接卸载。</p><h2 id="安装配置networkmanager"><a href="#安装配置networkmanager" class="headerlink" title="安装配置networkmanager"></a>安装配置networkmanager</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S networkmanager<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now NetworkManager<br><span class="hljs-built_in">sudo</span> systemctl stop dhcpcd.service<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">disable</span> dhcpcd.service<br><span class="hljs-built_in">sudo</span> systemctl restart NetworkManager<br></code></pre></td></tr></table></figure><p>注意一定要禁用掉 <strong>dhcpcd</strong> 服务，否则 <strong>NetworkManager</strong> 无法获取到IP地址。</p><p>为什么要安装<strong>networkmanager</strong>呢？因为盒子的有线网卡mac地址每次开机都变化，所以DHCP获取到的IP地址也变来变去。我知悉的唯一有效解决办法是使用<strong>nmtui</strong>提供的mac-address-clone功能固定mac地址，而 <strong>nmtui</strong> 由 <strong>networkmanager</strong> 提供。</p><p>更新：建议用dhcpcd实现静态IP，参见<a href="https://tccmu.com/2023/02/16/manjaro-staticip/">Manjaro设置静态IP</a></p><h1 id="mariadb"><a href="#mariadb" class="headerlink" title="mariadb"></a>mariadb</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S mariadb<br><span class="hljs-built_in">sudo</span> mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now mysql.service<br></code></pre></td></tr></table></figure><p>然后执行设置密码等步骤。网上的许多教程在执行这一步前没有打开 <strong>mysql.service</strong> ，所以此步骤会失败。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mysql_secure_installation<br></code></pre></td></tr></table></figure><p>至此mariadb安装完成，稍后将进行新建数据库、新建用户操作。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>首先登录到数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mysql -u root -p<br></code></pre></td></tr></table></figure><p>然后新建一个名为 <strong>wordpress</strong> 的数据库，字符集为 <strong>utf8mb4</strong> ；新建一个名为 <strong>wp</strong> 的用户，密码为”password”（你需要自行替换密码），赋予这个用户全部权限：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> DATABASE wordpress <span class="hljs-keyword">DEFAULT</span> <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4 <span class="hljs-keyword">COLLATE</span> utf8mb4_unicode_ci;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> wordpress.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;wp&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>;<br>FLUSH PRIVILEGES;<br>EXIT;<br></code></pre></td></tr></table></figure><p>至此数据库配置完成。</p><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S php php-fpm php-gd<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now php-fpm<br></code></pre></td></tr></table></figure><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>编辑 <strong>&#x2F;etc&#x2F;php&#x2F;php.ini</strong> ，启用以下扩展（删掉行首的注释即可）：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">extension</span>=bz2<br><span class="hljs-attr">extension</span>=curl<br><span class="hljs-attr">extension</span>=gd<br><span class="hljs-attr">extension</span>=mysqli<br><span class="hljs-attr">extension</span>=pdo_mysql<br><span class="hljs-attr">extension</span>=zip<br></code></pre></td></tr></table></figure><p>为了方便使用，对部分参数进行修改：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">memory_limit</span>=<span class="hljs-number">256</span>M<br><span class="hljs-attr">post_max_size</span>=<span class="hljs-number">100</span>M<br><span class="hljs-attr">upload_max_filesize</span>=<span class="hljs-number">100</span>M<br></code></pre></td></tr></table></figure><p>编辑 <strong>&#x2F;etc&#x2F;php&#x2F;php-fpm.d&#x2F;<a href="http://www.conf/">www.conf</a></strong> 文件，使其以caddy身份运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf">user = http<br>group = http<br><br>listen.owner = http<br>listen.group = http<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf">user = caddy<br>group = caddy<br><br>listen.owner = caddy<br>listen.group = caddy<br></code></pre></td></tr></table></figure><p>如果不改成caddy，过一会儿试图安装WordPress时caddy会报502错误。</p><h2 id="重新加载"><a href="#重新加载" class="headerlink" title="重新加载"></a>重新加载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl restart php-fpm<br></code></pre></td></tr></table></figure><h1 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>将WordPress下载到当前用户家目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/<br>curl -O https://wordpress.org/latest.tar.gz<br></code></pre></td></tr></table></figure><p>移动到 <strong>&#x2F;srv&#x2F;http</strong> 目录下并解压缩：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> ~/latest.tar.gz /srv/http<br><span class="hljs-built_in">cd</span> /srv/http<br><span class="hljs-built_in">sudo</span> tar -zxvf latest.tar.gz<br></code></pre></td></tr></table></figure><p>然后在 <strong>&#x2F;srv&#x2F;http</strong> 会出现 <strong>wordpress</strong> 文件夹。</p><p>早年用过 <strong>centos</strong> 等Linux发行版的人可能对 <strong>&#x2F;srv&#x2F;http</strong> 不是很熟悉，在Manjaro（或者称其为Archlinux更贴切）中网站目录一般放在这里。当然放在哪里都行，只要在Caddy配置文件中定义明白即可，放在这里只是遵循了Archlinux关于文件目录的设计理念。</p><p>完成后，开始调配Caddy。</p><h1 id="Caddy"><a href="#Caddy" class="headerlink" title="Caddy"></a>Caddy</h1><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S caddy<br></code></pre></td></tr></table></figure><h2 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs conf">domain.com &#123;<br>    # 指向wordpress位置<br>    root * /srv/http/wordpress<br>    encode zstd gzip<br>    file_server<br><br>    @cache &#123;<br>        not header_regexp Cookie &quot;comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in&quot;<br>        not path_regexp &quot;(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(index)?.xml|[a-z0-9-]+-sitemap([0-9]+)?.xml)&quot;<br>        not method POST<br>        not expression &#123;query&#125; != &#x27;&#x27;<br>    &#125;<br><br>    route @cache &#123;<br>        try_files /wp-content/cache/cache-enabler/&#123;host&#125;&#123;uri&#125;/https-index.html /wp-content/cache/cache-enabler/&#123;host&#125;&#123;uri&#125;/index.html &#123;path&#125; &#123;path&#125;/index.php?&#123;query&#125;<br>    &#125;<br>       <br>    # Change the path here according to your server<br>    php_fastcgi unix//run/php-fpm/php-fpm.sock<br>&#125;<br></code></pre></td></tr></table></figure><p>这个配置是从<a href="https://caddy.community/t/example-configure-wordpress-with-a-static-cache/8215">Example: configure WordPress with a static cache</a>略微修改来的，你如果同样使用Manjaro ARM，那么只需要用自己的域名替换就行了。</p><p>在 <strong>&#x2F;etc&#x2F;caddy</strong> 目录中，将默认的<code>Caddyfile</code>复制一份并改名为<code>Caddyfile.ori</code>，然后清空<code>Caddyfile</code>，把自己的配置粘贴进去保存即可。</p><h2 id="修改wp-content权限"><a href="#修改wp-content权限" class="headerlink" title="修改wp-content权限"></a>修改wp-content权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R caddy:caddy /srv/http/wordpress/wp-content/<br></code></pre></td></tr></table></figure><p>这步的操作目的是将 <strong>wp-content</strong> 目录用户和组修改为caddy。刚才解压后得到的wordpress目录中，所有文件用户和组均为 <strong>nobody</strong> ，权限大部分为644，故caddy只有可读权限，无法写入，在后续安装使用（比如安装插件）中会产生许多麻烦。网上流传的所谓<code>sudo chmod -R 755</code>甚至<code>sudo chmod -R 777</code>方法不要用，因其对linux权限系统的破坏是不可逆的。用户与组至少随时可以改回来。严格来说 <strong>wp-content</strong> 用户与组修改为 <strong>caddy</strong> 也不安全，不过在只运行一个网站的情况下，安全性应该还行？</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now caddy<br><span class="hljs-built_in">sudo</span> systemctl restart caddy<br></code></pre></td></tr></table></figure><p>不出意外，此时访问自己的域名会看到wordpress初始化向导。</p><h1 id="性能表现"><a href="#性能表现" class="headerlink" title="性能表现"></a>性能表现</h1><p>全套搭建完毕网站上线运行的情况下，系统负载约0.03，约使用277MB内存，非常轻松。</p><h1 id="风险提示"><a href="#风险提示" class="headerlink" title="风险提示"></a>风险提示</h1><p>家庭宽带对外提供网络服务属于违规行为，就算可以通过iptables等手段屏蔽cloudflare以外的流量，<a href="https://gist.github.com/Manouchehri/cdd4e56db6596e7c3c5a">比如这个：</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Source:</span><br><span class="hljs-comment"># https://www.cloudflare.com/ips</span><br><span class="hljs-comment"># https://support.cloudflare.com/hc/en-us/articles/200169166-How-do-I-whitelist-CloudFlare-s-IP-addresses-in-iptables-</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span> iptables -I INPUT -p tcp -m multiport --dports http,https -s <span class="hljs-variable">$i</span> -j ACCEPT; <span class="hljs-keyword">done</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span> ip6tables -I INPUT -p tcp -m multiport --dports http,https -s <span class="hljs-variable">$i</span> -j ACCEPT; <span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># Avoid racking up billing/attacks</span><br><span class="hljs-comment"># WARNING: If you get attacked and CloudFlare drops you, your site(s) will be unreachable. </span><br>iptables -A INPUT -p tcp -m multiport --dports http,https -j DROP<br>ip6tables -A INPUT -p tcp -m multiport --dports http,https -j DROP<br></code></pre></td></tr></table></figure><p>也只不过是略微提升了安全性，在ISP面前还是掩耳盗铃。另外目前<a href="https://github.com/NewFuture/DDNS">NewFuture DDNS</a>更新IP后，cloudflare的代理会被关闭，需要手动重新开启，期间原始IP暴露无遗。所以如果长期使用，还是买个正经VPS吧。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>排名不分前后：</p><ol><li><a href="https://caddy.community/t/example-configure-wordpress-with-a-static-cache/8215">Example: configure WordPress with a static cache</a></li><li><a href="https://rocka.me/article/wordpress-on-archlinux">在 Arch Linux 中安装 WordPress</a></li><li><a href="https://blog.zhullyb.top/2021/10/21/picuploader-on-archlinux-with-caddy/">PicUploader使用系列（一）——在Archlinux上使用Caddy部署PicUploader</a></li><li><a href="https://m0nkey.cn/2020/02/use-caddy-php-fpm-mariadb-to-quickly-build-a-wordpress-blog-under-archlinux/">在 ArchLinux 下利用Caddy PHP-FPM MariaDB 迅速搭建 WordPress 博客</a></li><li><a href="https://github.com/NewFuture/DDNS">NewFuture DDNS</a></li><li><a href="https://wordpress.stackexchange.com/questions/217880/cant-change-language-only-english-united-states/274639">Can’t change language (only “English (United States)”)</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>aarch64</tag>
      
      <tag>arm64</tag>
      
      <tag>Caddy</tag>
      
      <tag>PHP</tag>
      
      <tag>MariaDB</tag>
      
      <tag>wordpress</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Systemd</title>
    <link href="/2021/11/04/systemd/"/>
    <url>/2021/11/04/systemd/</url>
    
    <content type="html"><![CDATA[<h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><ol><li><a href="https://linux.cn/article-6888-1.html">最简明扼要的 Systemd 教程，只需十分钟</a></li><li><a href="https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html">Systemd 入门教程：命令篇</a></li></ol><h1 id="几例应用"><a href="#几例应用" class="headerlink" title="几例应用"></a>几例应用</h1><h2 id="关闭swap"><a href="#关闭swap" class="headerlink" title="关闭swap"></a>关闭swap</h2><p>swap的使用一直存在争议，为了延长TF卡使用寿命，将其关掉。内存如果不够用，关掉一些服务就行了。毕竟不能指望一台1G内存的电视盒子面面俱到。<br>临时关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> swapoff -a<br></code></pre></td></tr></table></figure><p>永久关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> systemctl stop zswap-arm.service<br>$ <span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">disable</span> zswap-arm.service<br></code></pre></td></tr></table></figure><h2 id="修改hostname"><a href="#修改hostname" class="headerlink" title="修改hostname"></a>修改hostname</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> hostnamectl set-hostname manjaro-arm<br></code></pre></td></tr></table></figure><p>也可以使用<code>nmtui</code>修改，不过<code>hostnamectl</code>是<code>systemd</code>提供的工具，更底层、更直接。大部分现代Linux发行版都使用systemd。</p><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><p><code>systemd</code>可以编写<code>timer</code>，作为<code>cron</code>和<code>at</code>的上位替代。类似Manjaro ARM等发行版已经取消了cron的预装。</p><p>以DDNS为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ddns.service">[Unit]<br>Description=NewFuture ddns<br>Requires=network-online.target<br><br>[Service]<br>Type=simple<br>WorkingDirectory=/usr/share/DDNS<br>ExecStart=/usr/bin/env python /usr/share/DDNS/run.py -c /etc/DDNS/config.json<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ddns.timer">[Unit]<br>Description=NewFuture ddns timer<br>Requires=network-online.target<br><br>[Timer]<br>OnBootSec=1m<br>OnUnitActiveSec=5m<br>Unit=ddns.service<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>aarch64</tag>
      
      <tag>arm64</tag>
      
      <tag>systemd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cloudflare Tunnel 探索</title>
    <link href="/2021/10/29/cloudflare_tunnel/"/>
    <url>/2021/10/29/cloudflare_tunnel/</url>
    
    <content type="html"><![CDATA[<h1 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h1><p>某S905机顶盒 + TF卡 + Manjaro ARM 21.10</p><h1 id="示例说明"><a href="#示例说明" class="headerlink" title="示例说明"></a>示例说明</h1><p>假设我们有一个<code>marly.com</code>的域名，且已经使用<code>cloudflare</code>进行解析。在家里的电视盒子上运行了一个http服务:<code>http://localhost:3000</code>，登录linux系统的用户为marly，我们想在外网通过<code>https://world.marly.com</code>访问这个服务，还要有正规证书。通过<code>Cloudflare Tunnel</code>可以方便实现。</p><p>如果有公网IP，上通过端口转发 + 调用API自动更新A记录 + <code>Let&#39;s Encrypt</code>也可以实现。</p><ol><li>端口转发。本地路由器配置。</li><li>调用API自动更新A记录。GitHub上找到一个看起来不错的项目：<a href="https://github.com/NewFuture/DDNS">NewFuture DDNS</a>。支持DNSPOD，阿里 DNS，DNS.COM，DNSPOD 国际版，CloudFlare，HE.net(不支持自动创建记录)，华为云。</li><li>签发<code>Let&#39;s Encrypt</code>证书 + 续期。使用<a href="https://github.com/acmesh-official/acme.sh">ACME</a>即可。</li></ol><p>此外还发现<a href="https://github.com/ehang-io/nps">ehang-io&#x2F;nps</a>，不过没完整折腾过。</p><h1 id="安装cloudflared"><a href="#安装cloudflared" class="headerlink" title="安装cloudflared"></a>安装cloudflared</h1><p>可以直接下载官方预编译的二进制执行文件或者安装包，地址 <a href="https://github.com/cloudflare/cloudflared/releases/">https://github.com/cloudflare/cloudflared/releases/</a> ，或者使用<code>yay</code>根据当前最新源码编译安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ yay -s <br></code></pre></td></tr></table></figure><p>如果半天没进度，请检查网络状况。</p><p>使用yay安装的cloudflared包含三部分：</p><blockquote><p>&#x2F;usr&#x2F;bin&#x2F;cloudflared &#x2F;etc&#x2F;cloudflared &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;cloudflared.1.gz</p></blockquote><p>日志文件为<code>/var/log/cloudflared.log</code>，默认文件权限640。cloudflared以普通用户权限运行所以没法读写这个日志文件，可以手动把它改成666：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> 666 /var/log/cloudflared.log<br></code></pre></td></tr></table></figure><h1 id="登录授权"><a href="#登录授权" class="headerlink" title="登录授权"></a>登录授权</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel login<br></code></pre></td></tr></table></figure><p>复制终端上的网址，在浏览器中打开，选择<code>marly.com</code>。认证完成后，cloudflared会生成<code>~/.cloudflared/cert.pem</code>。</p><h1 id="tunnel创建"><a href="#tunnel创建" class="headerlink" title="tunnel创建"></a>tunnel创建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel create hello<br></code></pre></td></tr></table></figure><p>上述命令产生如下后果：</p><ul><li>根据提供的name，cloudflared会生成一个UUID，与name唯一对应；</li><li>在<code>~/.cloudflared/</code>中，cloudflared会生成<UUID>.json文件；</li></ul><p>最后使用<code>$ cloudflared tunnel list</code>查看tunnel是否创建成功。</p><h1 id="DNS记录生成"><a href="#DNS记录生成" class="headerlink" title="DNS记录生成"></a>DNS记录生成</h1><h2 id="连接到应用"><a href="#连接到应用" class="headerlink" title="连接到应用"></a>连接到应用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel route dns hello world.marly.com<br></code></pre></td></tr></table></figure><p>此步骤在cloudflare后台创建了<code>world.marly.com</code>的CNAME。</p><h2 id="连接到网络"><a href="#连接到网络" class="headerlink" title="连接到网络"></a>连接到网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel route ip add &lt;IP/CIDR&gt; &lt;UUID or NAME&gt;<br></code></pre></td></tr></table></figure><p>可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel route ip show<br></code></pre></td></tr></table></figure><p>查看是否路由成功。</p><h1 id="配置文件创建"><a href="#配置文件创建" class="headerlink" title="配置文件创建"></a>配置文件创建</h1><p><code>cloudflared</code>的配置文件为<code>config.yml</code>，遵循Linux传统，全局文件路径<code>/etc/cloudflared/config.yml</code>，用户文件路径<code>~/.cloudflared/config.yml</code>。</p><p>全局文件默认内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">logfile:</span> <span class="hljs-string">/var/log/cloudflared.log</span><br><span class="hljs-attr">proxy-dns:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">proxy-dns-address:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br><span class="hljs-attr">proxy-dns-port:</span> <span class="hljs-number">5300</span><br><span class="hljs-attr">proxy-dns-upstream:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">https://1.1.1.1/dns-query</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">https://1.0.0.1/dns-query</span><br></code></pre></td></tr></table></figure><p>在<code>~/.cloudflared/</code>中，创建<code>config.yml</code>文件：</p><h2 id="连接到应用-1"><a href="#连接到应用-1" class="headerlink" title="连接到应用"></a>连接到应用</h2><blockquote><p>url: <a href="http://localhost:8000/">http://localhost:8000</a><br>tunnel: <Tunnel-UUID><br>credentials-file: &#x2F;root&#x2F;.cloudflared&#x2F;<Tunnel-UUID>.json</p></blockquote><p>根据自身情况修改，比如应用端口，UUID，以及credentials-file位置。</p><h2 id="连接到网络-1"><a href="#连接到网络-1" class="headerlink" title="连接到网络"></a>连接到网络</h2><p>tunnel: <Tunnel-UUID><br>credentials-file: &#x2F;root&#x2F;.cloudflared&#x2F;<Tunnel-UUID>.json</p><h1 id="tunnel运行"><a href="#tunnel运行" class="headerlink" title="tunnel运行"></a>tunnel运行</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel run &lt;UUID or NAME&gt;<br></code></pre></td></tr></table></figure><p>如果存在多个配置文件（比如同时运行了多条tunnel），建议通过<code>--config</code>指定路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel --config path/config.yaml run<br></code></pre></td></tr></table></figure><p>最好使用绝对路径。</p><h1 id="检查tunnel状况"><a href="#检查tunnel状况" class="headerlink" title="检查tunnel状况"></a>检查tunnel状况</h1><h2 id="列出所有"><a href="#列出所有" class="headerlink" title="列出所有"></a>列出所有</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel list<br></code></pre></td></tr></table></figure><h2 id="检查单个"><a href="#检查单个" class="headerlink" title="检查单个"></a>检查单个</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cloudflared tunnel info &lt;UUID or NAME&gt;<br></code></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cloudflared tunnel run --url http://localhost:3000 hello<br></code></pre></td></tr></table></figure><h2 id="作为服务运行"><a href="#作为服务运行" class="headerlink" title="作为服务运行"></a>作为服务运行</h2><p>首先准备好config.yml文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">tunnel:</span> <span class="hljs-string">hello</span><br><span class="hljs-attr">credentials-file:</span> <span class="hljs-string">/home/marly/.cloudflared/fe63bc80-7123-65a4-e516-e125b06f0a12.json</span><br><br><span class="hljs-attr">ingress:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">hostname:</span> <span class="hljs-string">world.marly.com</span><br>    <span class="hljs-attr">service:</span> <span class="hljs-string">http://localhost:3000</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">service:</span> <span class="hljs-string">http_status:404</span><br></code></pre></td></tr></table></figure><p>然后将该文件移动到<code>/etc/cloudflare</code>目录下，原有的文件提前改名或删除。</p><p>安装服务：<code>sudo cloudflared service install</code> 。cloudflare文档说明此步骤会自动将<code>~/.cloudflared/config.yml</code>复制到<code>/etc/cloudflared</code>中，但实际测试找不到配置文件，故手动复制。</p><p>启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> cloudflared<br><span class="hljs-built_in">sudo</span> systemctl start cloudflared<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>Cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Rocket.Chat搭建聊天服务器</title>
    <link href="/2021/10/27/rocketchat/"/>
    <url>/2021/10/27/rocketchat/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Rocket.Chat是一个开源，可定制的交流平台，支持docker和snap。本文介绍在Manjaro ARM的安装方式。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>首先安装snap：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy snapd<br><span class="hljs-built_in">sudo</span> snap install rocketchat-server<br></code></pre></td></tr></table></figure><p>然后在浏览器中，访问服务器的3000端口就行了。注意3000端口常用（比如mdbook就会默认占用），注意不要冲突。</p><p>完成安装后，系统会自动配置好相应服务，默认开机启动，不需要额外配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status snap.rocketchat-server.rocketchat-server.service<br>● snap.rocketchat-server.rocketchat-server.service - Service <span class="hljs-keyword">for</span> snap application rocketchat-server.rocketchat-server<br>     Loaded: loaded (/etc/systemd/system/snap.rocketchat-server.rocketchat-server.service; enabled; vendor preset: disabled)<br>     Active: active (running) since Thu 2021-10-28 15:41:03 CST; 2min 58s ago<br>   Main PID: 443 (startRocketChat)<br>      Tasks: 25 (<span class="hljs-built_in">limit</span>: 664)<br>     Memory: 544.6M<br>        CPU: 2min 10.298s<br>     CGroup: /system.slice/snap.rocketchat-server.rocketchat-server.service<br>             ├─ 443 /bin/bash /snap/rocketchat-server/1460/bin/startRocketChat<br>             └─1140 node /snap/rocketchat-server/1460/main.js<br><br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |      MongoDB Version: 3.6.21            |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |       MongoDB Engine: wiredTiger        |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |             Platform: linux             |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |         Process Port: 3000              |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |             Site URL: http://localhost  |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |     ReplicaSet OpLog: Enabled           |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |          Commit Hash: 5e9f4bc424        |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |        Commit Branch: HEAD              |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ |                                         |<br>Oct 28 15:43:41 marly-aml rocketchat-server.rocketchat-server[1140]: ➔ +-----------------------------------------+<br><br></code></pre></td></tr></table></figure><p>服务启动比较慢，如果<code>systemctl status snap.rocketchat-server.rocketchat-server.service</code>提示<code>ERROR: ld.so: object &#39;/usr/lib/libgtk3-nocsd.so.0&#39; from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.</code>，等待3分钟即可。</p><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><p>参考<a href="https://docs.rocket.chat/quick-start/installing-and-updating/hardware-requirements">官方文档</a>，4核1G内存的树莓派2或者3配合32G存储卡，能够满足大约50个用户同时使用。对于S905盒子而言毫无压力。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>Rocket.Chat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM运行hummingbot</title>
    <link href="/2021/10/26/hummingbot_amlogic/"/>
    <url>/2021/10/26/hummingbot_amlogic/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2021年9月15日，人民银行、网信办、最高人民法院、最高人民检察院、工业和信息化部、公安部、市场监管总局、银保监会、证监会、外汇局联合印发《关于进一步防范和处置虚拟货币交易炒作风险的通知》（银发〔2021〕237号），明确虚拟货币相关业务活动属于非法金融活动。不过掌握虚拟货币的基本概念，以及对其工具具备认知仍具备正面意义。本文介绍了在Manjaro ARM平台运行hummingbot过程，仅供学习用途。</p><h1 id="在Docker中运行"><a href="#在Docker中运行" class="headerlink" title="在Docker中运行"></a>在Docker中运行</h1><h2 id="下载一键脚本"><a href="#下载一键脚本" class="headerlink" title="下载一键脚本"></a>下载一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh<br>wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh<br>wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh<br></code></pre></td></tr></table></figure><h2 id="给脚本添加可执行权限"><a href="#给脚本添加可执行权限" class="headerlink" title="给脚本添加可执行权限"></a>给脚本添加可执行权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> a+x *.sh<br></code></pre></td></tr></table></figure><h2 id="创建hummingbot实例"><a href="#创建hummingbot实例" class="headerlink" title="创建hummingbot实例"></a>创建hummingbot实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./create.sh<br></code></pre></td></tr></table></figure><p>第一步提示hummingbot镜像版本，对于ARM平台当然需要使用ARM标签。hummingbot更新比较频繁，可以到 <a href="https://hub.docker.com/r/coinalpha/hummingbot/tags">https://hub.docker.com/r/coinalpha/hummingbot/tags</a> 查看。</p><h2 id="常用docker命令"><a href="#常用docker命令" class="headerlink" title="常用docker命令"></a>常用docker命令</h2><p>列出container：<code>docker container ps</code></p><p>查看container实时状态：<code>dockerc container stats</code></p><p>启动container：<code>docker start hummingbot-instance</code></p><p>连接到container：<code>docker attatch hummingbot-instance</code></p><p>断开container：<code>Ctrl + P 然后 Ctrl + Q</code> （container在后台继续运行）</p><p>至成稿时，最新版本为<code>version-0.43.1-arm_beta</code>。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>刚创建的<code>hummingbot-instance</code>约占用374MB内存以及不低于20%的CPU，CPU有时还会满载，1G内存的S905盒子跑起来略吃力。如果用Manjaro ARM Minimal搭建最小化运行环境可能会略微改善。笔者没有交易所账号，没有进行更深入测试。</p><h1 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h1><p>源码安装比较麻烦，不过可以实现：</p><h2 id="源码拉取"><a href="#源码拉取" class="headerlink" title="源码拉取"></a>源码拉取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/coinalpha/hummingbot<br></code></pre></td></tr></table></figure><h2 id="python包安装"><a href="#python包安装" class="headerlink" title="python包安装"></a>python包安装</h2><p>官方在树莓派上的教程有些过时了。杂糅下教程中引用的和<code>setup/requirements-arm.txt</code>包，共需要这些依赖：</p><blockquote><p>0x-contract-wrappers 0x-order-utils aioconsole aiohttp aiokafka aioresponses attrdict binance cachetools coverage cython diff-cover eth_account eth_bloom ethsnarks-loopring flake8 idna-ssl jwt mypy_extensions nose numpy objgraph pandas pre-commit prompt_toolkit psutil pyinstall pyjwt pyperclip python-binance python-telegram-bot rsa ruamel.yaml signalr-client-aio simplejson sqlalchemy telegram tzlocal ujson web3 websockets </p></blockquote><p>解决粘贴问题，再加上<code>QtPy</code>。</p><p>另外值得指出，hummingbot依赖<code>sqlalchemy</code>提供的<code>RowProxy</code>。但是在sqlalchemy1.4中，<code>RowProxy</code>被移除了，所以这个包需要用旧版本。</p><p>pip官方源在国内下载很慢，故使用-i选项指定清华镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install 0x-contract-wrappers 0x-order-utils aioconsole aiohttp aiokafka aioresponses attrdict binance cachetools coverage cython diff-cover eth_account eth_bloom ethsnarks-loopring flake8 idna-ssl jwt mypy_extensions nose numpy objgraph pandas pre-commit prompt_toolkit psutil pyinstall pyjwt pyperclip python-binance python-telegram-bot rsa ruamel.yaml signalr-client-aio simplejson sqlalchemy telegram tzlocal ujson web3 websockets QtPy -i https://pypi.tuna.tsinghua.edu.cn/simple<br><br>pip install --user SQLAlchemy==1.3.6  -i https://pypi.tuna.tsinghua.edu.cn/simple<br><br></code></pre></td></tr></table></figure><p>这样python依赖包就安装好了。</p><h2 id="Miniforge3安装"><a href="#Miniforge3安装" class="headerlink" title="Miniforge3安装"></a>Miniforge3安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh<br><span class="hljs-built_in">chmod</span> u+x Miniforge3-Linux-aarch64.sh <br>./Miniforge3-Linux-aarch64.sh <br></code></pre></td></tr></table></figure><p>装好后，重新登录系统以使<code>conda</code>命令生效。</p><h2 id="hummingbot编译"><a href="#hummingbot编译" class="headerlink" title="hummingbot编译"></a>hummingbot编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> hummingbot<br>./clean &amp;&amp; ./compile<br></code></pre></td></tr></table></figure><h2 id="hummingbot运行"><a href="#hummingbot运行" class="headerlink" title="hummingbot运行"></a>hummingbot运行</h2><p>在<code>hummingbot</code>源码根目录下，执行<code>bin/hummingbot.py</code>。首次运行会进行一些初始化配置，按提示操作即可。</p><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><p>用源码折腾很麻烦，CPU照样满载，docker至少方便一些。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>hummingbot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自制Manjaro ARM启动TF卡/U盘</title>
    <link href="/2021/10/21/DIY-Manjaro-ARM/"/>
    <url>/2021/10/21/DIY-Manjaro-ARM/</url>
    
    <content type="html"><![CDATA[<p>Manjaro ARM官方制作维护了许多开箱即用的镜像，不过同时提供了打包工具，可以用来自行制作镜像包或启动TF卡&#x2F;U盘。</p><p>Manjaro提供了2个工具，manjaro-arm-tools和manjaro-arm-installer。manjaro-arm-tools可生成镜像包，目前仅支持Manjaro。manjaro-arm-installer用于直接制作启动盘，可运行在任意发行版。也可以通过创建loop设备方式，将镜像写入磁盘，方便分发使用。</p><p>本例中，在deepin上配置使用manjaro-arm-installer。</p><h1 id="下载manjaro-arm-installer"><a href="#下载manjaro-arm-installer" class="headerlink" title="下载manjaro-arm-installer"></a>下载manjaro-arm-installer</h1><p><code>manjaro-arm-installer</code>就是一个bash脚本，下载地址： <a href="https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-installer/-/tags">https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-installer/-/tags</a> 选择最新的即可。</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>该脚本依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;git&quot;</span> <span class="hljs-string">&quot;parted&quot;</span> <span class="hljs-string">&quot;systemd-nspawn&quot;</span> <span class="hljs-string">&quot;wget&quot;</span> <span class="hljs-string">&quot;dialog&quot;</span> <span class="hljs-string">&quot;bsdtar&quot;</span> <span class="hljs-string">&quot;openssl&quot;</span> <span class="hljs-string">&quot;awk&quot;</span> <span class="hljs-string">&quot;btrfs&quot;</span> <span class="hljs-string">&quot;mkfs.vfat&quot;</span> <span class="hljs-string">&quot;mkfs.btrfs&quot;</span> <span class="hljs-string">&quot;cryptsetup&quot;</span><br></code></pre></td></tr></table></figure><p>大部分依赖系统已预装，或者直接按包名安装即可，注意在deepin中，<code>systemd-nspawn</code>由<code>systemd-container</code>提供。</p><p>另外<code>qemu-user-static</code>也要安装。装好后，进入<code>/usr/lib/binfmt.d</code>。这个目录下针对不同架构有许多文件，我们的盒子是aarch64架构，所以将<code>qemu-aarch64-static.conf</code>复制一份，改名为<code>qemu-static.conf</code>。</p><h1 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h1><p>按提示进行选择机型、版本、设置用户名密码、时区等操作即可。建议全程出国上网，直连下载rootfs很慢（约170.11M）。完成后，对应TF卡&#x2F;U盘存在fat与ext4两分区，用过Armbian的应该很熟悉下步配置了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro安装使用transmission</title>
    <link href="/2021/10/19/transmission/"/>
    <url>/2021/10/19/transmission/</url>
    
    <content type="html"><![CDATA[<h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><p>R3300-M一台，TF卡一个（运行Manjaro ARM），拆机硬盘DIY的移动硬盘一个。电源用12V 2A的，1A的带硬盘不够。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy transmission-cli<br></code></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /var/lib/transmission/.config/transmission-daemon/settings.json<br></code></pre></td></tr></table></figure><p>以下为常用配置，设置下载队列大小，下载路径，缓存等。对于一个headless下载机而言能够远程访问很重要，所以建议把局域网地址添加到<code>rpc-whitelist</code>中。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;cache-size-mb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">50</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;download-dir&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/mnt/transmission&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;download-queue-size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">50</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;download-dir&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/mnt/transmission&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;rpc-whitelist&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;192.168.1.*,127.0.0.1,::1&quot;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> transmission<br><span class="hljs-built_in">sudo</span> systemctl start transmission<br></code></pre></td></tr></table></figure><p><code>transmission-cli</code>贴心地提供了系统服务，启用即可。</p><h1 id="运行smb服务"><a href="#运行smb服务" class="headerlink" title="运行smb服务"></a>运行smb服务</h1><p>下篇讲解。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>transmission</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Systemd实现以用户身份开机自动执行脚本</title>
    <link href="/2021/10/11/systemd-service/"/>
    <url>/2021/10/11/systemd-service/</url>
    
    <content type="html"><![CDATA[<h1 id="需要开机自动执行的脚本"><a href="#需要开机自动执行的脚本" class="headerlink" title="需要开机自动执行的脚本"></a>需要开机自动执行的脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># rustdocs.sh</span><br><span class="hljs-comment"># 别忘记给它可执行权限</span><br>/home/marly/.cargo/bin/mdbook serve -n 0.0.0.0 -p 3000 /home/marly/Documents/rust/trpl-zh-cn&amp;<br>/home/marly/.cargo/bin/mdbook serve -n 0.0.0.0 -p 4000 /home/marly/Documents/rust/rust-by-example-cn&amp;<br></code></pre></td></tr></table></figure><p>第一行如果末尾不加”&amp;”，第二句命令就不会执行。</p><p>另外脚本启动发生在marly登录bash之前，所以类似<code>.bash_profile</code>中自定义的<code>$PATH</code>无效，需要使用绝对路径。</p><h1 id="systemd服务"><a href="#systemd服务" class="headerlink" title="systemd服务"></a>systemd服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Start rust doc service on boot<br>Requires=network-online.target<br>Documentation=man:rustc<br><br>[Service]<br>User=marly<br>Type=forking<br>ExecStart=/home/marly/.local/bin/rustdocs.sh<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>把它命名为 <code>rustdoc-start.service</code> 即可，必须以<code>.service</code>结尾。</p><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><p>将上述service文件放置在<code>/etc/systemd/system</code>或<code>/usr/lib/systemd/system/</code>中，然后执行<code>sudo systemctl enable rustdoc-start.service</code>。完毕后重启设备观察效果，如无意外mdbook服务会自动启动。</p><p>注意<code>sudo systemctl enable rustdoc-start.service</code>的细节。此步骤在<code>/etc/systemd/system/multi-user.target.wants</code>创建了指向<code>rustdoc-start.service</code>的同名符号链接。</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>上面的User，Type，ExecStart，WantedBy是重点。<code>User=marly</code>即以用户marly身份执行，<code>ExecStart</code>为所执行命令，本例中即刚才编写的脚本路径。<code>WantedBy</code>决定了服务启动时机，<code>multi-user.target</code>对应的系统状态大致为： (参考自 <a href="https://unix.stackexchange.com/questions/506347/why-do-most-systemd-examples-contain-wantedby-multi-user-target">Why do most systemd examples contain WantedBy&#x3D;multi-user.target?</a>)</p><blockquote><p>multi-user.target normally defines a system state where all network services are started up and the system will accept logins, but a local GUI is not started. This is the typical default system state for server systems, which might be rack-mounted headless systems in a remote server room.</p></blockquote><blockquote><p>所有网络服务已启动，系统已经做好接受登录的准备，但是GUI还未启动。对于无头服务器而言，这是默认的系统状态。</p></blockquote><p>本例需要对外提供网络服务，所以<code>WantedBy=multi-user.target</code>是合适的。</p><p>最后是<code>Type</code>，有<code>simple, exec, forking, oneshot, dbus, notify, idle</code>几种类型。借用下<a href="http://www.jinbuguo.com/systemd/systemd.service.html">金步国先生的翻译</a> ：</p><blockquote><p>如果设为 forking ，那么表示 ExecStart&#x3D; 进程将会在启动过程中使用 fork() 系统调用。 也就是当所有通信渠道都已建好、启动亦已成功之后，父进程将会退出，而子进程将作为主服务进程继续运行。 这是传统UNIX守护进程的经典做法。 在这种情况下，systemd 会认为在父进程退出之后，该服务就已经启动完成。 如果使用了此种类型，那么建议同时设置 PIDFile&#x3D; 选项，以帮助 systemd 准确可靠的定位该服务的主进程。 systemd 将会在父进程退出之后 立即开始启动后继单元。</p></blockquote><p>个人理解，执行<code>rustdocs.sh</code>本身创建了一个进程，其中的两条mdbook命令又创建了2个子进程。只有2个子进程存续，我们的rust doc服务才能访问。所以oneshot，simple等都不行。</p><p>简单验证一下猜想：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ps x | grep rust<br>    403 ?        Sl     0:05 /home/marly/.cargo/bin/mdbook serve -n 0.0.0.0 -p 3000 /home/marly/Documents/rust/trpl-zh-cn<br>    404 ?        Sl     0:05 /home/marly/.cargo/bin/mdbook serve -n 0.0.0.0 -p 4000 /home/marly/Documents/rust/rust-by-example-cn<br>  63046 pts/0    S+     0:00 grep rust<br></code></pre></td></tr></table></figure><p>验证成功。再顺便看看进程的owner：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">stat</span> -c <span class="hljs-string">&#x27;%U&#x27;</span> /proc/403 /proc/404<br>marly<br>marly<br></code></pre></td></tr></table></figure><p>符合预期。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>Systemd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM内核比较</title>
    <link href="/2021/10/08/Manjaro-ARM-Kernel/"/>
    <url>/2021/10/08/Manjaro-ARM-Kernel/</url>
    
    <content type="html"><![CDATA[<p>Manjaro ARM软件仓库里可用内核有三个分支：mainline，aml，vim，都有对应的headers。</p><h1 id="mainline"><a href="#mainline" class="headerlink" title="mainline"></a>mainline</h1><p>更新最快，理论上被投入的开发维护资源更多。如果用mainline kernel一切正常，就选它好了。</p><h1 id="aml"><a href="#aml" class="headerlink" title="aml"></a>aml</h1><p>可能对Amlogic SOC有加成？我没发现。</p><h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h1><p>可能对vim板子有加成？</p><p>用刷入ATV底包的R3300-M盒子测试，三者都能正常启动运行，但是只有vim内核poweroff与reboot正常，故切换到vim内核。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy linux-vim linux-vim-headers<br></code></pre></td></tr></table></figure><p>编译WIFI驱动小小修改一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/jwrdegoede/rtl8189ES_linux.git<br><span class="hljs-built_in">cd</span> ~/rtl8189ES_linux/<br>make -j4 ARCH=arm64 KSRC=/usr/lib/modules/$(<span class="hljs-built_in">uname</span> -r)/build<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">cp</span> 8189es.ko /usr/lib/modules/$(<span class="hljs-built_in">uname</span> -r)/kernel/drivers/net/wireless/realtek/<br><span class="hljs-built_in">sudo</span> depmod -a<br><span class="hljs-built_in">sudo</span> modprobe 8189es<br></code></pre></td></tr></table></figure><p>直接指定架构为arm64进行编译即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>kernel</tag>
      
      <tag>R3300-M</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用mdbook本地查看rust教程</title>
    <link href="/2021/10/03/mdbook/"/>
    <url>/2021/10/03/mdbook/</url>
    
    <content type="html"><![CDATA[<p>首先推荐两个教程：<br>*. <a href="https://github.com/KaiserY/trpl-zh-cn">Rust 程序设计语言（第二版 &amp; 2018 edition） 简体中文版</a><br>*. <a href="https://github.com/rust-lang-cn/rust-by-example-cn">通过例子学 Rust</a></p><p>以上教程均可在线阅读，不过也可下载到本地阅读。以<a href="https://github.com/rust-lang-cn/rust-by-example-cn">通过例子学 Rust</a>为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://github.com/rust-lang-cn/rust-by-example-cn<br>$ <span class="hljs-built_in">cd</span> rust-by-example-cn<br>$ cargo install mdbook<br>$ mdbook build<br>$ mdbook serve<br></code></pre></td></tr></table></figure><p>在arm设备上远程操作，建议新建screen以免意外连接丢失重新来过。另外我需要从其他设备访问文档页面，默认的<code>mdbook server</code>只允许localhost访问，需要略微修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mdbook serve -n 0.0.0.0<br></code></pre></td></tr></table></figure><p>这样局域网其他设备就可以在浏览器中通过3000端口阅读文档了。如果需要更换端口号，可以通过<code>-p</code>自行指定。</p>]]></content>
    
    
    
    <tags>
      
      <tag>aarch64</tag>
      
      <tag>rust</tag>
      
      <tag>mdbook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rust on aarch64</title>
    <link href="/2021/09/30/rustonaarch64/"/>
    <url>/2021/09/30/rustonaarch64/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy rust<br></code></pre></td></tr></table></figure><h1 id="换国内源"><a href="#换国内源" class="headerlink" title="换国内源"></a>换国内源</h1><p>参考自<a href="https://www.cnblogs.com/kuikuitage/p/14199424.html">解决Rust – update crates.io过慢的问题</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.cargo/config<br></code></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 放到 `$HOME/.cargo/config` 文件中</span><br>[source.crates-io]<br>registry = <span class="hljs-string">&quot;https://github.com/rust-lang/crates.io-index&quot;</span><br><br><span class="hljs-comment"># 替换成你偏好的镜像源</span><br>replace-with = <span class="hljs-string">&#x27;sjtu&#x27;</span><br><span class="hljs-comment">#replace-with = &#x27;ustc&#x27;</span><br><br><span class="hljs-comment"># 清华大学</span><br>[source.tuna]<br>registry = <span class="hljs-string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git&quot;</span><br><br><span class="hljs-comment"># 中国科学技术大学</span><br>[source.ustc]<br>registry = <span class="hljs-string">&quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span><br><br><span class="hljs-comment"># 上海交通大学</span><br>[source.sjtu]<br>registry = <span class="hljs-string">&quot;https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index&quot;</span><br><br><span class="hljs-comment"># rustcc社区</span><br>[source.rustcc]<br>registry = <span class="hljs-string">&quot;git://crates.rustcc.cn/crates.io-index&quot;</span><br></code></pre></td></tr></table></figure><h1 id="查看文档"><a href="#查看文档" class="headerlink" title="查看文档"></a>查看文档</h1><p>使用cargo doc生成的文档为网页形式，可以用python建立服务器然后在浏览器中查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 首先进入doc目录</span><br>python -m http.server 8000<br></code></pre></td></tr></table></figure><p>然后在浏览器中访问即可。python服务器默认端口为8000，无特别要求可省略。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>aarch64</tag>
      
      <tag>rust</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro Sway 命令行提示符挖掘</title>
    <link href="/2021/09/28/bash-silver/"/>
    <url>/2021/09/28/bash-silver/</url>
    
    <content type="html"><![CDATA[<p>Manjaro Sway默认的bash提示符看起来类似oh-my-zsh比较美观，简单分析后发现使用了<a href="https://github.com/reujab/silver">silver</a>：</p><p><img src="https://github.com/reujab/silver/raw/master/sleep.png" alt="图示"></p><blockquote><p>A cross-shell customizable powerline-like prompt heavily inspired by Agnoster. The faster rust port of bronze.</p></blockquote><p>silver是一个跨平台、方便配置的类powerline提示符，从bronze移植而来。bronze是用go开发的，目前已经停止维护了，其git页面上显示用rust写的silver比它快50%，其配置文件通用所以老用户迁移很容易。bronze大量参考了<a href="https://github.com/agnoster/agnoster-zsh-theme">Agnoster</a>这个zsh主题。</p><p>目前silver支持 Powershell, Bash, Zsh, fish, Ion 和Elvish。</p><p>silver的图标由<a href="https://github.com/ryanoasis/nerd-fonts">nerd</a>字体提供。这个字体囊括了常用图标库，比如Font Awesome就包含其中。<br><img src="https://github.com/ryanoasis/nerd-fonts/raw/master/images/sankey-glyphs-combined-diagram.svg" alt="diagram"></p><p>Manjaro Sway中，silver.toml位于<code>~/.config/silver</code>，可根据自身喜好修改。</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;status&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;black&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;white&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;user&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;yellow&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;dir&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;blue&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;git&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;green&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br><br><span class="hljs-section">[[left]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;cmdtime&quot;</span><br><span class="hljs-attr">color.background</span> = <span class="hljs-string">&quot;magenta&quot;</span><br><span class="hljs-attr">color.foreground</span> = <span class="hljs-string">&quot;black&quot;</span><br></code></pre></td></tr></table></figure><p>需要指出，在bash中，<code>cmdtime</code>不可用，故不会显示。</p>]]></content>
    
    
    
    <tags>
      
      <tag>bash</tag>
      
      <tag>silver</tag>
      
      <tag>nerd-fonts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux命令行创建用户并加入组</title>
    <link href="/2021/09/27/linux-useradd/"/>
    <url>/2021/09/27/linux-useradd/</url>
    
    <content type="html"><![CDATA[<p>以下为在Manjaro ARM下通过命令行创建用户“marly”全过程，各步骤已做分解。</p><ol><li>查看useradd默认模板</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> useradd -D<br><br>GROUP=984<br>HOME=/home<br>INACTIVE=-1<br>EXPIRE=<br>SHELL=/bin/bash<br>SKEL=/etc/skel<br>CREATE_MAIL_SPOOL=no<br></code></pre></td></tr></table></figure><ol start="2"><li>创建用户</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> useradd marly<br></code></pre></td></tr></table></figure><ol start="3"><li>创建密码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> passwd marly<br></code></pre></td></tr></table></figure></li><li>创建home目录<br>useradd默认情况下不会创建home目录（尽管会根据模板写入passwd文件），所以需要自行创建。<br>mkhomedir_helper用法：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkhomedir_helper &#123;user&#125; [<span class="hljs-built_in">umask</span> [ path-to-skel ]]<br></code></pre></td></tr></table></figure>第一个参数用户名必选，umask与skel路径可选。默认umask为0022，默认skel路径为&#x2F;etc&#x2F;skel（模板里可以看到）。skel里面的内容会被复制一份到marly的家目录中。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mkhomedir_helper marly<br></code></pre></td></tr></table></figure></li><li>添加用户备注<br>勤于写备注是好习惯：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> usermod -c <span class="hljs-string">&quot;guess who is marly&quot;</span> marly<br></code></pre></td></tr></table></figure></li><li>查看用户组<br>查看当前用户group：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">groups</span><br></code></pre></td></tr></table></figure>等价于<br>查看当前用户group：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">groups</span> <span class="hljs-variable">$USER</span><br></code></pre></td></tr></table></figure>查看其他用户group：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">groups</span> git<br><br>git<br></code></pre></td></tr></table></figure>不需要特殊权限即可查看。</li><li>添加用户到group：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> usermod -aG existgroup newuser<br></code></pre></td></tr></table></figure>-aG为追加用户到现有组。</li></ol><p>新创建的用户默认会自动创建并加入与用户名同名的组，为了实现各种功能，需要将其添加到更多的组。例如，需要赋予marly管理员权限，就需要将其加入wheel组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> usermod -aG wheel marly<br></code></pre></td></tr></table></figure><p>这样marly就有权使用sudo命令了。在debian中sudo组替代了wheel。</p><ol start="8"><li>一步创建：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -c <span class="hljs-string">&quot;this shows how to create user in single line&quot;</span> -G git,wheel -m  fredman<br></code></pre></td></tr></table></figure></li></ol><p>不推荐用-p直接分配密码。删除用户用userdel：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">userdel -r fredman<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>user</tag>
      
      <tag>group</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NEC服务器运行TrueNAS</title>
    <link href="/2021/09/26/N8000-TrueNAS/"/>
    <url>/2021/09/26/N8000-TrueNAS/</url>
    
    <content type="html"><![CDATA[<h1 id="硬件平台"><a href="#硬件平台" class="headerlink" title="硬件平台"></a>硬件平台</h1><p>NEC的mini型工作站，N8000-30044S13 GSC-S13F，型号GSC001。官方资料很少，猜测是企业定制版。主要特性如下：</p><h2 id="电源：额定150W。负载为20-，50-，100-情况下效率可达87-，90-，90-。100-时功率因数0-96。"><a href="#电源：额定150W。负载为20-，50-，100-情况下效率可达87-，90-，90-。100-时功率因数0-96。" class="headerlink" title="电源：额定150W。负载为20%，50%，100%情况下效率可达87%，90%，90%。100%时功率因数0.96。"></a>电源：额定150W。负载为20%，50%，100%情况下效率可达87%，90%，90%。100%时功率因数0.96。</h2><h2 id="功耗：整机最大功耗95W，空载功耗，35W，关机功耗0-8W，噪音44db。文档没说明测试条件不过大概率是用E3-1225测的。"><a href="#功耗：整机最大功耗95W，空载功耗，35W，关机功耗0-8W，噪音44db。文档没说明测试条件不过大概率是用E3-1225测的。" class="headerlink" title="功耗：整机最大功耗95W，空载功耗，35W，关机功耗0.8W，噪音44db。文档没说明测试条件不过大概率是用E3-1225测的。"></a>功耗：整机最大功耗95W，空载功耗，35W，关机功耗0.8W，噪音44db。文档没说明测试条件不过大概率是用E3-1225测的。</h2><h2 id="主板：SATA接口3个，Intel千兆网卡1个，USB2-0-4个，COM口1个，VGA1个，4pin风扇接口3个，内存插槽2个。还有1个DP接口，不过识别不到。主板预留了USB3-0位置和对应开孔但没有加焊。"><a href="#主板：SATA接口3个，Intel千兆网卡1个，USB2-0-4个，COM口1个，VGA1个，4pin风扇接口3个，内存插槽2个。还有1个DP接口，不过识别不到。主板预留了USB3-0位置和对应开孔但没有加焊。" class="headerlink" title="主板：SATA接口3个，Intel千兆网卡1个，USB2.0 4个，COM口1个，VGA1个，4pin风扇接口3个，内存插槽2个。还有1个DP接口，不过识别不到。主板预留了USB3.0位置和对应开孔但没有加焊。"></a>主板：SATA接口3个，Intel千兆网卡1个，USB2.0 4个，COM口1个，VGA1个，4pin风扇接口3个，内存插槽2个。还有1个DP接口，不过识别不到。主板预留了USB3.0位置和对应开孔但没有加焊。</h2><h2 id="硬盘位"><a href="#硬盘位" class="headerlink" title="硬盘位"></a>硬盘位</h2><p>硬盘笼可安装2块3.5寸机械硬盘。主板上有一些控制硬件功能的跳帽，如果将RAID的跳帽插上（短接），主板SATA就只有RAID选项可用。拔掉后SATA模式可选IDE，AHCI或禁用。其他几个跳帽功能不明。RAID配置使用LSI Software RAID Configuration Utility。</p><h2 id="外设"><a href="#外设" class="headerlink" title="外设"></a>外设</h2><p>DVD光驱一个，喇叭一个。</p><p>以上平台 + G645处理器+2条8G ECC内存 + 2张3T机械硬盘 + 1个32G的U盘就得到了完整的TrueNAS硬件平台。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>TrueNAS建议安装在16G以上的NVME等设备中，不推荐U盘，不过家用问题不大。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>添加磁盘，新建存储池等等，与老款FreeNAS基本一致。</p><h1 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h1><p>由于噪音感人所以扔地下室储藏间，跑满局域网千兆轻轻松松。不进行硬盘操作情况下，在网页页面中看到CPU使用率只有1%，最高温度26.9度长期运行毫无压力。如果更换静音风扇作为普通PC机使用应该也能胜任，几个风扇都是普通4pin接口不需要自行魔改。</p><p>三个风扇参数如下，可以根据规格自行替换：</p><ol><li><p>CPU风扇：AFC0712DD，12V 0.45A，鲁大师读数在1500RPM上下。</p></li><li><p>电源风扇：AFC0812DD，12V 0.75A，鲁大师中没看到读数。</p></li><li><p>机箱风扇：FFB0412SHN，12V 0.60A，鲁大师读数在5300RPM左右。</p></li></ol><p>BIOS中可以设置忽略错误，即便不插风扇也可以正常开机启动。</p>]]></content>
    
    
    
    <tags>
      
      <tag>TrueNAS</tag>
      
      <tag>NEC</tag>
      
      <tag>N8000-30044S13</tag>
      
      <tag>GSC-S13F</tag>
      
      <tag>GSC001</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M Android6.0试验</title>
    <link href="/2021/09/18/R3300M-Android6/"/>
    <url>/2021/09/18/R3300M-Android6/</url>
    
    <content type="html"><![CDATA[<p>恩山上看到有人在R3300-L上刷入Android 6.0后，成功将openwrt刷入emmc并启动成功。或许R3300-M也可以？</p><p>R3300-M使用meson-gxbb-p201.dtb，搜索外网固件基本上锁定MXQ P201关键词，于是搜到了这个帖子：</p><p><a href="https://forum.freaktab.com/forum/tv-player-support/amlogic-based-tv-players/s905/others-ac/firmware-roms-tools-bj/789645-ugoos-android-6-0-1-port-mxq-s905-p201">Ugoos Android 6.0.1 port MXQ S905 P201</a></p><p>有网友在MXQ P201上测试，WIFI正常，有线网卡不工作。不过我们现在只关心BootLoader，Amlogic设备的分区表都在BootLoader里，如果这个BootLoader比较新，可以小小期待下从emmc启动。</p><p>从上面帖子追踪到原贴，某位俄国人基于UGOS做的改版固件：  <a href="https://4pda.to/forum/index.php?showtopic=760441&st=1320">https://4pda.to/forum/index.php?showtopic=760441&amp;st=1320</a></p><p>固件下载地址： <a href="https://drive.google.com/drive/folders/1ECX6Peu5tELNMbLKo5_dBJN76DlvuX6L">https://drive.google.com/drive/folders/1ECX6Peu5tELNMbLKo5_dBJN76DlvuX6L</a></p><p>其中：（谷歌渣翻译加猜测，原文俄文看不懂）</p><ol><li>ugos7 wifi.img ： 只有 WIFI 工作</li><li>ugos9 wifi s pdu.img ： Wifi 工作和远程控制</li><li>ugos10 wifi s pdu ckear.img ：Wifi 工作正常，删除了一些 ugos预装应用和启动器（作者说这个最精简，最快）</li></ol><p>ugos10应该最适合，如果这个固件内核版本高于3.14，那么从emmc启动openwrt（5.4内核）就很有希望。Manjaro主线内核已经滚到了5.14.2，不抱希望。（如果没记错，恩山Flippy在某帖子中提到5.10内核后Amlogic都无法从emmc启动linux）有空时候测试下。</p><p>更新：去Coreelec又看了下关于内核的讨论，GXBB S905只有3.14内核，无缘4.9，所以emmc启动没戏了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Android 6.0</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo源码半自动化推送</title>
    <link href="/2021/09/17/hexo-push2git/"/>
    <url>/2021/09/17/hexo-push2git/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># autohexo.sh</span><br><span class="hljs-comment"># 半自动推送更新</span><br><span class="hljs-comment"># -i：接受行内文本作为commit -m 参数</span><br><span class="hljs-comment"># -f：接受一个文本文件作为commit -m 参数</span><br><span class="hljs-comment"># -g：构建页面并推送，无参数</span><br>commitComment=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-built_in">echo</span><br><span class="hljs-keyword">function</span> commit2git &#123;<br>git add .<br>git commit -m <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>git push origin blogSource<br>&#125;<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">getopts</span> :i:f:g opt<br><span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;<span class="hljs-variable">$opt</span>&quot;</span> <span class="hljs-keyword">in</span><br>                f)commitComment=$(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$OPTARG</span>&quot;</span>)<br>                  commit2git <span class="hljs-string">&quot;<span class="hljs-variable">$commitComment</span>&quot;</span>;;<br>                i)commitComment=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$OPTARG</span>&quot;</span>)<br>                  commit2git <span class="hljs-string">&quot;<span class="hljs-variable">$commitComment</span>&quot;</span>;;<br>                g)hexo g -d;;<br>                *);;<br>        <span class="hljs-keyword">esac</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>很简单的脚本，通过终端输入或者提供一个文本文件传递<code>commit -m</code>的参数，能够略微简化提交博客源码的流程。</p><p>用例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./autohexo.sh -gi <span class="hljs-string">&quot;更新日志&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用imagemagick处理图片</title>
    <link href="/2021/09/17/imagemagick/"/>
    <url>/2021/09/17/imagemagick/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Use ImageMagick® to create, edit, compose, or convert digital images. It can read and write images in a variety of formats (over 200) including PNG, JPEG, GIF, WebP, HEIC, SVG, PDF, DPX, EXR and TIFF. ImageMagick can resize, flip, mirror, rotate, distort, shear and transform images, adjust image colors, apply various special effects, or draw text, lines, polygons, ellipses and Bézier curves.</p></blockquote><p>利用imagemagick可以对图片进行从简单到复杂的各种处理。</p><h1 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h1><p>场景：微信公众号封面不接受webp格式图片，需要进行转换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">convert 封面4.webp 封面4.jpg<br></code></pre></td></tr></table></figure><p>再也不需要下载安装臃肿迟缓捆绑广告试用版还添加水印的软件了。</p><h1 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h1><h2 id="一张图片一页："><a href="#一张图片一页：" class="headerlink" title="一张图片一页："></a>一张图片一页：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">convert 1.jpg 2.jpg 3.jpg total.tif<br></code></pre></td></tr></table></figure><p>得到一个3页的图片文件，类似PDF。当然，也可以一步到位，直接转换为PDF：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">convert 1.jpg 2.jpg 3.jpg total.pdf<br></code></pre></td></tr></table></figure><p>有可能会提示类似错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">convert-im6.q16: attempt to perform an operation not allowed by the security policy `PDF<span class="hljs-string">&#x27; @ error/constitute.c/IsCoderAuthorized/408.</span><br></code></pre></td></tr></table></figure><p>ImageMagick的默认安全策略禁止这种转换，可以通过修改ImageMagick安全策略文件取消限制：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/ImageMagick-*/policy.xml<br></code></pre></td></tr></table></figure><p>将<code> &lt;!-- &lt;policy domain=&quot;module&quot; rights=&quot;none&quot; pattern=&quot;&#123;PS,PDF,XPS&#125;&quot; /&gt; --&gt;</code>这一行取消注释并保存，即修改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;policy domain=<span class="hljs-string">&quot;module&quot;</span> rights=<span class="hljs-string">&quot;none&quot;</span> pattern=<span class="hljs-string">&quot;&#123;PS,PDF,XPS&#125;&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><p>这样输出图片为PDF就没问题了。</p><p>备注：我在Deepin上测试，得到的“PDF”文件打不开，用file查看是图片格式：</p><blockquote><p>output.pdf: JPEG image data, JFIF standard 1.01, resolution (DPI), density 72x72, segment length 16, Exif Standard: [TIFF image data, big-endian, direntries&#x3D;14, height&#x3D;3264, bps&#x3D;0, description&#x3D;smart, manufacturer&#x3D;HUAWEI, model&#x3D;CND-AN00, orientation&#x3D;upper-left, xresolution&#x3D;200, yresolution&#x3D;208, resolutionunit&#x3D;2, software&#x3D;CND-AN00 10.1.1.166(C00E140R3P1), datetime&#x3D;2021:08:14 08:02:45, width&#x3D;2448], baseline, precision 8, 2448x3264, components 3</p></blockquote><p>Deepin上convert版本：<code>Version: ImageMagick 6.9.10-23 Q16 x86_64 20190101 https://imagemagick.org Copyright: © 1999-2019 ImageMagick Studio LLC</code></p><p>在Manjaro ARM 21.08上测试没问题，得到了正常的PDF文件。Manjaro ARM 21.08上convert版本为<code>Version: ImageMagick 7.1.0-6 Q16-HDRI aarch64 2021-09-04 https://imagemagick.org Copyright: (C) 1999-2021 ImageMagick Studio LLC</code>。另外Manjaro上不需要修改policy文件，默认就正常运行。</p><h1 id="按a4纸张规格输出"><a href="#按a4纸张规格输出" class="headerlink" title="按a4纸张规格输出"></a>按a4纸张规格输出</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">convert screenshot-2021-09-14-222216.png -page a4 1.pdf<br></code></pre></td></tr></table></figure><p>其他功能还有很多，类似resize等等，具体可查阅man手册。</p>]]></content>
    
    
    
    <tags>
      
      <tag>图像处理</tag>
      
      <tag>linux</tag>
      
      <tag>imagemagick</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro ARM 搭建LaTeX中文写作环境</title>
    <link href="/2021/09/13/Manjaro-LaTeX/"/>
    <url>/2021/09/13/Manjaro-LaTeX/</url>
    
    <content type="html"><![CDATA[<p>最近瞎鼓捣东西形成了一些笔记想好好地汇编成册，当年写论文时用过的LaTeX还不错，基本语法也没忘，于是就选它了。troff据说历史更悠久，而且基本上Linux发行版都会预装，不过就不花功夫研究老古董了。</p><p>得益于Archlinux粗壮的大腿，使用Manjaro遇到的问题往往可以在<a href="https://wiki.archlinux.org/title/TeX_Live_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87">Archlinux Wiki</a>中找到答案。安装很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy texlive-most texlive-langchinese<br></code></pre></td></tr></table></figure><p><code>texlive-most</code>包含了<code>texlive-core</code>和其他一些可选模块，建议全选。<code>texlive-langchinese</code>包含了CTEX宏包。我选择<code>xeLatex + CTEX</code>的中文方案，所以这个包必装。</p><p>安装完毕后测试看看效果：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\documentclass</span>&#123;ctexbook&#125;<br><span class="hljs-keyword">\begin</span>&#123;document&#125;<br>中文测试<br><span class="hljs-keyword">\end</span>&#123;document&#125;<br></code></pre></td></tr></table></figure><p>输出符合预期。<code>texdoc tikz</code>还是一如既往地头大，而且现在又多了一个画花纹的pgfornament看起来很有趣。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>R3300-M</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro字体配置</title>
    <link href="/2021/09/10/Manjaro-Fonts/"/>
    <url>/2021/09/10/Manjaro-Fonts/</url>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://panqiincs.me/2019/06/05/after-installing-manjaro/">安装Manjaro之后的配置</a></p><p>平台还是R3300-M …… 准备用它当做阅读器专心读书，人不在家直接关闭显示器就行了，从外面还能SSH连回来做实验，电费可忽略不计。安装运行Calibre很简单，但是中文字体看起来很奇怪，汇总下网上搜来的解决办法。</p><h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><h2 id="安装官方仓库中的字体"><a href="#安装官方仓库中的字体" class="headerlink" title="安装官方仓库中的字体"></a>安装官方仓库中的字体</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S ttf-roboto noto-fonts ttf-dejavu<br><span class="hljs-built_in">sudo</span> pacman -S wqy-bitmapfont wqy-microhei wqy-microhei-lite wqy-zenhei<br><span class="hljs-built_in">sudo</span> pacman -S noto-fonts-cjk adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts<br></code></pre></td></tr></table></figure><p>上面的<code>ttf-roboto noto-fonts</code>如果系统已经安装了就不需要再装。</p><h1 id="创建字体配置文件"><a href="#创建字体配置文件" class="headerlink" title="创建字体配置文件"></a>创建字体配置文件</h1><p><code>/etc/fonts/fonts.conf</code>里面提示不要修改此文件，所以创建<code>~/.config/fontconfig/fonts.conf</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">fontconfig</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;fonts.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fontconfig</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">its:rules</span> <span class="hljs-attr">xmlns:its</span>=<span class="hljs-string">&quot;http://www.w3.org/2005/11/its&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">its:translateRule</span> <span class="hljs-attr">translate</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">selector</span>=<span class="hljs-string">&quot;/fontconfig/*[not(self::description)]&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">its:rules</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Manjaro Font Config<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Font directory list --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dir</span>&gt;</span>/usr/share/fonts<span class="hljs-tag">&lt;/<span class="hljs-name">dir</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dir</span>&gt;</span>/usr/local/share/fonts<span class="hljs-tag">&lt;/<span class="hljs-name">dir</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dir</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;xdg&quot;</span>&gt;</span>fonts<span class="hljs-tag">&lt;/<span class="hljs-name">dir</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dir</span>&gt;</span>~/.fonts<span class="hljs-tag">&lt;/<span class="hljs-name">dir</span>&gt;</span> <span class="hljs-comment">&lt;!-- this line will be removed in the future --&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 自动微调 微调 抗锯齿 内嵌点阵字体 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;font&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;autohint&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">bool</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">bool</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hinting&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">bool</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">bool</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;antialias&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">bool</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">bool</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;embeddedbitmap&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;assign&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">bool</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">bool</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 英文默认字体使用 Roboto 和 Noto Serif ,终端使用 DejaVu Sans Mono. --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">qual</span>=<span class="hljs-string">&quot;any&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>serif<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;prepend&quot;</span> <span class="hljs-attr">binding</span>=<span class="hljs-string">&quot;strong&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Noto Serif<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;pattern&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">qual</span>=<span class="hljs-string">&quot;any&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>sans-serif<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;prepend&quot;</span> <span class="hljs-attr">binding</span>=<span class="hljs-string">&quot;strong&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Roboto<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;pattern&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">qual</span>=<span class="hljs-string">&quot;any&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>monospace<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;prepend&quot;</span> <span class="hljs-attr">binding</span>=<span class="hljs-string">&quot;strong&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>DejaVu Sans Mono<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 中文默认字体使用思源宋体,不使用 Noto Sans CJK SC 是因为这个字体会在特定情况下显示片假字. --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lang&quot;</span> <span class="hljs-attr">compare</span>=<span class="hljs-string">&quot;contains&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>zh<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>serif<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;prepend&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Source Han Serif CN<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lang&quot;</span> <span class="hljs-attr">compare</span>=<span class="hljs-string">&quot;contains&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>zh<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>sans-serif<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;prepend&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Source Han Sans CN<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lang&quot;</span> <span class="hljs-attr">compare</span>=<span class="hljs-string">&quot;contains&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>zh<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>monospace<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;prepend&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Noto Sans Mono CJK SC<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 把Linux没有的中文字体映射到已有字体，这样当这些字体未安装时会有替代字体 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;pattern&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">qual</span>=<span class="hljs-string">&quot;any&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>SimHei<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;assign&quot;</span> <span class="hljs-attr">binding</span>=<span class="hljs-string">&quot;same&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Source Han Sans CN<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;pattern&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">qual</span>=<span class="hljs-string">&quot;any&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>SimSun<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;assign&quot;</span> <span class="hljs-attr">binding</span>=<span class="hljs-string">&quot;same&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Source Han Serif CN<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">match</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;pattern&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">test</span> <span class="hljs-attr">qual</span>=<span class="hljs-string">&quot;any&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>SimSun-18030<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">edit</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;family&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;assign&quot;</span> <span class="hljs-attr">binding</span>=<span class="hljs-string">&quot;same&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Source Han Serif CN<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">edit</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">match</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- Load local system customization file --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">ignore_missing</span>=<span class="hljs-string">&quot;yes&quot;</span>&gt;</span>conf.d<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- Font cache directory list --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">cachedir</span>&gt;</span>/var/cache/fontconfig<span class="hljs-tag">&lt;/<span class="hljs-name">cachedir</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">cachedir</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;xdg&quot;</span>&gt;</span>fontconfig<span class="hljs-tag">&lt;/<span class="hljs-name">cachedir</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- will be removed in the future --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">cachedir</span>&gt;</span>~/.fontconfig<span class="hljs-tag">&lt;/<span class="hljs-name">cachedir</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">config</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- Rescan in every 30s when FcFontSetList is called --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">rescan</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">int</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">int</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rescan</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">config</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">fontconfig</span>&gt;</span><br></code></pre></td></tr></table></figure><p>晚上试试看字体是否会正常一些。</p><p>更新：经测试，配置字体后使用Calibre-Viewer看书字体渲染效果满意。</p><h2 id="手动安装字体"><a href="#手动安装字体" class="headerlink" title="手动安装字体"></a>手动安装字体</h2><p>刷新字体命令：<code>fc-cache -fv</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash">Font directories:<br>        /home/youname/.local/share/fonts<br>        /usr/local/share/fonts<br>        /usr/share/fonts<br>        /home/youname/.fonts<br>        /usr/share/fonts/TTF<br>        /usr/share/fonts/adobe-source-code-pro<br>        /usr/share/fonts/adobe-source-han-sans<br>        /usr/share/fonts/adobe-source-han-serif<br>        /usr/share/fonts/cantarell<br>        /usr/share/fonts/droid<br>        /usr/share/fonts/encodings<br>        /usr/share/fonts/gsfonts<br>        /usr/share/fonts/liberation<br>        /usr/share/fonts/misc<br>        /usr/share/fonts/noto<br>        /usr/share/fonts/noto-cjk<br>        /usr/share/fonts/util<br>        /usr/share/fonts/wenquanyi<br>        /usr/share/fonts/wps-office<br>        /usr/share/fonts/encodings/large<br>        /usr/share/fonts/wenquanyi/wqy-microhei<br>        /usr/share/fonts/wenquanyi/wqy-microhei-lite<br>        /usr/share/fonts/wenquanyi/wqy-zenhei<br>/home/youname/.local/share/fonts: skipping, no such directory<br>/usr/local/share/fonts: skipping, no such directory<br>/usr/share/fonts: caching, new cache contents: 0 fonts, 15 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/TTF: caching, new cache contents: 148 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/adobe-source-code-pro: caching, new cache contents: 30 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/adobe-source-han-sans: caching, new cache contents: 7 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/adobe-source-han-serif: caching, new cache contents: 7 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/cantarell: caching, new cache contents: 11 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/droid: caching, new cache contents: 27 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/encodings: caching, new cache contents: 0 fonts, 1 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/encodings/large: caching, new cache contents: 0 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/gsfonts: caching, new cache contents: 35 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/liberation: caching, new cache contents: 12 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/misc: caching, new cache contents: 1 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/noto: caching, new cache contents: 615 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/noto-cjk: caching, new cache contents: 73 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/util: caching, new cache contents: 0 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/wenquanyi: caching, new cache contents: 5 fonts, 3 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/wenquanyi/wqy-microhei: caching, new cache contents: 2 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/wenquanyi/wqy-microhei-lite: caching, new cache contents: 2 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/wenquanyi/wqy-zenhei: caching, new cache contents: 3 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/wps-office: caching, new cache contents: 14 fonts, 0 <span class="hljs-built_in">dirs</span><br>/home/youname/.fonts: caching, new cache contents: 0 fonts, 0 <span class="hljs-built_in">dirs</span><br>/usr/share/fonts/TTF: skipping, looped directory detected<br>/usr/share/fonts/adobe-source-code-pro: skipping, looped directory detected<br>/usr/share/fonts/adobe-source-han-sans: skipping, looped directory detected<br>/usr/share/fonts/adobe-source-han-serif: skipping, looped directory detected<br>/usr/share/fonts/cantarell: skipping, looped directory detected<br>/usr/share/fonts/droid: skipping, looped directory detected<br>/usr/share/fonts/encodings: skipping, looped directory detected<br>/usr/share/fonts/gsfonts: skipping, looped directory detected<br>/usr/share/fonts/liberation: skipping, looped directory detected<br>/usr/share/fonts/misc: skipping, looped directory detected<br>/usr/share/fonts/noto: skipping, looped directory detected<br>/usr/share/fonts/noto-cjk: skipping, looped directory detected<br>/usr/share/fonts/util: skipping, looped directory detected<br>/usr/share/fonts/wenquanyi: skipping, looped directory detected<br>/usr/share/fonts/wps-office: skipping, looped directory detected<br>/usr/share/fonts/encodings/large: skipping, looped directory detected<br>/usr/share/fonts/wenquanyi/wqy-microhei: skipping, looped directory detected<br>/usr/share/fonts/wenquanyi/wqy-microhei-lite: skipping, looped directory detected<br>/usr/share/fonts/wenquanyi/wqy-zenhei: skipping, looped directory detected<br>/var/cache/fontconfig: not cleaning unwritable cache directory<br>/home/youname/.cache/fontconfig: cleaning cache directory<br>/home/youname/.fontconfig: not cleaning non-existent cache directory<br>fc-cache: succeeded<br></code></pre></td></tr></table></figure><p>查找字体位置一目了然。过去一般习惯把字体文件直接丢到<code>~/.fonts</code>中，但是<code>/etc/fonts/fonts.conf</code>中提到</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- the following element will be removed in the future --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dir</span>&gt;</span>~/.fonts<span class="hljs-tag">&lt;/<span class="hljs-name">dir</span>&gt;</span><br></code></pre></td></tr></table></figure><p>所以还是老实放到<code>/usr/share/fonts/</code>里面合适的目录中更合适。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>R3300-M</tag>
      
      <tag>Calibre</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M在Manjaro ARM 21.08系统下配置红外线遥控</title>
    <link href="/2021/09/07/r3300m-ir/"/>
    <url>/2021/09/07/r3300m-ir/</url>
    
    <content type="html"><![CDATA[<p>在前面已经成功驱动了WIFI，于是再来看一看红外线：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ dmesg | grep meson-ir<br><br>[    5.140483] rc rc0: meson-ir as /devices/platform/soc/c8100000.bus/c8100580.ir/rc/rc0<br>[    5.142659] rc rc0: lirc_dev: driver meson-ir registered at minor = 0, raw IR receiver, no transmitter<br>[    5.142827] input: meson-ir as /devices/platform/soc/c8100000.bus/c8100580.ir/rc/rc0/input4<br>[    5.147424] meson-ir c8100580.ir: receiver initialized<br></code></pre></td></tr></table></figure><p>看起来红外线模块已经被成功识别并驱动。</p><p>再来看一看遥控文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">ls</span> /lib/udev/rc_keymaps/<br><br>adstech_dvb_t_pci.toml<br>af9005.toml<br>alink_dtu_m.toml<br>allwinner_ba10_tv_box.toml<br>allwinner_i12_a20_tv_box.toml<br>anysee.toml<br>apac_viewcomp.toml<br>astrometa_t2hybrid.toml<br>asus_pc39.toml<br>asus_ps3_100.toml<br>ati_tv_wonder_hd_600.toml<br>ati_x10.toml<br>avermedia.toml<br>avermedia_a16d.toml<br>avermedia_cardbus.toml<br>avermedia_dvbt.toml<br>avermedia_m135a.toml<br>avermedia_m733a_rm_k6.toml<br>avermedia_rm_ks.toml<br>avertv_303.toml<br>az6027.toml<br>azurewave_ad_tu700.toml<br>beelink_gs1.toml<br>behold.toml<br>behold_columbus.toml<br>budget_ci_old.toml<br>cec.toml<br>cinergy.toml<br>cinergy_1400.toml<br>cinergyt2.toml<br>d680_dmb.toml<br>delock_61959.toml<br>dib0700_nec.toml<br>dib0700_rc5.toml<br>dibusb.toml<br>digitalnow_tinytwin.toml<br>digittrade.toml<br>digitv.toml<br>dish_network.toml<br>dm1105_nec.toml<br>dntv_live_dvb_t.toml<br>dntv_live_dvbt_pro.toml<br>dtt200u.toml<br>dvbsky.toml<br>dvico_mce.toml<br>dvico_portable.toml<br>em_terratec.toml<br>encore_enltv.toml<br>encore_enltv2.toml<br>encore_enltv_fm53.toml<br>evga_indtube.toml<br>eztv.toml<br>flydvb.toml<br>flyvideo.toml<br>fusionhdtv_mce.toml<br>gadmei_rm008z.toml<br>geekbox.toml<br>genius_tvgo_a11mce.toml<br>gotview7135.toml<br>haupp.toml<br>hauppauge.toml<br>hisi_poplar.toml<br>hisi_tv_demo.toml<br>imon_mce.toml<br>imon_pad.toml<br>imon_rsc.toml<br>iodata_bctv7e.toml<br>it913x_v1.toml<br>it913x_v2.toml<br>kaiomy.toml<br>khadas.toml<br>kii_pro.toml<br>kworld_315u.toml<br>kworld_pc150u.toml<br>kworld_plus_tv_analog.toml<br>leadtek_y04g0051.toml<br>lme2510.toml<br>manli.toml<br>mce_keyboard.toml<br>medion_x10.toml<br>medion_x10_digitainer.toml<br>medion_x10_or2x.toml<br>megasky.toml<br>msi_digivox_ii.toml<br>msi_digivox_iii.toml<br>msi_tvanywhere.toml<br>msi_tvanywhere_plus.toml<br>nebula.toml<br>nec_terratec_cinergy_xs.toml<br>norwood.toml<br>npgtech.toml<br>odroid.toml<br>opera1.toml<br>pctv_sedna.toml<br>pinnacle310e.toml<br>pinnacle_color.toml<br>pinnacle_grey.toml<br>pinnacle_pctv_hd.toml<br>pixelview.toml<br>pixelview_002t.toml<br>pixelview_mk12.toml<br>pixelview_new.toml<br>powercolor_real_angel.toml<br>proteus_2309.toml<br>purpletv.toml<br>pv951.toml<br>rc6_mce.toml<br>real_audio_220_32_keys.toml<br>reddo.toml<br>snapstream_firefly.toml<br>streamzap.toml<br>su3000.toml<br>tango.toml<br>tanix_tx3mini.toml<br>tanix_tx5max.toml<br>tbs_nec.toml<br>technisat_ts35.toml<br>technisat_usb2.toml<br>terratec_cinergy_c_pci.toml<br>terratec_cinergy_s2_hd.toml<br>terratec_cinergy_xs.toml<br>terratec_slim.toml<br>terratec_slim_2.toml<br>tevii_nec.toml<br>tivo.toml<br>total_media_in_hand.toml<br>total_media_in_hand_02.toml<br>trekstor.toml<br>tt_1500.toml<br>tvwalkertwin.toml<br>twinhan_dtv_cab_ci.toml<br>twinhan_vp1027_dvbs.toml<br>vega_s9x.toml<br>videomate_k100.toml<br>videomate_s350.toml<br>videomate_tv_pvr.toml<br>vp702x.toml<br>wetek_hub.toml<br>wetek_play2.toml<br>winfast.toml<br>winfast_usbii_deluxe.toml<br>wobo_i5.toml<br>x96max.toml<br>xbox_dvd.toml<br>zx_irdec.toml<br></code></pre></td></tr></table></figure><p>有很多，但显然没有我使用的遥控器。计划找出按键对应值，然后根据模板创建。寻找按键映射参照 <a href="https://discourse.coreelec.org/t/how-to-configure-ir-remote-control/31">https://discourse.coreelec.org/t/how-to-configure-ir-remote-control/31</a> ，我之前做过Coreelec的，不知道是否可以直接照抄。（此部分待补充）</p><p>创建遥控文件后，可以利用按键调用系统命令，比如执行某个脚本，或者重启等等。参考 <a href="https://forum.armbian.com/topic/11161-lirc-on-armbian-buster/">https://forum.armbian.com/topic/11161-lirc-on-armbian-buster/</a> ，作者使用triggerhappy实现功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Samsung TV Remote Control</span><br>KEY_RED     1   /usr/local/bin/script.sh red<br>KEY_GREEN   1   /usr/local/bin/script.sh green<br>KEY_YELLOW  1   /usr/local/bin/script.sh yellow<br>KEY_BLUE    1   /usr/local/bin/script.sh blue<br></code></pre></td></tr></table></figure><p>triggerhappy使用yay可以安装，有空测试下。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R3300-M</tag>
      
      <tag>Manjaro ARM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M 运行 Manjaro ARM Sway</title>
    <link href="/2021/09/03/manjaro-sway/"/>
    <url>/2021/09/03/manjaro-sway/</url>
    
    <content type="html"><![CDATA[<p>硬件平台还是R3300-M …… 想要Firefly的Station P2，不过迫于没钱，继续折腾小红盒 XD</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>WIFI设置好后，又动了折腾图形界面的心思。之前测试过XFCE，分辨率不正常，桌面拖动窗口有明显卡顿，打开firefox直接卡死。一则显卡驱动有问题，二则XFCE对于R3300-M还是太重了。于是换用<code>wayland + sway</code>方案，彻底放弃X11。显卡驱动选择Lima，已经集成在了mesa软件包中。如果选择尝鲜，也可以安装<code>mesa-git</code>。Lima是在反向官方驱动的基础上，由社区开发维护的开源驱动，对<code>Mali-400</code>、<code>Mali-450</code>提供支持。详情可以在 <a href="https://docs.mesa3d.org/drivers/lima.html">https://docs.mesa3d.org/drivers/lima.html</a> 查看。感谢Luc Verhaegen和Qiang Yu的开创性工作。</p><h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><p>参见 <a href="https://manjaro.org/download/#khadas-vim-2-sway">https://manjaro.org/download/#khadas-vim-2-sway</a> ，下载地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/manjaro-arm/vim2-images/releases/download/21.08/Manjaro-ARM-sway-vim2-21.08.img.xz<br>https://github.com/manjaro-arm/vim2-images/releases/download/21.08/Manjaro-ARM-sway-vim2-21.08.img.xz.torrent<br></code></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>烧录镜像、修改u-boot.ext、修改extlinux等与之前无异。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>第一次启动会进入配置引导程序，配置结束后重启，进入sway图形界面。在开始探索之前，先修复系统的小小bug：</p><h2 id="修复greetd服务"><a href="#修复greetd服务" class="headerlink" title="修复greetd服务"></a>修复greetd服务</h2><p>打开<code>/etc/greetd/config.toml</code>，看起来大概这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[terminal]<br><span class="hljs-comment"># The VT to run the greeter on. Can be &quot;next&quot;, &quot;current&quot; or a number</span><br><span class="hljs-comment"># designating the VT.</span><br>vt = 1<br><br><span class="hljs-comment"># The default session, also known as the greeter.</span><br>[default_session]<br><span class="hljs-comment"># `agreety` is the bundled agetty/login-lookalike. You can replace `$SHELL`</span><br><span class="hljs-comment"># with whatever you want started, such as `sway`.</span><br><span class="hljs-built_in">command</span> = <span class="hljs-string">&quot;sway --config /etc/greetd/sway&quot;</span><br><br><span class="hljs-comment"># The user to run the command as. The privileges this user must have depends</span><br><span class="hljs-comment"># on the greeter. A graphical greeter may for example require the user to be</span><br><span class="hljs-comment"># in the `video` group.</span><br>user = <span class="hljs-string">&quot;greeter&quot;</span><br>[initial_session]<br><span class="hljs-built_in">command</span> = <span class="hljs-string">&quot;sway --config /etc/greetd/oem-setup&quot;</span><br>user = <span class="hljs-string">&quot;oem&quot;</span><br></code></pre></td></tr></table></figure><p><del>你需要将最后一行的<code>oem</code>修改为自己实际的用户名。</del> Manjaro ARM团队提到将[initial_session]部分完整删除（即删除上面配置文件最后三行），此问题预计很快会得到修复。</p><p>这一步本应由配置程序自动完成，如果忘记修改，下次启动将无法进入图形界面。这种情况下，按下<code>Ctrl + Alt + F2</code>进入<code>tty2</code>，手动修改过来就可以了。</p><h2 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h2><p>直接摘抄之前的文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">user $ timedatectl set-ntp <span class="hljs-literal">true</span><br>user $ <span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now systemd-timesyncd<br></code></pre></td></tr></table></figure><p>时间不准会造成SSL验证失败等一系列问题。</p><h2 id="换国内源"><a href="#换国内源" class="headerlink" title="换国内源"></a>换国内源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman-mirrors -i -c China -m rank<br><span class="hljs-built_in">sudo</span> pacman-mirrors -g<br><span class="hljs-built_in">sudo</span> pacman -Syyu<br></code></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="文档获取"><a href="#文档获取" class="headerlink" title="文档获取"></a>文档获取</h2><p>sway作为窗口管理器（window manager）提供了轻量的图形功能，大量依赖配置文件和快捷键操作。遵循<code>linux</code>传统，<code>/etc/sway/config</code>和<code>~/.config/sway/config</code>各存在一份，前者全局，后者本地优先。另外桌面右上角的问号是入门操作文档，没接触过<code>i3</code>或<code>sway</code>的用户必读。<code>sway</code>虽然轻量，但是仍然提供了丰富好用的功能，类似全屏、窗口、区域截图或录制功能均有对应快捷键，不逊色于macOS。</p><h2 id="查看glxinfo输出"><a href="#查看glxinfo输出" class="headerlink" title="查看glxinfo输出"></a>查看glxinfo输出</h2><p>glxinfo由mesa-demos提供：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S mesa-demos<br></code></pre></td></tr></table></figure><p>然后执行<code>glxinfo -B</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">name of display: :0<br>display: :0  screen: 0<br>direct rendering: Yes<br>Extended renderer info (GLX_MESA_query_renderer):<br>    Vendor: lima (0x13b5)<br>    Device: Mali450 (0xffffffff)<br>    Version: 21.1.6<br>    Accelerated: <span class="hljs-built_in">yes</span><br>    Video memory: 0MB<br>    Unified memory: <span class="hljs-built_in">yes</span><br>    Preferred profile: compat (0x2)<br>    Max core profile version: 0.0<br>    Max compat profile version: 2.1<br>    Max GLES1 profile version: 1.1<br>    Max GLES[23] profile version: 2.0<br>OpenGL vendor string: lima<br>OpenGL renderer string: Mali450<br>OpenGL version string: 2.1 Mesa 21.1.6<br>OpenGL shading language version string: 1.20<br><br>OpenGL ES profile version string: OpenGL ES 2.0 Mesa 21.1.6<br>OpenGL ES profile shading language version string: OpenGL ES GLSL ES 1.0.16<br></code></pre></td></tr></table></figure><p>显卡驱动正常。另外执行<code>sensors</code>可以看系统温度，负载一高很容易达到50-60°C，有必要考虑强化散热。</p><h2 id="HiDPI设置"><a href="#HiDPI设置" class="headerlink" title="HiDPI设置"></a>HiDPI设置</h2><p>这部分可以参阅Archlinux：<a href="https://wiki.archlinux.org/title/Sway">https://wiki.archlinux.org/title/Sway</a></p><p>我使用的某品牌2K分辨率，默认分辨率看起来很正常，实际也是如此：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ swaymsg -t get_outputs<br>Output HDMI-A-1 <span class="hljs-string">&#x27;Unknown Q27D530VHP 0x00000000&#x27;</span> (focused)<br>  Current mode: 2560x1440 @ 59.951 Hz<br>  Position: 0,0<br>  Scale <span class="hljs-built_in">factor</span>: 1.000000<br>  Scale filter: nearest<br>  Subpixel hinting: unknown<br>  Transform: normal<br>  Workspace: 1<br>  Max render time: off<br>  Adaptive <span class="hljs-built_in">sync</span>: disabled<br>  Available modes:<br>    640x480 @ 72.809 Hz<br>    640x480 @ 75.000 Hz<br>    720x480 @ 59.940 Hz<br>    800x600 @ 60.317 Hz<br>    800x600 @ 72.188 Hz<br>    800x600 @ 75.000 Hz<br>    1024x768 @ 60.004 Hz<br>    1024x768 @ 70.069 Hz<br>    1024x768 @ 75.029 Hz<br>    1280x720 @ 59.940 Hz<br>    1280x720 @ 60.000 Hz<br>    1280x800 @ 59.910 Hz<br>    1366x768 @ 59.964 Hz<br>    1280x1024 @ 60.020 Hz<br>    1280x1024 @ 75.025 Hz<br>    1600x900 @ 60.000 Hz<br>    1680x1050 @ 59.883 Hz<br>    1920x1080 @ 59.940 Hz<br>    1920x1080 @ 60.000 Hz<br>    1920x1080 @ 60.000 Hz<br>    1920x1200 @ 59.950 Hz<br>    2560x1440 @ 59.951 Hz<br></code></pre></td></tr></table></figure><p>执行<code>glxgears</code>可以调出一个齿轮画面测试FPS,R3300-M稳定在34～35之间。电脑上这个值一般都是三位数，不过对于盒子而言已经很不错了。</p><p>2K分辨率下文字有点小，缩放到1.5：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">swaymsg output HDMI-A-1 scale 1.5<br></code></pre></td></tr></table></figure><p>这样看起来好了很多。</p><h2 id="输入法安装"><a href="#输入法安装" class="headerlink" title="输入法安装"></a>输入法安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S fcitx5-im <span class="hljs-comment">#安装所有</span><br><span class="hljs-built_in">sudo</span> pacman -S fcitx5-chinese-addons<br></code></pre></td></tr></table></figure><p>然后打开<code>/etc/environment</code>添加参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">GTK_IM_MODULE=fcitx<br>QT_IM_MODULE=fcitx<br>XMODIFIERS=@im=fcitx<br></code></pre></td></tr></table></figure><p>最后在<code>Fcitx 5 Configuration</code>中，删除默认的Default Group,新建一个Chinese组，<code>Keyboard-Chinese</code>放上面，<code>Pinyin</code>放下面就万事大吉。默认输入法英文，使用<code>Ctrl Space</code>或<code>Ctrl Shift</code>或<code>Left Shift</code>在中英文之间来回切换。除了候选框小一点没别的问题。</p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p>自带的firefox刷个论坛还是很舒服的，测试bilibili弹幕比较卡，而且会丢帧，看视频还是重启到安卓系统吧。libreoffice，gedit等用着很流畅。目前小红盒用来写hexo博客或者看PDF很安逸。</p><p>另外电源管理有点小问题，关机会直接重启。而且有时休眠后显示器点不亮，需要重新拔插HDMI。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>R3300-M</tag>
      
      <tag>sway</tag>
      
      <tag>arm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo跨平台写作</title>
    <link href="/2021/09/02/crossplatform/"/>
    <url>/2021/09/02/crossplatform/</url>
    
    <content type="html"><![CDATA[<p>换新电脑后利用git直接拉取的代码不是完整的hexo环境，缺失了<code>node_modules</code>（参见<code>.gitignore</code>）和主题（如果使用git clone 安装了第三方主题）。</p><h1 id="恢复node-modules"><a href="#恢复node-modules" class="headerlink" title="恢复node_modules"></a>恢复node_modules</h1><p>随便新建一个文件夹，进入后执行<code>hexo init</code>，完成后把<code>node_modules</code>移动到刚才的hexo目录中。</p><h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>以<strong>next</strong>为例，在hexo目录下执行<code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code>。如果之前在hexo根目录下使用了<code> _config.next.yml</code>进行配置，那么就不需要重新配置主题，推荐这种配置方式。</p><h1 id="解决-TypeError-line-matchAll-is-not-a-function-问题"><a href="#解决-TypeError-line-matchAll-is-not-a-function-问题" class="headerlink" title="解决 TypeError: line.matchAll is not a function 问题"></a>解决 <code>TypeError: line.matchAll is not a function</code> 问题</h1><p>在<code>_config.yml</code>中，将<strong>hightlight</strong>一段中<strong>enable</strong>字段由true修改为false即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2021/08/26/test/"/>
    <url>/2021/08/26/test/</url>
    
    <content type="html"><![CDATA[<p>测试测试</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M Manjaro ARM镜像制作</title>
    <link href="/2021/08/23/Manjaro-compile-plan/"/>
    <url>/2021/08/23/Manjaro-compile-plan/</url>
    
    <content type="html"><![CDATA[<p>本文主要参考自<a href="https://forum.manjaro.org/t/wiki-how-to-contribute-to-manjaro-arm/35461">[Wiki] How to contribute to Manjaro ARM</a></p><h1 id="编译平台"><a href="#编译平台" class="headerlink" title="编译平台"></a>编译平台</h1><p>运行Manjaro的x86_64或aarch64设备，需要安装Manjaro-arm-tools。鉴于R3300-M已经运行了Manjaro ARM 21.08，所以以下用盒子制作盒子镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S manjaro-arm-tools<br></code></pre></td></tr></table></figure><h1 id="获取配置文件"><a href="#获取配置文件" class="headerlink" title="获取配置文件"></a>获取配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> getarmprofiles -f<br></code></pre></td></tr></table></figure><h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><p>manjaro-arm-tool会从服务器下载现成的rootfs压缩包（大概160MB），然后以此为基础根据配置文件进行额外的包安装及配置，最终生成压缩镜像。笔者以vim2为模板进行修改：</p><ol><li><p>进入配置文件目录：<code>/usr/share/manjaro-arm-tools/profiles/arm-profiles/devices</code></p></li><li><p>复制vim2配置文件：<code>cp vim2 vim2m</code></p></li><li><p>修改vim2m：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## Maintained by Spikerguy ##</span><br><br><span class="hljs-comment"># Kernel and bootloader stuff</span><br>linux-aml<br>boot-vim2<br>plymouth<br>plymouth-theme-manjaro<br><br><span class="hljs-comment"># Video driver</span><br><br><span class="hljs-comment"># Other device specific packages</span><br>crda<br>btrfs-progs<br><span class="hljs-comment">#bluetooth-vim3</span><br><span class="hljs-comment">#khadas-utils</span><br>fbset<br><span class="hljs-comment">#kvim1-firmware</span><br><span class="hljs-comment">#kvim2-firmware</span><br><span class="hljs-comment">#ap6398s-firmware</span><br>vim2-post-install<br></code></pre></td></tr></table></figure><p>最主要的修改是把内核从linux换成了linux-aml，之前实测过5.13版本主线内核无法启动R3300-M，linux-aml正常。其他几个固件估计R3300-M也用不上，故注释掉。</p><ol start="4"><li>生成镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> buildarmimg -d vim2m -e minimal -v 21.08 -n<br></code></pre></td></tr></table></figure><p>基本参数解释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">Usage: buildarmimg [options]<br>    -d &lt;device&gt;        Device the image is <span class="hljs-keyword">for</span>. [Default = rpi4. Options = oc2, on2, on2-plus, pbpro, pine64, pine64-lts, pinebook, pinephone, pinetab, rock64, rockpi4, rockpro64, rpi3, rpi4, vim1, vim2, vim3]<br>    -e &lt;edition&gt;       Edition of the image. [Default = minimal. Options = cubocore, gnome, i3, kde-plasma, lxqt, mate, minimal, plasma-mobile, server, wayfire, xfce]<br>    -v &lt;version&gt;       Define the version the resulting image should be named. [Default is current YY.MM]<br>    -i &lt;package&gt;       Install <span class="hljs-built_in">local</span> package into image rootfs.<br>    -b &lt;branch&gt;        Set the branch used <span class="hljs-keyword">in</span> the image. [Default = stable. Options = stable, testing or unstable]<br>    -n                 Force download of new rootfs.<br>    -x                 Don<span class="hljs-string">&#x27;t compress the image.</span><br><span class="hljs-string">    -h                 This help</span><br></code></pre></td></tr></table></figure><p>本例用刚才制作的vim2m配置文件生成了minimal镜像。</p><p>生成镜像不会耗时很多，因为涉及的主要是打包和镜像构建，不需要从源码开始编译。我这里测试是16.58分钟，建议优化网络否则下载<strong>Manjaro-ARM-aarch64-latest.tar.gz</strong>(约160M)这一步会耗时很久。</p><ol start="5"><li>复制镜像到电脑</li></ol><p>进入镜像目录：<code>cd /var/cache/manjaro-arm-tools/img</code></p><p>复制镜像到本地家目录：<code>scp Manjaro-ARM-minimal-vim2m-2108img.xz tccmu@192.168.1.221:/home/tccmu</code></p><p>tccmu是电脑上当前用户名，替换成自己的即可。192.168.1.221是自己电脑的IP（不是盒子），同样要替换。</p><ol start="6"><li>写入镜像到TF卡：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">xz -dc Manjaro-ARM-minimal-vim2m-2108.img.xz | <span class="hljs-built_in">dd</span> of=/dev/sdX bs=1M status=progress conv=fsync<br></code></pre></td></tr></table></figure>写入设备名自己替换。</li></ol><p>之后的配置没有任何难度了，修改<strong>extlinux.conf</strong>使用合适dtb,修改u-boot-s905为u-boot.ext就完事大吉。</p><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>目前镜像已生成完毕，但未经实机测试。</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>测试生成的镜像无法启动，连u-boot都进不去，直接进入盒子安卓系统的recovery。怀疑是rootfs包下载错误问题。</p><p>另外最新发布的21.08经测试可以正常启动运行，其搭载的主线内核 <strong>5.13.12-1-MANJARO-ARM #1 SMP Wed Aug 18 07:36:58 UTC 2021 aarch64 GNU&#x2F;Linux</strong>一切正常，所以替换aml内核貌似就没必要了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>ARM</tag>
      
      <tag>R3300-M</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用openconnect命令行客户端</title>
    <link href="/2021/08/20/openconnect-client-cli/"/>
    <url>/2021/08/20/openconnect-client-cli/</url>
    
    <content type="html"><![CDATA[<p>部分linux发行版网络配置GUI强制openconnect使用密钥，用户名-密码登录可以通过命令行实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> openconnect [域名或IP地址]:[端口号]<br></code></pre></td></tr></table></figure><p>然后根据提示操作就可以了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>openconnect</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro安装配置docker</title>
    <link href="/2021/08/20/Manjaro-docker/"/>
    <url>/2021/08/20/Manjaro-docker/</url>
    
    <content type="html"><![CDATA[<p>主要来源：<a href="https://blog.huangz.me/2020/docker-on-linux.html">在 Manjaro Linux 系统使用 Docker</a></p><h1 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h1><p>硬件平台还是百视通R3300-M …… 安装Manjaro Arm 21.04后已升级到21.08，内核版本 <strong>5.13.0-1-MANJARO-ARM #1 SMP PREEMPT Wed Jun 30 23:07:51 +03 2021 aarch64 GNU&#x2F;Linux</strong></p><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Syu<br><span class="hljs-built_in">sudo</span> pacman -S docker<br></code></pre></td></tr></table></figure><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl start docker.service<br></code></pre></td></tr></table></figure><h1 id="添加到系统启动项"><a href="#添加到系统启动项" class="headerlink" title="添加到系统启动项"></a>添加到系统启动项</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> docker.service<br></code></pre></td></tr></table></figure><h1 id="添加当前用户到Docker组"><a href="#添加当前用户到Docker组" class="headerlink" title="添加当前用户到Docker组"></a>添加当前用户到Docker组</h1><p>这样当前用户就有足够权限操作docker而不必sudo权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> usermod -aG docker <span class="hljs-variable">$USER</span><br></code></pre></td></tr></table></figure><h1 id="换国内源"><a href="#换国内源" class="headerlink" title="换国内源"></a>换国内源</h1><p>打开或创建 &#x2F;etc&#x2F;docker&#x2F;daemon.json 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>    <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>        <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p>registry.docker-cn.com 是 Docker 的官方中国镜像， 除此之外还有其他一些第三方镜像可选：</p><table><thead><tr><th align="center">镜像</th><th align="center">地址</th></tr></thead><tbody><tr><td align="center">Azure中国</td><td align="center"><a href="https://dockerhub.azk8s.cn/">https://dockerhub.azk8s.cn</a></td></tr><tr><td align="center">中科大</td><td align="center"><a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a></td></tr><tr><td align="center">七牛云</td><td align="center"><a href="https://reg-mirror.qiniu.com/">https://reg-mirror.qiniu.com</a></td></tr><tr><td align="center">网易云</td><td align="center"><a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com</a></td></tr><tr><td align="center">腾讯云</td><td align="center"><a href="https://mirror.ccs.tencentyun.com/">https://mirror.ccs.tencentyun.com</a></td></tr></tbody></table><p>保存文件之后重启一下 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl restart docker<br></code></pre></td></tr></table></figure><h1 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker search redis<br>docker pull redis<br>docker pull redis:rc<br>docker images<br>docker run --name myredis -d redis<br>docker ps<br>docker stop myredis<br>docker <span class="hljs-built_in">rm</span> myredis<br>docker info<br></code></pre></td></tr></table></figure><h1 id="安装Portainer-CE"><a href="#安装Portainer-CE" class="headerlink" title="安装Portainer CE"></a>安装Portainer CE</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker volume create portainer_data<br>docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce<br></code></pre></td></tr></table></figure><h1 id="下步计划"><a href="#下步计划" class="headerlink" title="下步计划"></a>下步计划</h1><p>之前在docker里运行过dokuwiki,tiddlywiki,minecraft server等等。跑minecraft server性能不太行，破坏方块有明显卡顿。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>Arm</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo使用git管理</title>
    <link href="/2021/08/20/hexo-git/"/>
    <url>/2021/08/20/hexo-git/</url>
    
    <content type="html"><![CDATA[<h1 id="生成密钥及配置（略）"><a href="#生成密钥及配置（略）" class="headerlink" title="生成密钥及配置（略）"></a>生成密钥及配置（略）</h1><p>网上教程有很多</p><h1 id="生成站点并推送到github"><a href="#生成站点并推送到github" class="headerlink" title="生成站点并推送到github"></a>生成站点并推送到github</h1><pre><code class="hljs">hexo g -d</code></pre><h1 id="推送站点源码到github"><a href="#推送站点源码到github" class="headerlink" title="推送站点源码到github"></a>推送站点源码到github</h1><figure class="highlight plaintext"><figcaption><span>.gitignore</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs git">.DS_Store<br>Thumbs.db<br>db.json<br>*.log<br>node_modules/<br>public/<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&#x27;hexo 源文件推送&#x27;</span><br>git push origin hexoSource<br></code></pre></td></tr></table></figure><p>远程分支名用自己的</p><h1 id="拉取源码到本地"><a href="#拉取源码到本地" class="headerlink" title="拉取源码到本地"></a>拉取源码到本地</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> -b blogSource https://github.com/12321/12321.github.io.git<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Manjaro配置管理</title>
    <link href="/2021/08/20/Manjaro-setup/"/>
    <url>/2021/08/20/Manjaro-setup/</url>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://www.jianshu.com/p/2d096cd9ad61">manjaro 切换国内源及软件安装</a></p><h1 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h1><p>时间不准会造成SSL验证失败等一系列问题。同步方式如下：(<a href="https://wiki.manjaro.org/index.php/System_Maintenance#Time_and_Date">https://wiki.manjaro.org/index.php/System_Maintenance#Time_and_Date</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">user $ timedatectl set-ntp <span class="hljs-literal">true</span><br>user $ <span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> --now systemd-timesyncd<br></code></pre></td></tr></table></figure><p>当然也可以用date手动设置。</p><h1 id="换国内源"><a href="#换国内源" class="headerlink" title="换国内源"></a>换国内源</h1><pre><code class="hljs">sudo pacman-mirrors -i -c China -m ranksudo pacman-mirrors -gsudo pacman -Syyu</code></pre><h1 id="安装ARU包管理工具"><a href="#安装ARU包管理工具" class="headerlink" title="安装ARU包管理工具"></a>安装ARU包管理工具</h1><pre><code class="hljs">sudo pacman -S yay</code></pre><p>原本想通过ARU安装RTL8189ETV启动，但是包依赖linux mainline kernel，貌似不行。手动编译也没成功。</p><h1 id="pacman-conf选项自定义"><a href="#pacman-conf选项自定义" class="headerlink" title="pacman.conf选项自定义"></a>pacman.conf选项自定义</h1><p>添加了Color和ILoveCandy选项，第一个使pacman产生彩色输出，第二个把pacman下载进度条变成吃豆子，虽然没什么用还是设置了。</p><h1 id="pacman常用命令"><a href="#pacman常用命令" class="headerlink" title="pacman常用命令"></a>pacman常用命令</h1><p>参考：<a href="https://wiki.manjaro.org/index.php/Pacman_Overview">Pacman Overview</a></p><ol><li>安装更新</li></ol><p>To update the package database and update all packages on the system</p><pre><code class="hljs">user $ sudo pacman -Syu</code></pre><p>To force a full refresh of the package database and update all packages on the system. You must do this when switching branches or switching mirrors.</p><pre><code class="hljs">user $ sudo pacman -Syyu</code></pre><p>To force a full refresh of the package database, update all packages on the system and allow packages to be downgraded. Downgrading should be only be needed when switching to an older branch. For example, switching from Testing to Stable.</p><pre><code class="hljs">user $ sudo pacman -Syyuu</code></pre><ol start="2"><li>搜索软件包</li></ol><p>To search the Manjaro repositories for available packages you can use the command pacman -Ss keyword. It will search both the package name and the description for the keyword. For example, to search for packages containing the keyword smplayer you could use:</p><pre><code class="hljs">user $ pacman -Ss smplayer</code></pre><p>You can search your installed packages in the same manner using -Qs instead of -Ss. To search your installed packages for smplayer:</p><pre><code class="hljs">user $ pacman -Qs smplayer</code></pre><p>Once you have found a package you can use pacman -Qi to get more information about an installed packages or pacman -Si for packages in the repos. Following the example above you could use</p><pre><code class="hljs">user $ pacman -Si smplayer</code></pre><p>Finally, for a list of all installed packages on your system, enter the following command:</p><p>user $ pacman -Ql</p><ol start="3"><li><p>安装软件包<br>To install a software package, the basic syntax is <code>pacman -S packagename</code>. However, installing a package without updating the system will lead to a partial upgrade situation so all the examples here will use pacman -Syu packagename which will install the package and ensure the system is up to date. For example, to install smplayer the command is:</p><p> user $ sudo pacman -Syu smplayer</p></li></ol><p>You will then be presented a list of software to install. You may notice this list has more packages than you requested. This is because many packages also have dependencies which are packages that must be installed in order for the software you selected to function properly.</p><p>Pacman can also directly install packages from the local system or a location on the internet. The format of that command is pacman -U packagelocation. For example, to install a copy of your package cache you could do something like:</p><pre><code class="hljs">user $ sudo pacman -U /var/cache/pacman/pkg/smplayer-19.5.0-1-x86_64.pkg.tar.xz</code></pre><p>Alternatively, you could get it directly from one of Manjaro’s mirrors:</p><pre><code class="hljs">user $ sudo pacman -U https://mirror.alpix.eu/manjaro/stable/community/x86_64/smplayer-19.5.0-1-x86_64.pkg.tar.xz</code></pre><ol start="4"><li><p>删除软件包<br>To remove a software package, the basic syntax is sudo pacman -R packagename. We could remove the smplayer package we installed above with:</p><p> user $ sudo pacman -R smplayer</p></li></ol><p>This will remove the package, but will leave all the dependencies behind. If you also want to remove the unneeded dependencies you could use pacman -Rsu packagename as seen in this example:</p><pre><code class="hljs">user $ sudo pacman -Rsu smplayer</code></pre><p>Sometimes when you try to remove a package you will not be able to because there are other packages which depend on it. You can use pacman -Rc packagename to remove a package and everything that depends on it. Be careful to heed the above warning when using this option.</p><pre><code class="hljs">user $ sudo pacman -Rc smplayer</code></pre><p>The most nuclear option is pacman -Rcs packagename. This will remove everything that depends on packagename and continue to do so on its dependencies. This should really only be used in exceptional circumstances such as when removing an entire desktop environment and trying not to leave anything behind.</p><p>Pacman usually also creates backup configuration files when deleting packages. To remove those, you can add n to any of the examples above. For example:</p><pre><code class="hljs">user $ sudo pacman -Rn smplayeruser $ sudo pacman -Rsun smplayeruser $ sudo pacman -Rcn smplayer</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M安装运行Manjaro ARM</title>
    <link href="/2021/08/19/Manjaro-arm/"/>
    <url>/2021/08/19/Manjaro-arm/</url>
    
    <content type="html"><![CDATA[<h1 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h1><p>这个盒子硬件没啥好说的了，前面介绍过。之前用它运行Armbian 20.10 Focal 没问题，但是balbes150弃坑后无人接手，前景不明，于是迁移到了Manjaro ARM。目前来看社区支持比较完善，更新及时，测试内核5.13（linux-aml）运行成功。</p><h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><p>选择了Manjaro ARM 21.04。为什么没有选择更新的版本，比如21.06，还得从内核提起。21.04搭载主线5.11内核，测试启动R3300-M没问题，但是后续版本搭载的主线内核（测试了5.13）无法启动，提示<code>phy phy-c000000.phy.0:phy poweron failed --&gt; -22</code>然后卡死，所以需要想办法卸载主线内核然后安装Amlogic分支。</p><pre><code class="hljs">https://github.com/manjaro-arm/vim2-images/releases/download/21.04/Manjaro-ARM-minimal-vim2-21.04.img.xzhttps://github.com/manjaro-arm/vim2-images/releases/download/21.04/Manjaro-ARM-mate-vim2-21.04.img.xzhttps://github.com/manjaro-arm/vim2-images/releases/download/21.04/Manjaro-ARM-kde-plasma-vim2-21.04.img.xz/https://github.com/manjaro-arm/vim2-images/releases/download/21.04/Manjaro-ARM-xfce-vim2-21.04.img.xz/</code></pre><p>官方提供的4个镜像中，minimal不含图形界面，经本人测试运行成功，其余带图形界面的镜像未经测试。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>和Armbian 20.10 Focal基本一致，修改extlinux.conf选择合适dtb（R3300-M使用meson-gxbb-p201.dtb），修改u-boot-s905为u-boot.ext（镜像里默认的u-boot.ext适用s905x和s912，不适用于R3300-M），然后启动盒子，完成设置，SD卡自动扩容，一切结束后自动重启完成安装进入系统。</p><h1 id="系统更新（更换内核）"><a href="#系统更新（更换内核）" class="headerlink" title="系统更新（更换内核）"></a>系统更新（更换内核）</h1><h2 id="冻结内核"><a href="#冻结内核" class="headerlink" title="冻结内核"></a>冻结内核</h2><p>首先修改系统文件避免更新内核（现在更新系统就挂了）。所有Manjaro发行版均预装nano，所以：</p><pre><code class="hljs">sudo nano /etc/pacman.conf</code></pre><p>找到<code>IgnorePkg</code>一行，取消开头注释，修改为<code>IgnorePkg = linux</code>，保存退出，执行<code>sudo pacman -Syu</code>更新系统。系统更新后，建议重启系统。</p><h2 id="切换内核为linux-aml"><a href="#切换内核为linux-aml" class="headerlink" title="切换内核为linux-aml"></a>切换内核为linux-aml</h2><p>执行</p><pre><code class="hljs">sudo pacman -S linux-aml</code></pre><p>这步会删除主线内核，安装更合适的Amlogic分支内核。结束后重启系统，用uname -a查看，系统内核已更新为5.13。</p><h2 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h2><p>再次编辑<code>/etc/paman.conf</code>，修改<code>IgnorePkg = linux</code>为<code>IgnorePkg = linux-aml</code>，毕竟在电视盒子这种非正式支持的设备上更新内核还是要谨慎一些，没必要别乱动内核。确实需要更新的情况下，提前备份好Image和initramfs-linux.img，方便回滚。</p><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><ol><li>经测试，系统写入emmc无法启动。</li><li>如果使用U盘启动，需要在<code>extlinux.conf</code>中指定<code>usb-storage.quirks</code>参数。例如：</li></ol><blockquote><p>APPEND root&#x3D;PARTUUID&#x3D;5418e4d8-02 rootflags&#x3D;data&#x3D;writeback rw console&#x3D;ttyAML0,115200n8 console&#x3D;tty0 no_console_suspend consoleblank&#x3D;0 fsck.fix&#x3D;yes fsck.repair&#x3D;yes net.ifnames&#x3D;0 quiet splash plymouth.ignore-serial-consoles usb-storage.quirks&#x3D;152d:1561:u</p></blockquote><p>152d:1561为U盘vendor和product的ID号码。在linux下可以使用<code>lsusb</code>查看，Windows下也有类似小工具。<br>3. 无法使用root身份SSH登录，会提示密码错误。建议用普通用户连接后再切换身份。<br>4. 有线网卡Mac地址不固定，每次重启都会变化。<br>5. WIFI暂不可用，待进一步测试。<br>6. 类似21.06等感觉可以通过替换Image和initramfs-linux.img实现从内核从主线到Amlogic分支切换，有兴趣的可以测试。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Manjaro</tag>
      
      <tag>GXBB</tag>
      
      <tag>S905</tag>
      
      <tag>S905M-B</tag>
      
      <tag>BestTV</tag>
      
      <tag>Arm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bash - pdftk删除页码脚本</title>
    <link href="/2021/05/19/bash5/"/>
    <url>/2021/05/19/bash5/</url>
    
    <content type="html"><![CDATA[<h1 id="pdftk删除页码脚本"><a href="#pdftk删除页码脚本" class="headerlink" title="pdftk删除页码脚本"></a>pdftk删除页码脚本</h1><p>最近把《Linux命令行与shell脚本编程大全》翻了一遍，想演练一下，于是写出了下面这个脚本，用于调用pdftk删除给定页码生成新文档。编写调试过程中，对bash函数传参、位置参数调用等概念有了更深入的理解，特别是shift，用于处理数量未知的位置参数格外好用。</p><figure class="highlight bash"><figcaption><span>pdftool.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 对pdftk的简单封装，用于删除指定的页码，以空格分隔，支持形如&quot;5-7&quot;的页码范围。页码输入不必按顺序，类似&quot;12 6-8 1 3&quot;输入是可以正常工作的。</span><br><br><span class="hljs-comment">#isPdftkinstalled作用为检查pdftk是否可用，若可用则执行pdftk --version</span><br><span class="hljs-keyword">function</span> isPdftkinstalled &#123;<br>    <span class="hljs-built_in">echo</span><br>    <span class="hljs-keyword">if</span> [ -z $(whereis pdftk | gawk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>) ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;pdftk未安装或未加入PATH，请检查。&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;提示：pdftk已加入Deepin官方源，您可以通过 sudo apt install pdftk 简单安装。&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> $(pdftk --version)<br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">echo</span><br>&#125;<br><br><span class="hljs-comment">#getCouples作用为对输入的页码进行处理，支持输入单页或页码范围，将其转换为数对（获取范围前后页码，以冒号分隔）</span><br><span class="hljs-keyword">function</span> getCouples &#123;<br>    <span class="hljs-built_in">local</span> couples=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> left_end=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> right_end=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span>      <br>        arg1=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> | gawk -F<span class="hljs-string">&quot;[- ]&quot;</span> <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>        arg2=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> | gawk -F<span class="hljs-string">&quot;[- ]&quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>        left_end=$[ <span class="hljs-variable">$arg1</span> - 1 ]<br>        <span class="hljs-comment">#对应页码范围情况</span><br>        <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$arg2</span>&quot;</span> ]<br>        <span class="hljs-keyword">then</span><br>            right_end=$[ <span class="hljs-variable">$arg2</span> + 1 ]<br>        <span class="hljs-keyword">else</span><br>        <span class="hljs-comment">#对应单页情况</span><br>            right_end=$[ <span class="hljs-variable">$arg1</span> + 1 ]<br>        <span class="hljs-keyword">fi</span><br>        couples=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$couples</span> <span class="hljs-variable">$left_end</span>:<span class="hljs-variable">$right_end</span>)<br>        <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">done</span><br>    <span class="hljs-comment">#数对排序处理，注意sort是针对行的排序，故需要将空格转换成换行</span><br>    couples=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$couples</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&quot;\n&quot;</span> | <span class="hljs-built_in">sort</span> -t <span class="hljs-string">&#x27;:&#x27;</span> -k 1 -n)<br>    couples=$(refineCouples <span class="hljs-variable">$couples</span>)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$couples</span><br>&#125;<br><br><span class="hljs-comment">#refineCouples作用为合并相邻数对，供getCouples调用</span><br><span class="hljs-keyword">function</span> refineCouples &#123;<br>    <span class="hljs-built_in">local</span> args=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> isNabour=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num1=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f1)<br>    <span class="hljs-built_in">local</span> Num2=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f2)<br>    <span class="hljs-built_in">local</span> Num3=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num4=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span><br>        Num3=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f1)<br>        Num4=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f2)<br>        isNabour=$[ <span class="hljs-variable">$Num2</span> - <span class="hljs-variable">$Num3</span> ]<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$isNabour</span> -eq 1 ]<br>        <span class="hljs-keyword">then</span><br>            Num2=<span class="hljs-variable">$Num4</span><br>        <span class="hljs-keyword">else</span><br>            args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>:<span class="hljs-variable">$Num2</span>)<br>            Num1=<span class="hljs-variable">$Num3</span><br>            Num2=<span class="hljs-variable">$Num4</span><br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">done</span><br>    args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>:<span class="hljs-variable">$Num2</span>)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span><br>&#125;<br><br><span class="hljs-comment">#generateRanges作用为将数对转换为pdftk可用的页码范围</span><br><span class="hljs-keyword">function</span> generateRanges &#123;<br>    <span class="hljs-built_in">local</span> first_Bit=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f1)<br>    <span class="hljs-built_in">local</span> Num1=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num2=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> args=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span><br>        Num1=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f2)<br>        <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> ]<br>        <span class="hljs-keyword">then</span><br>            Num2=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$2</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f1)<br>            <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$Num1</span> -gt <span class="hljs-variable">$Num2</span> ]<br>            <span class="hljs-keyword">then</span><br>                Num2=<span class="hljs-variable">$Num1</span><br>            <span class="hljs-keyword">fi</span><br>        <span class="hljs-keyword">else</span><br>            Num2=<span class="hljs-string">&quot;end&quot;</span><br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">shift</span><br>        args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>-<span class="hljs-variable">$Num2</span>)<br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$first_Bit</span> -gt 0 ]<br>    <span class="hljs-keyword">then</span><br>        args=$(<span class="hljs-built_in">echo</span> 1-<span class="hljs-variable">$first_Bit</span> <span class="hljs-variable">$args</span>)<br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span><br>&#125;<br><br><span class="hljs-comment">#此函数作用为合并相邻页码范围，在使用refineCouples后已无使用必要，可删除</span><br><span class="hljs-keyword">function</span> refineRanges &#123;<br>    <span class="hljs-built_in">local</span> args=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> isNabour=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num1=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;-&quot;</span> -f1)<br>    <span class="hljs-built_in">local</span> Num2=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;-&quot;</span> -f2)<br>    <span class="hljs-built_in">local</span> Num3=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num4=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span><br>        Num3=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;-&quot;</span> -f1)<br>        Num4=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;-&quot;</span> -f2)<br>        isNabour=$[ <span class="hljs-variable">$Num3</span> - <span class="hljs-variable">$Num2</span> ]<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$isNabour</span> -eq 1 ]<br>        <span class="hljs-keyword">then</span><br>            Num2=<span class="hljs-variable">$Num4</span><br>        <span class="hljs-keyword">else</span><br>            args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>-<span class="hljs-variable">$Num2</span>)<br>            Num1=<span class="hljs-variable">$Num3</span><br>            Num2=<span class="hljs-variable">$Num4</span><br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">shift</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-variable">$Num1</span><br>    <span class="hljs-keyword">done</span><br>    args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>-<span class="hljs-variable">$Num2</span>)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span>   <br>&#125;<br><br>pdfFile=<span class="hljs-variable">$1</span><br><span class="hljs-built_in">shift</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$#</span> -lt 2 ]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage:pdftool [filename] [discard pages]&quot;</span><br>    <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br><br>pagesConserved=$(generateRanges $(getCouples $*))<br>pdftk_command=$(<span class="hljs-built_in">echo</span> pdftk <span class="hljs-variable">$pdfFile</span> <span class="hljs-built_in">cat</span> <span class="hljs-variable">$pagesConserved</span> output new_$(<span class="hljs-built_in">basename</span> <span class="hljs-variable">$&#123;pdfFile&#125;</span>))<br><span class="hljs-comment">#echo $pdftk_command</span><br><span class="hljs-variable">$pdftk_command</span><br></code></pre></td></tr></table></figure><p>根据大佬指点，使用bash自身的字符串展开替代cut命令：</p><figure class="highlight bash"><figcaption><span>pdftool.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 对pdftk的简单封装，用于删除指定的页码，以空格分隔，支持形如&quot;5-7&quot;的页码范围。页码输入不必按顺序，类似&quot;12 6-8 1 3&quot;输入是可以正常工作的。</span><br><br><span class="hljs-comment">#isPdftkinstalled作用为检查pdftk是否可用，若可用则执行pdftk --version</span><br><span class="hljs-keyword">function</span> isPdftkinstalled &#123;<br>    <span class="hljs-built_in">echo</span><br>    <span class="hljs-keyword">if</span> [ -z $(whereis pdftk | gawk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>) ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;pdftk未安装或未加入PATH，请检查。&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;提示：pdftk已加入Deepin官方源，您可以通过 sudo apt install pdftk 简单安装。&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> $(pdftk --version)<br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">echo</span><br>&#125;<br><br><span class="hljs-comment">#getCouples作用为对输入的页码进行处理，支持输入单页或页码范围，将其转换为数对（获取范围前后页码，以冒号分隔）</span><br><span class="hljs-keyword">function</span> getCouples &#123;<br>    <span class="hljs-built_in">local</span> couples=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> left_end=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> right_end=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span>      <br>        arg1=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> | gawk -F<span class="hljs-string">&quot;[- ]&quot;</span> <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>        arg2=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> | gawk -F<span class="hljs-string">&quot;[- ]&quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>        left_end=$[ <span class="hljs-variable">$arg1</span> - 1 ]<br>        <span class="hljs-comment">#对应页码范围情况</span><br>        <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$arg2</span>&quot;</span> ]<br>        <span class="hljs-keyword">then</span><br>            right_end=$[ <span class="hljs-variable">$arg2</span> + 1 ]<br>        <span class="hljs-keyword">else</span><br>        <span class="hljs-comment">#对应单页情况</span><br>            right_end=$[ <span class="hljs-variable">$arg1</span> + 1 ]<br>        <span class="hljs-keyword">fi</span><br>        couples=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$couples</span> <span class="hljs-variable">$left_end</span>:<span class="hljs-variable">$right_end</span>)<br>        <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">done</span><br>    <span class="hljs-comment">#数对排序处理，注意sort是针对行的排序，故需要将空格转换成换行</span><br>    couples=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$couples</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&quot;\n&quot;</span> | <span class="hljs-built_in">sort</span> -t <span class="hljs-string">&#x27;:&#x27;</span> -k 1 -n)<br>    couples=$(refineCouples <span class="hljs-variable">$couples</span>)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$couples</span><br>&#125;<br><br><span class="hljs-comment">#refineCouples作用为合并相邻数对，供getCouples调用</span><br><span class="hljs-keyword">function</span> refineCouples &#123;<br>    <span class="hljs-built_in">local</span> args=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> isNabour=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment">#local Num1=$(echo $1 | cut -d &quot;:&quot; -f1)</span><br>    <span class="hljs-comment">#local Num2=$(echo $1 | cut -d &quot;:&quot; -f2)</span><br>    <span class="hljs-built_in">local</span> Num1=<span class="hljs-variable">$&#123;1%%:*&#125;</span><br>    <span class="hljs-built_in">local</span> Num2=<span class="hljs-variable">$&#123;1##*:&#125;</span><br>    <span class="hljs-built_in">local</span> Num3=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num4=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span><br>        Num3=<span class="hljs-variable">$&#123;1%%:*&#125;</span><br>        Num4=<span class="hljs-variable">$&#123;1##*:&#125;</span><br>        isNabour=$[ <span class="hljs-variable">$Num2</span> - <span class="hljs-variable">$Num3</span> ]<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$isNabour</span> -eq 1 ]<br>        <span class="hljs-keyword">then</span><br>            Num2=<span class="hljs-variable">$Num4</span><br>        <span class="hljs-keyword">else</span><br>            args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>:<span class="hljs-variable">$Num2</span>)<br>            Num1=<span class="hljs-variable">$Num3</span><br>            Num2=<span class="hljs-variable">$Num4</span><br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">shift</span><br>    <span class="hljs-keyword">done</span><br>    args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>:<span class="hljs-variable">$Num2</span>)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span><br>&#125;<br><br><span class="hljs-comment">#generateRanges作用为将数对转换为pdftk可用的页码范围</span><br><span class="hljs-keyword">function</span> generateRanges &#123;<br>    <span class="hljs-built_in">local</span> first_Bit=<span class="hljs-variable">$&#123;1%%:*&#125;</span><br>    <span class="hljs-built_in">local</span> Num1=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> Num2=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-built_in">local</span> args=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">while</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]<br>    <span class="hljs-keyword">do</span><br>        Num1=<span class="hljs-variable">$&#123;1##*:&#125;</span><br>        <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> ]<br>        <span class="hljs-keyword">then</span><br>            Num2=<span class="hljs-variable">$&#123;2%%:*&#125;</span><br>            <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$Num1</span> -gt <span class="hljs-variable">$Num2</span> ]<br>            <span class="hljs-keyword">then</span><br>                Num2=<span class="hljs-variable">$Num1</span><br>            <span class="hljs-keyword">fi</span><br>        <span class="hljs-keyword">else</span><br>            Num2=<span class="hljs-string">&quot;end&quot;</span><br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">shift</span><br>        args=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$Num1</span>-<span class="hljs-variable">$Num2</span>)<br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$first_Bit</span> -gt 0 ]<br>    <span class="hljs-keyword">then</span><br>        args=$(<span class="hljs-built_in">echo</span> 1-<span class="hljs-variable">$first_Bit</span> <span class="hljs-variable">$args</span>)<br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$args</span><br>&#125;<br><br>pdfFile=<span class="hljs-variable">$1</span><br><span class="hljs-built_in">shift</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$#</span> -lt 2 ]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage:pdftool [filename] [discard pages]&quot;</span><br>    <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br><br>pagesConserved=$(generateRanges $(getCouples $*))<br>pdftk_command=$(<span class="hljs-built_in">echo</span> pdftk <span class="hljs-variable">$pdfFile</span> <span class="hljs-built_in">cat</span> <span class="hljs-variable">$pagesConserved</span> output new_$(<span class="hljs-built_in">basename</span> <span class="hljs-variable">$&#123;pdfFile&#125;</span>))<br><span class="hljs-comment">#echo $pdftk_command</span><br>pdftk_command<br></code></pre></td></tr></table></figure><p>可见使用bash本身的字符串替换更加高效灵活，通过#或%的数量可以制定首次匹配或最长匹配，用来截取文件名或后缀很有用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>bash</tag>
      
      <tag>递归</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bash - 递归</title>
    <link href="/2021/04/23/bash4/"/>
    <url>/2021/04/23/bash4/</url>
    
    <content type="html"><![CDATA[<h1 id="bash递归函数测试"><a href="#bash递归函数测试" class="headerlink" title="bash递归函数测试"></a>bash递归函数测试</h1><figure class="highlight bash"><figcaption><span>recursion_test.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># using recursion</span><br><br><span class="hljs-keyword">function</span> factorial &#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> -lt 1 ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> 0<br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> -eq 1 ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> 1<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">local</span> temp1=<span class="hljs-variable">$1</span><br>        <span class="hljs-built_in">local</span> temp2=$(factorial $[ <span class="hljs-variable">$1</span> - 1 ])<br>        <span class="hljs-built_in">local</span> result=$[ <span class="hljs-variable">$temp1</span> * <span class="hljs-variable">$temp2</span> ]<br>        <span class="hljs-built_in">echo</span> <span class="hljs-variable">$result</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">function</span> sumn &#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> -lt 1 ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> 0<br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> -eq 1 ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> 1<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">local</span> temp1=<span class="hljs-variable">$1</span><br>        <span class="hljs-built_in">local</span> temp2=$(sumn $[ <span class="hljs-variable">$1</span> - 1 ])<br>        <span class="hljs-built_in">local</span> result=$[ <span class="hljs-variable">$temp1</span> + <span class="hljs-variable">$temp2</span> ]<br>        <span class="hljs-built_in">echo</span> <span class="hljs-variable">$result</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">function</span> fbnq &#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> -lt 1 ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> 0<br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> -lt 2 ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> 1<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">local</span> temp1=$(fbnq $[ <span class="hljs-variable">$1</span> - 1 ])<br>        <span class="hljs-built_in">local</span> temp2=$(fbnq $[ <span class="hljs-variable">$1</span> - 2 ])<br>        <span class="hljs-built_in">local</span> result=$[ <span class="hljs-variable">$temp1</span> + <span class="hljs-variable">$temp2</span> ]<br>        <span class="hljs-built_in">echo</span> <span class="hljs-variable">$result</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter value: &quot;</span> value<br>result=$(factorial <span class="hljs-variable">$value</span>)<br>totalsum=$(sumn <span class="hljs-variable">$value</span>)<br>fibon=$(fbnq <span class="hljs-variable">$value</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The factorial of <span class="hljs-variable">$value</span> is: <span class="hljs-variable">$result</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The total sum of <span class="hljs-variable">$value</span> is: <span class="hljs-variable">$totalsum</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;FibonacciRecursive of <span class="hljs-variable">$value</span> is: <span class="hljs-variable">$fibon</span>&quot;</span><br></code></pre></td></tr></table></figure><p>递归实现只有2步：构造递归表达式以及设定初值。</p>]]></content>
    
    
    
    <tags>
      
      <tag>bash</tag>
      
      <tag>递归</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bash - 数组</title>
    <link href="/2021/04/22/bash3/"/>
    <url>/2021/04/22/bash3/</url>
    
    <content type="html"><![CDATA[<h1 id="bash中简单函数数组传递"><a href="#bash中简单函数数组传递" class="headerlink" title="bash中简单函数数组传递"></a>bash中简单函数数组传递</h1><figure class="highlight bash"><figcaption><span>array_test.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># array variable to function test</span><br><span class="hljs-keyword">function</span> testit &#123;<br><span class="hljs-built_in">local</span> newarray<br>newarray=<span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The new array value is: <span class="hljs-variable">$&#123;newarray[*]&#125;</span>&quot;</span><br>&#125;<br>myarray=(1 2 3 4 5)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The original array is <span class="hljs-variable">$&#123;myarray[*]&#125;</span>&quot;</span><br>testit <span class="hljs-variable">$&#123;myarray[*]&#125;</span><br></code></pre></td></tr></table></figure><p>书中使用命令展开进行传值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">newarray=($(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>))<br></code></pre></td></tr></table></figure><p>经过试验，这种方式也可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">newarray=(<span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>从输出来看一致，不过内在是否存在区别？</p><p>我自己来解答：</p><ol><li><code>newarray=&quot;$@&quot;</code> : newarray不是数组；</li><li><code>newarray=(&quot;$@&quot;)</code> : newarray是数组（套了圆括号）</li><li><code>newarray=(&quot;$*&quot;)</code> : newarray不是数组</li></ol><p>对于第3点可以回顾一下<code>$@</code>与<code>$*</code>的区别。<code>$@</code>中每个元素是独立的，<code>$*</code>只有一个元素。另外无论newarray是否为数组，<code>$&#123;newarray[*]&#125;</code>都可以完整输出内容，因为当newarray不是数组的情况下，全部内容都在<code>$&#123;newarray[0]&#125;</code>中，从标准输出来看没区别。</p><p>对于for而言数组与否没区别，它只会根据当前IFS分割元素。</p><p>再次回顾书中的方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">newarray=($(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>))<br></code></pre></td></tr></table></figure><p>这种方式看似愚笨，实则非常鲁棒。通过命令展开将不确定的输入类型输出成普通字符串，再套括号变成数组，值得品味。</p>]]></content>
    
    
    
    <tags>
      
      <tag>bash</tag>
      
      <tag>函数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bash - bc</title>
    <link href="/2021/04/09/bash2/"/>
    <url>/2021/04/09/bash2/</url>
    
    <content type="html"><![CDATA[<h1 id="bash中简单的bc计算"><a href="#bash中简单的bc计算" class="headerlink" title="bash中简单的bc计算"></a>bash中简单的bc计算</h1><figure class="highlight bash"><figcaption><span>bc_test.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br>var1=3.14<br>var2=5.2<br><br>var3=$(bc &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">scale = 4</span><br><span class="hljs-string">a1 = $var1 + $var2</span><br><span class="hljs-string">a2 = $var1 * $var2</span><br><span class="hljs-string">a1 + a2</span><br><span class="hljs-string">EOF</span><br>)<br><br><span class="hljs-built_in">echo</span> The final result is <span class="hljs-variable">$var3</span><br></code></pre></td></tr></table></figure><p>结果毫无悬念，24.668。注意这里用到了here document语法，行内重定向的一大用途便是方便在行间传递参数调用程序，通常搭配命令替换使用。另外注意，bc中引用外部变量（bash变量）时需要加$，bc中声明的变量是不需要的。</p>]]></content>
    
    
    
    <tags>
      
      <tag>bash</tag>
      
      <tag>bc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bash - for</title>
    <link href="/2021/04/08/bash1/"/>
    <url>/2021/04/08/bash1/</url>
    
    <content type="html"><![CDATA[<h1 id="bash中简单的for循环"><a href="#bash中简单的for循环" class="headerlink" title="bash中简单的for循环"></a>bash中简单的for循环</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash for_test.sh</span><br><span class="hljs-built_in">sum</span>=0<br>i=$(<span class="hljs-built_in">echo</span> &#123;1..5&#125;)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The content of list:<span class="hljs-variable">$i</span>&quot;</span><br><span class="hljs-keyword">for</span> var <span class="hljs-keyword">in</span> <span class="hljs-variable">$i</span><br><span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The current value is:<span class="hljs-variable">$var</span>&quot;</span><br>    <span class="hljs-built_in">sum</span>=$[<span class="hljs-variable">$sum</span>+<span class="hljs-variable">$var</span>]<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The sum is: <span class="hljs-variable">$sum</span>&quot;</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;The final sum is: <span class="hljs-variable">$sum</span>&quot;</span><br></code></pre></td></tr></table></figure><p>感觉bash更适合编程入门，足够简单，少量知识就可以写出实用脚本实现对系统的自动化管理。许多“现代”语言虽然语法看起来“简单”，但是隐藏了许多细节，初学者到头来只会机械地调用模块，对于实际发生了什么毫无头绪，反而容易迷失方向。</p>]]></content>
    
    
    
    <tags>
      
      <tag>bash</tag>
      
      <tag>for</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>揣爪子的猫</title>
    <link href="/2021/03/25/cat2/"/>
    <url>/2021/03/25/cat2/</url>
    
    <content type="html"><![CDATA[<img src="/2021/03/25/cat2/1739987075.jpg" class="" title="猫猫"><p>它被大家叫做“咪咪”，今天也一早就守在门口~</p>]]></content>
    
    
    
    <tags>
      
      <tag>猫</tag>
      
      <tag>田园猫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R3300-M玩机记录</title>
    <link href="/2021/03/24/R3300-M/"/>
    <url>/2021/03/24/R3300-M/</url>
    
    <content type="html"><![CDATA[<p><em>拆机图</em></p><img src="/2021/03/24/R3300-M/106742788.jpg" class="" title="拆机"><p><em>盒子与遥控器合影</em></p><img src="/2021/03/24/R3300-M/160357931.jpg" class="" title="盒子与遥控器合影"><h1 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h1><pre><code class="hljs">处理器：Amlogic S905M-B，4核1.5GHz存储：4GB EMMC内存：1GB DDR3有线网口：100M无线网卡（2.4G）：RTL8189ETVTF卡槽：1个USB接口（2.0）：1个microUSB，1个A口HDMI接口：1个AV接口：1个（RET键在接口底部）散热：优秀电源：12V 1A，5.5mmX2.5mm蓝牙：无随机遥控器：优秀（具备学习功能）</code></pre><h1 id="线刷方式"><a href="#线刷方式" class="headerlink" title="线刷方式"></a>线刷方式</h1><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>microUSB数据线</li><li>运行Windows系统的电脑，推荐使用Win7和USB2.0。</li><li>棉签</li><li>TF卡</li><li>下载安装晶晨Burning_Tool（部分固件需要license文件否则显示刷机剩余次数为0）</li><li>刷机镜像</li></ul><h2 id="刷机镜像推荐"><a href="#刷机镜像推荐" class="headerlink" title="刷机镜像推荐"></a>刷机镜像推荐</h2><ul><li>潜龙固件 20171210_Q5_G2-40F_S905-S905M_android4.42_root_qlzy.rar ，自带root和bootloader，刷机方便，可用于救砖。</li><li>乐天固件 Q5_晶晨S905M-安卓4.4.2-支持8189和7601无线-当贝华为logo和动画-多遥控支持线刷包-20201126版.rar，可惜不带root，没法方便自行替换遥控文件。</li><li>ATV固件 MXQ_PRO_4K_p201_android_TV_by cOOLio_V2.5_MEE.7z。这个是真正的ATV固件，自带root开关，可惜R3300-M 4G的EMMC存储实在捉襟见肘所以不太实用。注意刷入这个固件后盒子会解锁4K@60fps（先前最大4K@30fps），CPU性能测试提升19%，美中不足没法遥控器开机了。</li></ul><h2 id="备份EMMC分区"><a href="#备份EMMC分区" class="headerlink" title="备份EMMC分区"></a>备份EMMC分区</h2><p>刷机前，强烈建议使用Armbian对EMMC分区进行备份，以免后悔。利用testdisk等工具从原厂EMMC镜像中也可以提取出遥控文件。盒子在刷机前无法启动高版本Armbian，推荐使用<strong>Armbian_5.44_S9xxx_Ubuntu_bionic_3.14.29_server_20180729.img</strong>或<strong>Armbian_5.99_Aml-g12_Ubuntu_bionic_default_5.3.0_rtl8189ftv.tar.gz</strong>。开机前，用棉签（去掉一头棉布）按住RST键进入Armbian系统，执行ddbr命令备份mmcblk0。</p><p>注：Armbian镜像写入TF卡后需要进行配置，早期，中期，后期配置方式不同。Armbian_5.44_S9xxx_Ubuntu_bionic_3.14.29_server_20180729.img将gxbb_p200_1G_100M_RealtekWiFi.dtb复制到TF卡根目录，重命名为dtb.img即可，Armbian_5.99_Aml-g12_Ubuntu_bionic_default_5.3.0_rtl8189ftv.tar.gz修改uEnv.txt文件引用meson-gxbb-p201.dtb，后期Armbian20.10修改&#x2F;extlinux&#x2F;extlinux.conf并将u-boot-s905重命名为u-boot.ext。详情参见 <a href="https://forum.armbian.com/topic/12162-single-armbian-image-for-rk-aml-aw-aarch64-armv8/?ct=1613786525">https://forum.armbian.com/topic/12162-single-armbian-image-for-rk-aml-aw-aarch64-armv8/?ct=1613786525</a> ，其他用户自行编译（如恩山论坛）的可能存在差异。</p><h2 id="首次刷机"><a href="#首次刷机" class="headerlink" title="首次刷机"></a>首次刷机</h2><ul><li>电脑上使用Burning_Tool导入镜像，默认配置不变，点击开始刷机；</li><li>在棉签按住RST键的情况下，接通电源后迅速用microUSB数据线连接盒子与电脑，如无意外电脑会先自动安装驱动然后开始刷机进程，刷机进程显示100%后拔电源重启即可，视情况可能需要自行替换遥控文件：</li></ul><p><code>/etc/remote.conf,remote1.conf,remote2.conf</code></p><p>我在原厂遥控文件基础上仅修改添加了menu键，余处未做改动。</p><p>刷机后，盒子可以引导Armbian20.10了。</p><h2 id="二次刷机"><a href="#二次刷机" class="headerlink" title="二次刷机"></a>二次刷机</h2><p>在刷写第三方固件后不能按RST键进入刷机模式的情况下，网上流传的方式基本都是拆机短接强刷，其实没必要，有简单的方法。Armbian启动后，随便往mmcblk0头部写入一些数据，比如：<br><code>dd if=/dev/zero of=/dev/mmcblk0/ bs=4M count=30</code><br>这样下次开机只有电源灯亮。电脑上点击开始刷机，盒子拔掉电源，使用microUSB数据线连接电脑，会自动安装驱动并开始刷机进程。</p><h1 id="Armbian镜像推荐"><a href="#Armbian镜像推荐" class="headerlink" title="Armbian镜像推荐"></a>Armbian镜像推荐</h1><p>刚才已经列出了<strong>Armbian_5.44_S9xxx_Ubuntu_bionic_3.14.29_server_20180729.img</strong>和<strong>Armbian_5.99_Aml-g12_Ubuntu_bionic_default_5.3.0_rtl8189ftv.tar.gz</strong>。这2个都能驱动WIFI（8189es），但是内核版本比较老。我目前使用的是balbes150发布的<strong>Armbian_20.10_Arm-64_focal_current_5.9.0.img.xz</strong>，没有集成8189es驱动WIFI无法使用，不过当做headless server无所谓了。CSDN上倒是有RTL8189ES_linux_v5.8.9_35085.20191003.zip，要26块钱下载： <a href="https://download.csdn.net/download/rxgzh070207/11978856?utm_source=bbsseo">https://download.csdn.net/download/rxgzh070207/11978856?utm_source=bbsseo</a></p><h1 id="Coreelec测试"><a href="#Coreelec测试" class="headerlink" title="Coreelec测试"></a>Coreelec测试</h1><p>CoreELEC-Amlogic.arm-9.2.6-Generic.img.gz搭配gxbb_p200_1G_100M_RealtekWiFi.dtb可以使用，也能写入EMMC，我还特意制作了meson-ir遥控文件：</p><h2 id="R3300M"><a href="#R3300M" class="headerlink" title="R3300M"></a>R3300M</h2><details><summary>点击展开查看</summary><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs clean"># table R3300M, type: NEC<br># ###################################################### #<br># 遥控码 Keycode实体按键实现功能 #<br># ###################################################### #<br># 基本功能区（测试正常）<br><span class="hljs-number">0xb3dc</span> KEY_POWER#【待机】开关机<br><span class="hljs-number">0xb39c</span> KEY_MUTE#【静音】静音<br><span class="hljs-number">0xb388</span> KEY_HOME#【首页】HOME键<br><span class="hljs-number">0xb382</span> KEY_MENU#【本地】菜单键<br><span class="hljs-number">0xb3ce</span> KEY_OK#【确定】确定<br><span class="hljs-number">0xb3c5</span> KEY_BACK#【返回】返回<br><span class="hljs-number">0xb395</span> KEY_PLAYPAUSE#【播放暂停】暂停/播放<br><span class="hljs-number">0xb3ca</span> KEY_UP#【上】上<br><span class="hljs-number">0xb3d2</span> KEY_DOWN#【下】下<br><span class="hljs-number">0xb399</span> KEY_LEFT#【左】左<br><span class="hljs-number">0xb3c1</span> KEY_RIGHT#【右】右<br><span class="hljs-number">0xb380</span> KEY_VOLUMEUP#【音量+】音量增大<br><span class="hljs-number">0xb381</span> KEY_VOLUMEDOWN#【音量-】音量减小<br><span class="hljs-number">0xb3dd</span> KEY_PAGEUP#【上页】向上翻页<br><span class="hljs-number">0xb38c</span> KEY_PAGEDOWN#【下页】向下翻页<br><span class="hljs-number">0xb385</span> KEY_CHANNELUP#【频道+】向上调台<br><span class="hljs-number">0xb386</span> KEY_CHANNELDOWN#【频道-】向下调台<br># 数字按键区（测试正常）<br><span class="hljs-number">0xb387</span> KEY_0#【<span class="hljs-number">0</span>】<span class="hljs-number">0</span><br><span class="hljs-number">0xb392</span> KEY_1#【<span class="hljs-number">1</span>】<span class="hljs-number">1</span><br><span class="hljs-number">0xb393</span> KEY_2#【<span class="hljs-number">2</span>】<span class="hljs-number">2</span><br><span class="hljs-number">0xb3cc</span> KEY_3#【<span class="hljs-number">3</span>】<span class="hljs-number">3</span><br><span class="hljs-number">0xb38e</span> KEY_4#【<span class="hljs-number">4</span>】<span class="hljs-number">4</span><br><span class="hljs-number">0xb38f</span> KEY_5#【<span class="hljs-number">5</span>】<span class="hljs-number">5</span><br><span class="hljs-number">0xb3c8</span> KEY_6#【<span class="hljs-number">6</span>】<span class="hljs-number">6</span><br><span class="hljs-number">0xb38a</span> KEY_7#【<span class="hljs-number">7</span>】<span class="hljs-number">7</span><br><span class="hljs-number">0xb38b</span> KEY_8#【<span class="hljs-number">8</span>】<span class="hljs-number">8</span><br><span class="hljs-number">0xb3c4</span> KEY_9#【<span class="hljs-number">9</span>】<span class="hljs-number">9</span><br># 快捷功能区（测试正常）<br><span class="hljs-number">0xb3cd</span> KEY_Red#【直播】Kodi TV PVR（电视）<br><span class="hljs-number">0xb391</span> KEY_Green#【回看】Kodi Videos（视频）<br><span class="hljs-number">0xb383</span> KEY_Yellow#【点播】Kodi Music （音乐）<br><span class="hljs-number">0xb3c3</span> KEY_BLUE#【信息】Kodi Pictures（图片）<br># 其他按键定义<br><span class="hljs-number">0xb398</span> KEY_CONTEXT_MENU #【声道】显示详细信息<br><span class="hljs-number">0xb38d</span> KEY_SUBTITLE#【设置】字幕<br><span class="hljs-number">0xb3d6</span> KEY_STOP#【交换】停止播放<br><span class="hljs-number">0xb3da</span> KEY_REWIND#【*】快退<br><span class="hljs-number">0xb3d0</span> KEY_FASTFORWARD #【#】快进<br><span class="hljs-number">0x51806e</span> KEY_INFO #【TV/IPTV】显示信息<br></code></pre></td></tr></table></figure></details><h2 id="rc-maps-cfg"><a href="#rc-maps-cfg" class="headerlink" title="rc_maps.cfg"></a>rc_maps.cfg</h2><details><summary>点击展开查看</summary><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># Keymaps table</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This table creates an association between a keycode file and a kernel</span><br><span class="hljs-comment"># driver. It can be used to automatically override a keycode definition.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Format:</span><br><span class="hljs-comment">#       driver - name of the driver provided via uevent - use * for any driver</span><br><span class="hljs-comment">#       table -  RC keymap table, provided via uevent - use * for any table</span><br><span class="hljs-comment">#       file - file name. If directory is not specified, it is first looked up</span><br><span class="hljs-comment">#               in /storage/.config/rc_keymaps, then /usr/lib/udev/rc_keymaps</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For example:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># driver        table           file</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># gpio-rc-recv  rc-streamzap    streamzap</span><br><span class="hljs-comment"># gpio-rc-recv  *               justboom</span><br><span class="hljs-comment"># *             rc-rc6-mce      rc6_mce_new</span><br><span class="hljs-comment"># *             *               hauppauge_new</span><br><span class="hljs-attribute">meson</span>-ir        *               R3300M<br></code></pre></td></tr></table></figure></details><h1 id="Openwrt测试"><a href="#Openwrt测试" class="headerlink" title="Openwrt测试"></a>Openwrt测试</h1><p>测试了恩山Flippy为N1最后发布的49+镜像，配合meson-gbxx-p201.dtb启动没问题，但是写入emmc后无法启动，原因不明。</p>]]></content>
    
    
    
    <tags>
      
      <tag>GXBB</tag>
      
      <tag>S905</tag>
      
      <tag>S905M-B</tag>
      
      <tag>BestTV</tag>
      
      <tag>ATV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>单位的猫</title>
    <link href="/2021/03/24/cat1/"/>
    <url>/2021/03/24/cat1/</url>
    
    <content type="html"><![CDATA[<img src="/2021/03/24/cat1/978765495.jpg" class="" title="猫猫"><p>单位的流浪猫，去年夏天带2只小猫过来的，在一楼值班室安然过冬，大家平时会投喂。今年大概会生出一窝橘猫……</p>]]></content>
    
    
    
    <tags>
      
      <tag>猫</tag>
      
      <tag>田园猫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo文章摘要</title>
    <link href="/2021/03/24/hexo-syntax/"/>
    <url>/2021/03/24/hexo-syntax/</url>
    
    <content type="html"><![CDATA[<p>这是摘要，点击下面阅读全文。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- more --&gt;</span><br></code></pre></td></tr></table></figure><span id="more"></span><p>摘要后面。</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>syntax</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>必虎路由器折腾记录</title>
    <link href="/2021/03/23/bhu-dc/"/>
    <url>/2021/03/23/bhu-dc/</url>
    
    <content type="html"><![CDATA[<p><em>路由器主板正面</em></p><img src="/2021/03/23/bhu-dc/%E5%BF%85%E8%99%8EDC-%E6%AD%A3%E9%9D%A2.jpg" class="" title="路由器主板正面"><p><em>路由器主板背面</em></p><img src="/2021/03/23/bhu-dc/%E5%BF%85%E8%99%8EDC-%E8%83%8C%E9%9D%A2.jpg" class="" title="路由器主板背面"><p>某小黄鱼上15元捡来的路由器，必虎路由器DC。</p><h1 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h1><ul><li>SOC：MT7628NN</li><li>FLASH：16MB</li><li>RAM：64M</li><li>网口：3个</li><li>天线：2个</li><li>USB：无</li><li>供电：5V1A，圆口</li><li>指示灯：蓝&#x2F;紫色</li><li>特色：磁铁</li></ul><p>硬件上没啥好说的，主板与外壳没有任何连接方便拆卸，直接拿来刷机。</p><h1 id="刷机工作"><a href="#刷机工作" class="headerlink" title="刷机工作"></a>刷机工作</h1><p>原厂固件自动开启收费共享WIFI无法修改，而且已经绑定了其他人手机号，必须刷机。原厂固件默认开启SSH，但是无法登录，用编程器备份固件后刷breed然后刷第三方固件。</p><h2 id="编程器"><a href="#编程器" class="headerlink" title="编程器"></a>编程器</h2><p>diybcq.com 设计出品的CH341A v1.5 （论坛有网店），上手相当不错，配合SOP8烧录夹（带转接板）顺利读写闪存。注意：我操作的闪存是Winbond 25Q128JVSQ，按照软件说明应该使用3.3V电压操作，但实测此时路由器会启动，结果是无法识别读写闪存。经测试，电压设置为2.5V可正常读写闪存。</p><h2 id="转接板，夹子"><a href="#转接板，夹子" class="headerlink" title="转接板，夹子"></a>转接板，夹子</h2><p>没有热风枪 + 怕麻烦，遂尝试了免拆机方案，CH341A配合最普通的SOP8烧录夹和转接板就行了。在免拆机条件下由于外围电路会有干扰，所以不一定能够成功读写闪存。</p><h2 id="UART-USB？"><a href="#UART-USB？" class="headerlink" title="UART-USB？"></a>UART-USB？</h2><p>原厂固件的UART也加密了，需要身份验证，无法直接操作。另外CH341A提供了TTL功能，不需要另外购买。</p><p>附上原厂固件启动日志：</p><details><summary>点击展开查看</summary><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[<span class="hljs-symbol">BEGIN</span>] <span class="hljs-number">2021</span>/<span class="hljs-number">3</span>/<span class="hljs-number">4</span> <span class="hljs-number">21</span>:<span class="hljs-number">11</span>:<span class="hljs-number">07</span><br>[<span class="hljs-number">040</span>±°<span class="hljs-number">08</span>][<span class="hljs-number">0</span>′<span class="hljs-number">0</span>±<span class="hljs-number">0</span><span class="hljs-symbol">C0E</span>]<br>                   <span class="hljs-symbol">DDR</span> <span class="hljs-symbol">Ca</span>&amp;#<span class="hljs-number">47650</span>;rati&amp;#<span class="hljs-number">60320</span>;<span class="hljs-symbol">DQS</span> r&amp;#<span class="hljs-number">18784</span>;= <span class="hljs-number">00</span>°<span class="hljs-number">08788</span><br><br>&amp;#<span class="hljs-number">1261</span>;<span class="hljs-symbol">Boot</span> ±<span class="hljs-number">.1</span><span class="hljs-number">.3</span> ¨<span class="hljs-symbol">Feb</span> <span class="hljs-number">2</span>· <span class="hljs-number">2017</span> - <span class="hljs-number">14</span>:<span class="hljs-number">21</span>o39)<br><br><span class="hljs-symbol">Boa2</span>¤: &amp;#<span class="hljs-number">6889</span>;&amp;#<span class="hljs-number">60000</span>;&amp;#<span class="hljs-number">1199</span>;<span class="hljs-symbol">C</span> <span class="hljs-symbol">DRAMo</span>  <span class="hljs-number">64</span> <span class="hljs-symbol">MB</span><br><span class="hljs-number">1</span>&amp;#<span class="hljs-number">255</span>;t￥Α&amp;#<span class="hljs-number">597</span>;new interface driver usbfs<br>[    <span class="hljs-number">1.272000</span>] usbcore: registered new interface driver hub<br>[    <span class="hljs-number">1.276000</span>] usbcore: registered new device driver usb<br>[    <span class="hljs-number">1.280000</span>] bhu_tc_attach : end, g_bhu_tc_salt=<span class="hljs-number">-1536776869</span><br>[    <span class="hljs-number">1.284000</span>] <span class="hljs-symbol">Switching</span> to clocksource <span class="hljs-symbol">MIPS</span><br>[    <span class="hljs-number">1.288000</span>] <span class="hljs-symbol">NET</span>: <span class="hljs-symbol">Registered</span> protocol family <span class="hljs-number">2</span><br>[    <span class="hljs-number">1.296000</span>] <span class="hljs-symbol">TCP</span> established hash table entries: <span class="hljs-number">512</span> (order: <span class="hljs-number">0</span>, <span class="hljs-number">4096</span> bytes)<br>[    <span class="hljs-number">1.300000</span>] <span class="hljs-symbol">TCP</span> bind hash table entries: <span class="hljs-number">512</span> (order: <span class="hljs-number">-1</span>, <span class="hljs-number">2048</span> bytes)<br>[    <span class="hljs-number">1.308000</span>] <span class="hljs-symbol">TCP</span>: <span class="hljs-symbol">Hash</span> tables configured (established <span class="hljs-number">512</span> bind <span class="hljs-number">512</span>)<br>[    <span class="hljs-number">1.316000</span>] <span class="hljs-symbol">TCP</span>: reno registered<br>[    <span class="hljs-number">1.316000</span>] <span class="hljs-symbol">UDP</span> hash table entries: <span class="hljs-number">256</span> (order: <span class="hljs-number">0</span>, <span class="hljs-number">4096</span> bytes)<br>[    <span class="hljs-number">1.324000</span>] <span class="hljs-symbol">UDP</span>-<span class="hljs-symbol">Lite</span> hash table entries: <span class="hljs-number">256</span> (order: <span class="hljs-number">0</span>, <span class="hljs-number">4096</span> bytes)<br>[    <span class="hljs-number">1.332000</span>] <span class="hljs-symbol">NET</span>: <span class="hljs-symbol">Registered</span> protocol family <span class="hljs-number">1</span><br>[    <span class="hljs-number">1.336000</span>] <span class="hljs-symbol">MTK</span>/<span class="hljs-symbol">Ralink</span> <span class="hljs-symbol">EHCI</span>/<span class="hljs-symbol">OHCI</span> init.<br>[    <span class="hljs-number">1.340000</span>] squashfs: version <span class="hljs-number">4.0</span> (<span class="hljs-number">2009</span>/<span class="hljs-number">01</span>/<span class="hljs-number">31</span>) <span class="hljs-symbol">Phillip</span> <span class="hljs-symbol">Lougher</span><br>[    <span class="hljs-number">1.348000</span>] jffs2: version <span class="hljs-number">2.2</span>. (<span class="hljs-symbol">NAND</span>) (<span class="hljs-symbol">SUMMARY</span>)  (<span class="hljs-symbol">LZMA</span>) (<span class="hljs-symbol">RTIME</span>) (<span class="hljs-symbol">CMODE_PRIORITY</span>) (c) <span class="hljs-number">2001</span><span class="hljs-number">-2006</span> <span class="hljs-symbol">Red</span> <span class="hljs-symbol">Hat</span>, <span class="hljs-symbol">Inc</span>.<br>[    <span class="hljs-number">1.360000</span>] msgmni has been set to <span class="hljs-number">118</span><br>[    <span class="hljs-number">1.364000</span>] io scheduler noop registered (default)<br>[    <span class="hljs-number">1.376000</span>] <span class="hljs-symbol">Serial</span>: <span class="hljs-number">8250</span>/<span class="hljs-number">16550</span> driver, <span class="hljs-number">2</span> ports, <span class="hljs-symbol">IRQ</span> sharing disabled<br>[    <span class="hljs-number">1.384000</span>] serial8250: ttyS0 at <span class="hljs-symbol">MMIO</span> <span class="hljs-number">0x10000d00</span> (irq = <span class="hljs-number">21</span>) is a <span class="hljs-number">16550</span><span class="hljs-symbol">A</span><br>[    <span class="hljs-number">1.392000</span>] serial8250: ttyS1 at <span class="hljs-symbol">MMIO</span> <span class="hljs-number">0x10000c00</span> (irq = <span class="hljs-number">20</span>) is a <span class="hljs-number">16550</span><span class="hljs-symbol">A</span><br>[    <span class="hljs-number">1.400000</span>] led=<span class="hljs-number">43</span>, on=<span class="hljs-number">1</span>, off=<span class="hljs-number">5</span>, blinks=<span class="hljs-number">1</span>, rest=<span class="hljs-number">0</span>, times=<span class="hljs-number">1</span><br>[    <span class="hljs-number">1.404000</span>] <span class="hljs-symbol">Ralink</span> gpio driver initialized<br>[    <span class="hljs-number">1.408000</span>] flash manufacture id: ef, device id <span class="hljs-number">40</span> <span class="hljs-number">18</span><br>[    <span class="hljs-number">1.416000</span>] <span class="hljs-symbol">W25Q128BV</span>(ef <span class="hljs-number">40180000</span>) (<span class="hljs-number">16384</span> <span class="hljs-symbol">Kbytes</span>)<br>[    <span class="hljs-number">1.420000</span>] mtd .name = raspi, .size = <span class="hljs-number">0x01000000</span> (<span class="hljs-number">16</span><span class="hljs-symbol">M</span>) .erasesize = <span class="hljs-number">0x00010000</span> (<span class="hljs-number">64</span><span class="hljs-symbol">K</span>) .numeraseregions = <span class="hljs-number">0</span><br>[    <span class="hljs-number">1.428000</span>] <span class="hljs-symbol">Creating</span> <span class="hljs-number">8</span> <span class="hljs-symbol">MTD</span> partitions on <span class="hljs-string">&quot;raspi&quot;</span>:<br>[    <span class="hljs-number">1.432000</span>] <span class="hljs-number">0x000000000000</span><span class="hljs-number">-0x000001000000</span> : <span class="hljs-string">&quot;ALL&quot;</span><br>[    <span class="hljs-number">1.440000</span>] <span class="hljs-number">0x000000000000</span><span class="hljs-number">-0x000000040000</span> : <span class="hljs-string">&quot;Bootloader&quot;</span><br>[    <span class="hljs-number">1.448000</span>] <span class="hljs-number">0x000000040000</span><span class="hljs-number">-0x000000050000</span> : <span class="hljs-string">&quot;Config&quot;</span><br>[    <span class="hljs-number">1.452000</span>] <span class="hljs-number">0x000000050000</span><span class="hljs-number">-0x000000060000</span> : <span class="hljs-string">&quot;Factory&quot;</span><br>[    <span class="hljs-number">1.460000</span>] <span class="hljs-number">0x000000060000</span><span class="hljs-number">-0x000000de0000</span> : <span class="hljs-string">&quot;firmware&quot;</span><br>[    <span class="hljs-number">1.468000</span>] <span class="hljs-number">0x0000001a398a</span><span class="hljs-number">-0x000000de0000</span> : <span class="hljs-string">&quot;rootfs&quot;</span><br>[    <span class="hljs-number">1.472000</span>] mtd: partition <span class="hljs-string">&quot;rootfs&quot;</span> must either start or end on erase block boundary or be smaller than an erase block -- forcing read-only<br>[    <span class="hljs-number">1.488000</span>] mtd: partition <span class="hljs-string">&quot;rootfs_data&quot;</span> created automatically, ofs=<span class="hljs-number">0x940000</span>, len=<span class="hljs-number">0x4a0000</span><br>[    <span class="hljs-number">1.496000</span>] <span class="hljs-number">0x000000940000</span><span class="hljs-number">-0x000000de0000</span> : <span class="hljs-string">&quot;rootfs_data&quot;</span><br>[    <span class="hljs-number">1.504000</span>] <span class="hljs-number">0x000000de0000</span><span class="hljs-number">-0x000000fe0000</span> : <span class="hljs-string">&quot;user&quot;</span><br>[    <span class="hljs-number">1.508000</span>] <span class="hljs-number">0x000000fe0000</span><span class="hljs-number">-0x000000ff0000</span> : <span class="hljs-string">&quot;cfg&quot;</span><br>[    <span class="hljs-number">1.516000</span>] <span class="hljs-number">0x000000ff0000</span><span class="hljs-number">-0x000001000000</span> : <span class="hljs-string">&quot;oem&quot;</span><br>[    <span class="hljs-number">1.524000</span>] tun: <span class="hljs-symbol">Universal</span> <span class="hljs-symbol">TUN</span>/<span class="hljs-symbol">TAP</span> device driver, <span class="hljs-number">1.6</span><br>[    <span class="hljs-number">1.528000</span>] tun: (<span class="hljs-symbol">C</span>) <span class="hljs-number">1999</span><span class="hljs-number">-2004</span> <span class="hljs-symbol">Max</span> <span class="hljs-symbol">Krasnyansky</span> &lt;maxk@qualcomm.com&gt;<br>[    <span class="hljs-number">1.532000</span>] <span class="hljs-symbol">GMAC1_MAC_ADRH</span> -- : <span class="hljs-number">0x00008482</span><br>[    <span class="hljs-number">1.540000</span>] <span class="hljs-symbol">GMAC1_MAC_ADRL</span> -- : <span class="hljs-number">0xf438c014</span><br>[    <span class="hljs-number">1.544000</span>] <span class="hljs-symbol">Ralink</span> <span class="hljs-symbol">APSoC</span> <span class="hljs-symbol">Ethernet</span> <span class="hljs-symbol">Driver</span> <span class="hljs-symbol">Initilization</span>. v3<span class="hljs-number">.1</span>  <span class="hljs-number">512</span> rx/tx descriptors allocated, mtu = <span class="hljs-number">1500</span>!<br>[    <span class="hljs-number">1.552000</span>] <span class="hljs-symbol">GMAC1_MAC_ADRH</span> -- : <span class="hljs-number">0x00008482</span><br>[    <span class="hljs-number">1.556000</span>] <span class="hljs-symbol">GMAC1_MAC_ADRL</span> -- : <span class="hljs-number">0xf438c014</span><br>[    <span class="hljs-number">1.560000</span>] <span class="hljs-symbol">PROC</span> <span class="hljs-symbol">INIT</span> <span class="hljs-symbol">OK</span>!<br>[    <span class="hljs-number">1.564000</span>] ehci_hcd: <span class="hljs-symbol">USB</span> <span class="hljs-number">2.0</span> <span class="hljs-string">&#x27;Enhanced&#x27;</span> <span class="hljs-symbol">Host</span> <span class="hljs-symbol">Controller</span> (<span class="hljs-symbol">EHCI</span>) <span class="hljs-symbol">Driver</span><br>[    <span class="hljs-number">1.572000</span>] ehci-pci: <span class="hljs-symbol">EHCI</span> <span class="hljs-symbol">PCI</span> platform driver<br>[    <span class="hljs-number">1.576000</span>] ehci-platform: <span class="hljs-symbol">EHCI</span> generic platform driver<br>[    <span class="hljs-number">1.600000</span>] ******<span class="hljs-symbol">MT7628</span> mtk phy<br>[    <span class="hljs-number">1.604000</span>] *****run project phy.<br>[    <span class="hljs-number">1.616000</span>] <span class="hljs-symbol">FM_OUT</span> value: u4FmOut = <span class="hljs-number">0</span>(<span class="hljs-number">0x00000000</span>)<br>[    <span class="hljs-number">1.628000</span>] <span class="hljs-symbol">FM_OUT</span> value: u4FmOut = <span class="hljs-number">124</span>(<span class="hljs-number">0x0000007C</span>)<br>[    <span class="hljs-number">1.632000</span>] <span class="hljs-symbol">FM</span> detection done! loop = <span class="hljs-number">1</span><br>[    <span class="hljs-number">1.644000</span>] <span class="hljs-symbol">SR</span> calibration value u1SrCalVal = <span class="hljs-number">7</span><br>[    <span class="hljs-number">1.648000</span>] *********<span class="hljs-symbol">Execute</span> mt7628_phy_init!!<br>[    <span class="hljs-number">1.652000</span>] ehci-platform ehci-platform: <span class="hljs-symbol">EHCI</span> <span class="hljs-symbol">Host</span> <span class="hljs-symbol">Controller</span><br>[    <span class="hljs-number">1.656000</span>] ehci-platform ehci-platform: new <span class="hljs-symbol">USB</span> bus registered, assigned bus number <span class="hljs-number">1</span><br>[    <span class="hljs-number">1.664000</span>] ehci-platform ehci-platform: irq <span class="hljs-number">18</span>, io mem <span class="hljs-number">0x101c0000</span><br>[    <span class="hljs-number">1.684000</span>] ehci-platform ehci-platform: <span class="hljs-symbol">USB</span> <span class="hljs-number">2.0</span> started, <span class="hljs-symbol">EHCI</span> <span class="hljs-number">1.00</span><br>[    <span class="hljs-number">1.688000</span>] hub <span class="hljs-number">1</span><span class="hljs-number">-0</span>:<span class="hljs-number">1.0</span>: <span class="hljs-symbol">USB</span> hub found<br>[    <span class="hljs-number">1.692000</span>] hub <span class="hljs-number">1</span><span class="hljs-number">-0</span>:<span class="hljs-number">1.0</span>: <span class="hljs-number">1</span> port detected<br>[    <span class="hljs-number">1.696000</span>] ohci_hcd: <span class="hljs-symbol">USB</span> <span class="hljs-number">1.1</span> <span class="hljs-string">&#x27;Open&#x27;</span> <span class="hljs-symbol">Host</span> <span class="hljs-symbol">Controller</span> (<span class="hljs-symbol">OHCI</span>) <span class="hljs-symbol">Driver</span><br>[    <span class="hljs-number">1.724000</span>] *********<span class="hljs-symbol">Execute</span> mt7628_phy_init!!<br>[    <span class="hljs-number">1.728000</span>] ohci-platform ohci-platform: <span class="hljs-symbol">Generic</span> <span class="hljs-symbol">Platform</span> <span class="hljs-symbol">OHCI</span> <span class="hljs-symbol">Controller</span><br>[    <span class="hljs-number">1.736000</span>] ohci-platform ohci-platform: new <span class="hljs-symbol">USB</span> bus registered, assigned bus number <span class="hljs-number">2</span><br>[    <span class="hljs-number">1.744000</span>] ohci-platform ohci-platform: irq <span class="hljs-number">18</span>, io mem <span class="hljs-number">0x101c1000</span><br>[    <span class="hljs-number">1.812000</span>] hub <span class="hljs-number">2</span><span class="hljs-number">-0</span>:<span class="hljs-number">1.0</span>: <span class="hljs-symbol">USB</span> hub found<br>[    <span class="hljs-number">1.816000</span>] hub <span class="hljs-number">2</span><span class="hljs-number">-0</span>:<span class="hljs-number">1.0</span>: <span class="hljs-number">1</span> port detected<br>[    <span class="hljs-number">1.820000</span>] <span class="hljs-symbol">Ralink</span> <span class="hljs-symbol">APSoC</span> <span class="hljs-symbol">Hardware</span> <span class="hljs-symbol">Watchdog</span> <span class="hljs-symbol">Timer</span><br>[    <span class="hljs-number">1.824000</span>] gre: <span class="hljs-symbol">GRE</span> over <span class="hljs-symbol">IPv4</span> demultiplexor driver<br>[    <span class="hljs-number">1.832000</span>] <span class="hljs-symbol">TCP</span>: cubic registered<br>[    <span class="hljs-number">1.832000</span>] <span class="hljs-symbol">NET</span>: <span class="hljs-symbol">Registered</span> protocol family <span class="hljs-number">10</span><br>[    <span class="hljs-number">1.840000</span>] <span class="hljs-symbol">NET</span>: <span class="hljs-symbol">Registered</span> protocol family <span class="hljs-number">17</span><br>[    <span class="hljs-number">1.844000</span>] <span class="hljs-symbol">Bridge</span> firewalling registered<br>[    <span class="hljs-number">1.848000</span>] <span class="hljs-number">8021</span>q: <span class="hljs-number">802.1</span><span class="hljs-symbol">Q</span> <span class="hljs-symbol">VLAN</span> <span class="hljs-symbol">Support</span> v1<span class="hljs-number">.8</span><br>[    <span class="hljs-number">1.852000</span>] registered taskstats version <span class="hljs-number">1</span><br>[    <span class="hljs-number">1.864000</span>] <span class="hljs-symbol">VFS</span>: <span class="hljs-symbol">Mounted</span> root (squashfs filesystem) readonly on device <span class="hljs-number">31</span>:<span class="hljs-number">5.</span><br>[    <span class="hljs-number">1.872000</span>] <span class="hljs-symbol">Freeing</span> unused kernel memory: <span class="hljs-number">220</span><span class="hljs-symbol">K</span> (<span class="hljs-number">80389000</span> - <span class="hljs-number">803</span>c0000)<br>procd: <span class="hljs-symbol">Console</span> i[    <span class="hljs-number">2.556000</span>] <span class="hljs-symbol">Started</span> <span class="hljs-symbol">WatchDog</span> <span class="hljs-symbol">Timer</span>.<br>s alive<br>procd: - watchdog -<br>[    <span class="hljs-number">3.904000</span>] <span class="hljs-symbol">SCSI</span> subsystem initialized<br>[    <span class="hljs-number">3.916000</span>] usbcore: registered new interface driver usb-storage<br>procd: - preinit -<br>[    <span class="hljs-number">5.104000</span>] jffs2: notice: (<span class="hljs-number">239</span>) jffs2_build_xattr_subsystem: complete building xattr subsystem, <span class="hljs-number">53</span> of xdatum (<span class="hljs-number">0</span> unchecked, <span class="hljs-number">53</span> orphan) and <span class="hljs-number">53</span> of xref (<span class="hljs-number">0</span> dead, <span class="hljs-number">53</span> orphan) found.<br>[    <span class="hljs-number">5.120000</span>] block: attempting to load /tmp/jffs_cfg/upper/etc/config/fstab<br>[    <span class="hljs-number">5.128000</span>] block: unable to load configuration (fstab: <span class="hljs-symbol">Entry</span> not found)<br>[    <span class="hljs-number">5.136000</span>] block: attempting to load /tmp/jffs_cfg/etc/config/fstab<br>[    <span class="hljs-number">5.140000</span>] block: unable to load configuration (fstab: <span class="hljs-symbol">Entry</span> not found)<br>[    <span class="hljs-number">5.148000</span>] block: attempting to load /etc/config/fstab<br>[    <span class="hljs-number">5.288000</span>] block: extroot: not configured<br>jffs2 is ready<br><span class="hljs-symbol">No</span> jffs2 marker was found<br>[    <span class="hljs-number">5.452000</span>] jffs2: notice: (<span class="hljs-number">236</span>) jffs2_build_xattr_subsystem: complete building xattr subsystem, <span class="hljs-number">53</span> of xdatum (<span class="hljs-number">0</span> unchecked, <span class="hljs-number">53</span> orphan) and <span class="hljs-number">53</span> of xref (<span class="hljs-number">0</span> dead, <span class="hljs-number">53</span> orphan) found.<br>[    <span class="hljs-number">5.836000</span>] block: attempting to load /tmp/jffs_cfg/upper/etc/config/fstab<br>[    <span class="hljs-number">5.844000</span>] block: unable to load configuration (fstab: <span class="hljs-symbol">Entry</span> not found)<br>[    <span class="hljs-number">5.848000</span>] block: attempting to load /tmp/jffs_cfg/etc/config/fstab<br>[    <span class="hljs-number">5.856000</span>] block: unable to load configuration (fstab: <span class="hljs-symbol">Entry</span> not found)<br>[    <span class="hljs-number">5.864000</span>] block: attempting to load /etc/config/fstab<br>[    <span class="hljs-number">5.872000</span>] block: extroot: not configured<br>switching to overlay<br>procd: - early -<br>procd: - watchdog -<br>procd: - ubus -<br>procd: - init -<br><span class="hljs-symbol">Please</span> press <span class="hljs-symbol">Enter</span> to activate this console.<br>[    <span class="hljs-number">7.052000</span>] <span class="hljs-symbol">NTFS</span> driver <span class="hljs-number">2.1</span><span class="hljs-number">.30</span> [<span class="hljs-symbol">Flags</span>: <span class="hljs-symbol">R</span>/<span class="hljs-symbol">O</span> <span class="hljs-symbol">MODULE</span>].<br>[    <span class="hljs-number">7.092000</span>] <span class="hljs-symbol">Initializing</span> <span class="hljs-symbol">XFRM</span> netlink socket<br>[    <span class="hljs-number">7.100000</span>] <span class="hljs-symbol">NET</span>: <span class="hljs-symbol">Registered</span> protocol family <span class="hljs-number">15</span><br>[    <span class="hljs-number">7.156000</span>] nf_conntrack version <span class="hljs-number">0.5</span><span class="hljs-number">.0</span> (<span class="hljs-number">954</span> buckets, <span class="hljs-number">3816</span> max)<br>[    <span class="hljs-number">7.164000</span>] ip6_tables: (<span class="hljs-symbol">C</span>) <span class="hljs-number">2000</span><span class="hljs-number">-2006</span> <span class="hljs-symbol">Netfilter</span> <span class="hljs-symbol">Core</span> <span class="hljs-symbol">Team</span><br>[    <span class="hljs-number">7.240000</span>] <span class="hljs-symbol">Ebtables</span> v2<span class="hljs-number">.0</span> registered<br>[    <span class="hljs-number">7.248000</span>] ip_tables: (<span class="hljs-symbol">C</span>) <span class="hljs-number">2000</span><span class="hljs-number">-2006</span> <span class="hljs-symbol">Netfilter</span> <span class="hljs-symbol">Core</span> <span class="hljs-symbol">Team</span><br>[    <span class="hljs-number">7.252000</span>] <span class="hljs-symbol">Type</span>=<span class="hljs-symbol">Linux</span><br>[    <span class="hljs-number">7.276000</span>] rdm_major = <span class="hljs-number">253</span><br>[    <span class="hljs-number">7.300000</span>] xt_time: kernel timezone is <span class="hljs-number">-0000</span><br>[    <span class="hljs-number">7.316000</span>] <span class="hljs-symbol">PPP</span> generic driver version <span class="hljs-number">2.4</span><span class="hljs-number">.2</span><br>[    <span class="hljs-number">7.324000</span>] <span class="hljs-symbol">NET</span>: <span class="hljs-symbol">Registered</span> protocol family <span class="hljs-number">24</span><br>[    <span class="hljs-number">7.384000</span>] bhu_stat_register_netlink: family id is <span class="hljs-number">19</span><br>[    <span class="hljs-number">7.388000</span>] <span class="hljs-symbol">BHUGenNetlink</span>: bhu_gen_nl_register_netlink<br>[    <span class="hljs-number">7.392000</span>] bhu_gen_nl_register_netlink: succeed to register bhu gen netlink. family id is <span class="hljs-number">20</span><br>[    <span class="hljs-number">7.416000</span>] <span class="hljs-symbol">BHUGenNetlink</span>: bhu_gen_nl_register_netlink<br>[    <span class="hljs-number">7.420000</span>] bhu_gen_nl_register_netlink: <span class="hljs-symbol">BHU</span> gen netlink has been registered. <span class="hljs-symbol">Family</span> id is <span class="hljs-number">20</span><br>[    <span class="hljs-number">7.444000</span>] <span class="hljs-symbol">FFFFFF84</span>:<span class="hljs-symbol">FFFFFF82</span>:<span class="hljs-symbol">FFFFFFF4</span>:<span class="hljs-number">38</span>:<span class="hljs-symbol">FFFFFFC0</span>:<span class="hljs-number">14</span><br>[    <span class="hljs-number">7.448000</span>] <span class="hljs-symbol">Raeth</span> v3<span class="hljs-number">.1</span> (<span class="hljs-symbol">Tasklet</span>,<span class="hljs-symbol">SkbRecycle</span>)<br>[    <span class="hljs-number">7.452000</span>]<br>[    <span class="hljs-number">7.452000</span>] phy_tx_ring = <span class="hljs-number">0x0328a000</span>, tx_ring = <span class="hljs-number">0xa328a000</span><br>[    <span class="hljs-number">7.460000</span>]<br>[    <span class="hljs-number">7.460000</span>] phy_rx_ring0 = <span class="hljs-number">0x0328c000</span>, rx_ring0 = <span class="hljs-number">0xa328c000</span><br>[    <span class="hljs-number">7.484000</span>] <span class="hljs-symbol">GMAC1_MAC_ADRH</span> -- : <span class="hljs-number">0x00008482</span><br>[    <span class="hljs-number">7.488000</span>] <span class="hljs-symbol">GMAC1_MAC_ADRL</span> -- : <span class="hljs-number">0xf438c014</span><br>[    <span class="hljs-number">7.492000</span>] <span class="hljs-symbol">RT305x_ESW</span>: <span class="hljs-symbol">Link</span> <span class="hljs-symbol">Status</span> <span class="hljs-symbol">Changed</span><br>[    <span class="hljs-number">7.492000</span>] [bhu_esw_link_status_change][<span class="hljs-number">2061</span>]: stat[<span class="hljs-number">0</span>], stat_curr[<span class="hljs-number">81808100</span>]<br>[    <span class="hljs-number">7.492000</span>] <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">ESW</span> <span class="hljs-symbol">LAN</span> link change<br>switch reg write offset=<span class="hljs-number">14</span>, value=<span class="hljs-number">405555</span><br>switch reg write offset=<span class="hljs-number">50</span>, value=<span class="hljs-number">2001</span><br>switch reg write offset=<span class="hljs-number">98</span>, value=<span class="hljs-number">7</span>f3f<br>switch reg write offset=e4, value=<span class="hljs-number">3</span>f<br>switch reg write offset=<span class="hljs-number">40</span>, value=<span class="hljs-number">1002</span><br>switch reg write offset=<span class="hljs-number">44</span>, value=<span class="hljs-number">1001</span><br>switch reg write offset=<span class="hljs-number">48</span>, value=<span class="hljs-number">1001</span><br>switch reg write offset=<span class="hljs-number">70</span>, value=ffff417e<br>switch reg write offset=<span class="hljs-number">74</span>, value=ffffffff<br>done.<br><span class="hljs-symbol">Setting</span> up networking on loopback device:<br>this file has been obseleted. please call <span class="hljs-string">&quot;/sbin/block mount&quot;</span> directly<br>block: <span class="hljs-symbol">Fall</span> back on <span class="hljs-symbol">RO</span> mount. <span class="hljs-symbol">Permission</span> denied.<br>block: /dev/mtdblock6 is already mounted<br>[    <span class="hljs-number">8.180000</span>] jffs2: notice: (<span class="hljs-number">641</span>) jffs2_build_xattr_subsystem: complete building xattr subsystem, <span class="hljs-number">0</span> of xdatum (<span class="hljs-number">0</span> unchecked, <span class="hljs-number">0</span> orphan) and <span class="hljs-number">0</span> of xref (<span class="hljs-number">0</span> dead, <span class="hljs-number">0</span> orphan) found.<br>/etc/rc.common: line <span class="hljs-number">1</span>: config_load: not found<br>block: /dev/mtdblock5 is already mounted<br>block: /dev/mtdblock6 is already mounted<br>block: /dev/mtdblock7 is already mounted<br>[    <span class="hljs-number">8.980000</span>] device eth5T entered promiscuous mode<br>[    <span class="hljs-number">9.480000</span>]<br>[    <span class="hljs-number">9.480000</span>]<br>[    <span class="hljs-number">9.480000</span>] === pAd = c078b000, size = <span class="hljs-number">845504</span> ===<br>[    <span class="hljs-number">9.480000</span>]<br>[    <span class="hljs-number">9.488000</span>] &lt;-- <span class="hljs-symbol">RTMPAllocTxRxRingMemory</span>, <span class="hljs-symbol">Status</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">ErrorValue</span>=<span class="hljs-number">0</span>x<br>[    <span class="hljs-number">9.496000</span>] &lt;-- <span class="hljs-symbol">RTMPAllocAdapterBlock</span>, <span class="hljs-symbol">Status</span>=<span class="hljs-number">0</span><br>[    <span class="hljs-number">9.500000</span>] <span class="hljs-symbol">RtmpChipOpsHook</span>(<span class="hljs-number">492</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[    <span class="hljs-number">9.508000</span>] mt7628_init()--&gt;<br>[    <span class="hljs-number">9.508000</span>] mt7628_init(<span class="hljs-symbol">FW</span>(<span class="hljs-number">8</span>a00), <span class="hljs-symbol">HW</span>(<span class="hljs-number">8</span>a01), <span class="hljs-symbol">CHIPID</span>(<span class="hljs-number">7628</span>))<br>[    <span class="hljs-number">9.516000</span>] e2.bin mt7628_init(<span class="hljs-number">1135</span>)::(<span class="hljs-number">2</span>), pChipCap-&gt;fw_len(<span class="hljs-number">63888</span>)<br>[    <span class="hljs-number">9.520000</span>] mt_bcn_buf_init(<span class="hljs-number">218</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[    <span class="hljs-number">9.528000</span>] &lt;--mt7628_init()<br>[    <span class="hljs-number">9.528000</span>] bhu_stainfo_register_callback: register callback successed<br>[    <span class="hljs-number">9.540000</span>] <span class="hljs-symbol">BHUGenNetlink</span>: bhu_gen_nl_register_netlink<br>[    <span class="hljs-number">9.544000</span>] bhu_gen_nl_register_netlink: <span class="hljs-symbol">BHU</span> gen netlink has been registered. <span class="hljs-symbol">Family</span> id is <span class="hljs-number">20</span><br>[    <span class="hljs-number">9.568000</span>] <span class="hljs-symbol">TX_BCN</span> <span class="hljs-symbol">DESC</span> a29d8000 size = <span class="hljs-number">320</span><br>[    <span class="hljs-number">9.572000</span>] <span class="hljs-symbol">RX</span>[<span class="hljs-number">0</span>] <span class="hljs-symbol">DESC</span> a29db000 size = <span class="hljs-number">1024</span><br>[    <span class="hljs-number">9.576000</span>] <span class="hljs-symbol">RX</span>[<span class="hljs-number">1</span>] <span class="hljs-symbol">DESC</span> a29dc000 size = <span class="hljs-number">1024</span><br>[    <span class="hljs-number">9.608000</span>] cfg_mode=<span class="hljs-number">9</span><br>[    <span class="hljs-number">9.612000</span>] cfg_mode=<span class="hljs-number">9</span><br>[    <span class="hljs-number">9.616000</span>] wmode_band_equal(): <span class="hljs-symbol">Band</span> <span class="hljs-symbol">Equal</span>!<br>[    <span class="hljs-number">9.620000</span>] <span class="hljs-symbol">AndesSendCmdMsg</span>: <span class="hljs-symbol">Could</span> not send in band command due to diable fRTMP_ADAPTER_MCU_SEND_IN_BAND_CMD<br>[    <span class="hljs-number">9.632000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.636000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.636000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">2</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.640000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">3</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.644000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">4</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.644000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">5</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.648000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">6</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.652000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">7</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.656000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">8</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.656000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">9</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.660000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">10</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.664000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">11</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.668000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">12</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.668000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">13</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.672000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">14</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.676000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">15</span>]=<span class="hljs-number">1</span><br>[    <span class="hljs-number">9.708000</span>] load fw image from fw_header_image<br>[    <span class="hljs-number">9.712000</span>] <span class="hljs-symbol">AndesMTLoadFwMethod1</span>(<span class="hljs-number">2182</span>)::pChipCap-&gt;fw_len(<span class="hljs-number">63888</span>)<br>[    <span class="hljs-number">9.720000</span>] <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Version</span>:<span class="hljs-number">20151201</span><br>[    <span class="hljs-number">9.720000</span>] <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Build</span> <span class="hljs-symbol">Date</span>:<span class="hljs-number">20151201183641</span><br>[    <span class="hljs-number">9.724000</span>] <span class="hljs-symbol">CmdAddressLenReq</span>:(ret = <span class="hljs-number">0</span>)<br>[    <span class="hljs-number">9.732000</span>] <span class="hljs-symbol">CmdFwStartReq</span>: override = <span class="hljs-number">1</span>, address = <span class="hljs-number">1048576</span><br>[    <span class="hljs-number">9.736000</span>] <span class="hljs-symbol">CmdStartDLRsp</span>: <span class="hljs-symbol">WiFI</span> <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Download</span> <span class="hljs-symbol">Success</span><br>[    <span class="hljs-number">9.740000</span>] <span class="hljs-symbol">MtAsicDMASchedulerInit</span>(): <span class="hljs-symbol">DMA</span> <span class="hljs-symbol">Scheduler</span> <span class="hljs-symbol">Mode</span>=<span class="hljs-number">0</span>(<span class="hljs-symbol">LMAC</span>)<br>[    <span class="hljs-number">9.748000</span>] efuse_probe: efuse = <span class="hljs-number">10000012</span><br>[    <span class="hljs-number">9.752000</span>] <span class="hljs-symbol">RtmpChipOpsEepromHook</span>::e2p_type=<span class="hljs-number">0</span>, inf_Type=<span class="hljs-number">4</span><br>[    <span class="hljs-number">9.756000</span>] <span class="hljs-symbol">RtmpEepromGetDefault</span>::e2p_dafault=<span class="hljs-number">2</span><br>[    <span class="hljs-number">9.760000</span>] <span class="hljs-symbol">RtmpChipOpsEepromHook</span>: <span class="hljs-symbol">E2P</span> type(<span class="hljs-number">2</span>), <span class="hljs-symbol">E2pAccessMode</span> = <span class="hljs-number">2</span>, <span class="hljs-symbol">E2P</span> default = <span class="hljs-number">2</span><br>[    <span class="hljs-number">9.768000</span>] <span class="hljs-symbol">NVM</span> is <span class="hljs-symbol">FLASH</span> mode<br>[    <span class="hljs-number">9.772000</span>] <span class="hljs-number">1.</span> <span class="hljs-symbol">Phy</span> <span class="hljs-symbol">Mode</span> = <span class="hljs-number">14</span><br>[    <span class="hljs-number">9.936000</span>] <span class="hljs-symbol">Country</span> <span class="hljs-symbol">Region</span> from e2p = ffff<br>[    <span class="hljs-number">9.940000</span>] tssi_1_target_pwr_g_band = <span class="hljs-number">36</span><br>[    <span class="hljs-number">9.944000</span>] <span class="hljs-number">2.</span> <span class="hljs-symbol">Phy</span> <span class="hljs-symbol">Mode</span> = <span class="hljs-number">14</span><br>[    <span class="hljs-number">9.944000</span>] <span class="hljs-number">3.</span> <span class="hljs-symbol">Phy</span> <span class="hljs-symbol">Mode</span> = <span class="hljs-number">14</span><br>[    <span class="hljs-number">9.948000</span>] <span class="hljs-symbol">NICInitPwrPinCfg</span>(<span class="hljs-number">11</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[    <span class="hljs-number">9.956000</span>] <span class="hljs-symbol">NICInitializeAsic</span>(<span class="hljs-number">651</span>): <span class="hljs-symbol">Not</span> support rtmp_mac_sys_reset () for <span class="hljs-symbol">HIF_MT</span> yet!<br>[    <span class="hljs-number">9.964000</span>] mt_mac_init()--&gt;<br>[    <span class="hljs-number">9.964000</span>] <span class="hljs-symbol">MtAsicInitMac</span>()--&gt;<br>[    <span class="hljs-number">9.968000</span>] mt7628_init_mac_cr()--&gt;<br>[    <span class="hljs-number">9.972000</span>] <span class="hljs-symbol">MtAsicSetMacMaxLen</span>(<span class="hljs-number">1276</span>): <span class="hljs-symbol">Set</span> the <span class="hljs-symbol">Max</span> <span class="hljs-symbol">RxPktLen</span>=<span class="hljs-number">1024</span>!<br>[    <span class="hljs-number">9.980000</span>] &lt;--mt_mac_init()<br>[    <span class="hljs-number">9.980000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">1</span> info:<br>[    <span class="hljs-number">9.984000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x28000</span>/<span class="hljs-number">0</span><br>[    <span class="hljs-number">9.988000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">32</span>/<span class="hljs-number">128</span><br>[    <span class="hljs-number">9.992000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">2</span> info:<br>[    <span class="hljs-number">9.996000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x40000</span>/<span class="hljs-number">0</span><br>[   <span class="hljs-number">10.000000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">64</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">10.004000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">3</span> info:<br>[   <span class="hljs-number">10.008000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x42000</span>/<span class="hljs-number">64</span><br>[   <span class="hljs-number">10.012000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">64</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">10.012000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">4</span> info:<br>[   <span class="hljs-number">10.016000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x44000</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">10.020000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">32</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">10.024000</span>] <span class="hljs-symbol">AntCfgInit</span>(<span class="hljs-number">2947</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">10.032000</span>] <span class="hljs-symbol">MCS</span> <span class="hljs-symbol">Set</span> = ff ff <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span><br>[   <span class="hljs-number">10.032000</span>] <span class="hljs-symbol">MtAsicSetChBusyStat</span>(<span class="hljs-number">861</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">10.540000</span>] <span class="hljs-symbol">RT305x_ESW</span>: <span class="hljs-symbol">Link</span> <span class="hljs-symbol">Status</span> <span class="hljs-symbol">Changed</span><br>[   <span class="hljs-number">10.540000</span>] [bhu_esw_link_status_change][<span class="hljs-number">2061</span>]: stat[<span class="hljs-number">81808100</span>], stat_curr[a190a110]<br>[   <span class="hljs-number">10.540000</span>] <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">ESW</span> <span class="hljs-symbol">LAN</span> link change<br>[   <span class="hljs-number">10.600000</span>] <span class="hljs-symbol">CmdSlotTimeSet</span>:(ret = <span class="hljs-number">0</span>)<br>[   <span class="hljs-number">12.696000</span>] =====================================================<br>[   <span class="hljs-number">12.700000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">1</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">258</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">5134</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.708000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">2</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">152</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">6000</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.716000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">3</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">222</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">7537</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.724000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">4</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">184</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">7006</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.732000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">5</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">244</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">8647</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.744000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">6</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">144</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">12316</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.752000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">7</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">356</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">5557</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.760000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">8</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">260</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">5268</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.768000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">9</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">310</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">15987</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.776000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">10</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">268</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">11282</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.784000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">11</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">490</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">10399</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">12.792000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">12</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">254</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">6015</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">TRUE</span><br>[   <span class="hljs-number">12.800000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">13</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">192</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">3918</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">TRUE</span><br>[   <span class="hljs-number">12.808000</span>] =====================================================<br>[   <span class="hljs-number">12.816000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">12.824000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">12.828000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">12.836000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">12.840000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">12.848000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">12.876000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">12.880000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">12.888000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">12.892000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">12.900000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">12.908000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">12.912000</span>] &lt;==== rt28xx_init, <span class="hljs-symbol">Status</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">12.920000</span>] <span class="hljs-symbol">BHUGenNetlink</span>: bhu_gen_nl_register_netlink<br>[   <span class="hljs-number">12.924000</span>] bhu_gen_nl_register_netlink: <span class="hljs-symbol">BHU</span> gen netlink has been registered. <span class="hljs-symbol">Family</span> id is <span class="hljs-number">20</span><br>[   <span class="hljs-number">12.948000</span>] <span class="hljs-symbol">BHUGenNetlink</span>: bhu_gen_nl_register_netlink<br>[   <span class="hljs-number">12.952000</span>] bhu_gen_nl_register_netlink: <span class="hljs-symbol">BHU</span> gen netlink has been registered. <span class="hljs-symbol">Family</span> id is <span class="hljs-number">20</span><br>[   <span class="hljs-number">12.972000</span>] <span class="hljs-symbol">BHUGenNetlink</span>: bhu_gen_nl_register_netlink<br>[   <span class="hljs-number">12.976000</span>] bhu_gen_nl_register_netlink: <span class="hljs-symbol">BHU</span> gen netlink has been registered. <span class="hljs-symbol">Family</span> id is <span class="hljs-number">20</span><br>[   <span class="hljs-number">12.984000</span>] @@@ ed_monitor_exit : ===&gt;<br>[   <span class="hljs-number">12.988000</span>] @@@ ed_monitor_exit : &lt;===<br>[   <span class="hljs-number">12.992000</span>] mt7628_set_ed_cca: <span class="hljs-symbol">TURN</span> <span class="hljs-symbol">OFF</span> <span class="hljs-symbol">EDCCA</span>  mac <span class="hljs-number">0x10618</span> = <span class="hljs-number">0xd7083f0f</span><br>[   <span class="hljs-number">13.000000</span>] <span class="hljs-symbol">WiFi</span> <span class="hljs-symbol">Startup</span> <span class="hljs-symbol">Cost</span> (wlan0): <span class="hljs-number">3.432</span>s<br>[   <span class="hljs-number">15.496000</span>] led=<span class="hljs-number">43</span>, on=<span class="hljs-number">1</span>, off=<span class="hljs-number">5</span>, blinks=<span class="hljs-number">1</span>, rest=<span class="hljs-number">0</span>, times=<span class="hljs-number">1</span><br>[main] &gt;&gt;&gt; <span class="hljs-symbol">Init</span> dispather success!<br><span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Software</span> <span class="hljs-symbol">Version</span>: <span class="hljs-symbol">AP902P07V1</span><span class="hljs-number">.6</span><span class="hljs-number">.0</span><span class="hljs-symbol">Build798_TU</span> <span class="hljs-number">2017</span><span class="hljs-number">-11</span><span class="hljs-number">-03</span><span class="hljs-number">-09</span>:<span class="hljs-number">13</span> <span class="hljs-symbol">Revision</span>: <span class="hljs-number">798</span><br>procd: - init complete -<br>kill: you need to specify whom to kill<br><span class="hljs-symbol">Mongoose</span> web server v<span class="hljs-number">.3</span><span class="hljs-number">.9</span> started on port(s) <span class="hljs-number">80</span> with web root [/usr/share/www]<br>main, <span class="hljs-number">36</span>, svn:<span class="hljs-number">798</span>, version:<span class="hljs-number">10015</span>, time:[<span class="hljs-symbol">Thu</span> <span class="hljs-symbol">Nov</span>  <span class="hljs-number">2</span> <span class="hljs-number">20</span>:<span class="hljs-number">56</span>:<span class="hljs-number">08</span> <span class="hljs-symbol">CST</span> <span class="hljs-number">2017</span>]<br>wait for pa data initpa_data_init done[   <span class="hljs-number">19.788000</span>] bhuhttp_L2_init: register nl family ok<br>[   <span class="hljs-number">19.796000</span>] user space pid:<span class="hljs-number">799</span><br>[http_url_start_timer][<span class="hljs-number">269</span>] http url age timer start..<br>[   <span class="hljs-number">20.036000</span>] cfg_mode=<span class="hljs-number">9</span><br>[   <span class="hljs-number">20.036000</span>] wmode_band_equal(): <span class="hljs-symbol">Band</span> <span class="hljs-symbol">Equal</span>!<br>[   <span class="hljs-number">20.044000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>kmod: module is not loaded<br>[   <span class="hljs-number">20.120000</span>] cfg_mode=<span class="hljs-number">9</span><br>[   <span class="hljs-number">20.124000</span>] wmode_band_equal(): <span class="hljs-symbol">Band</span> <span class="hljs-symbol">Equal</span>!<br>[   <span class="hljs-number">20.128000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.164000</span>] cfg_mode=<span class="hljs-number">9</span><br>[   <span class="hljs-number">20.164000</span>] wmode_band_equal(): <span class="hljs-symbol">Band</span> <span class="hljs-symbol">Equal</span>!<br>[   <span class="hljs-number">20.168000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.216000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">20.224000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.228000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.236000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.240000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.248000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.252000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.260000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.288000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">20.292000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.304000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.308000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.316000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">20.324000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.332000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.336000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">20.344000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">20.376000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">20.380000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.388000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.392000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.400000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.404000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">20.412000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.416000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.456000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">20.460000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.468000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">20.472000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.480000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">20.488000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.496000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">20.500000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">20.508000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">20.572000</span>] device eth0 entered promiscuous mode<br>[   <span class="hljs-number">20.580000</span>] device wlan0 entered promiscuous mode<br>[   <span class="hljs-number">20.592000</span>] device wlan2 entered promiscuous mode<br>[   <span class="hljs-number">20.600000</span>] device wlan3 entered promiscuous mode<br>killall: dropbear: no process killed<br>kill: you need to specify whom to kill<br>[   <span class="hljs-number">21.972000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">21.980000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">21.984000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">21.992000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">21.996000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.004000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.012000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.016000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.044000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">22.052000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.056000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.064000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.072000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">22.080000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.084000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.092000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTa</span>￠￥μ&amp;#<span class="hljs-number">189</span>;&amp;#<span class="hljs-number">1425</span>;= <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">22.096000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">22.104000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">22.112000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.116000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.124000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.128000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.136000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.144000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.148000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.176000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">22.180000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.188000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.196000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.200000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">22.208000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.216000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.224000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">22.228000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">22.244000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">22.252000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.256000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.264000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.268000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.276000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">22.280000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.288000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.316000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">22.324000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.328000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">22.336000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.344000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">22.352000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.356000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">22.364000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">22.372000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">23.416000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">23.424000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.428000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.436000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.440000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.448000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.452000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.460000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.488000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">23.492000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.500000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.504000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.512000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">23.520000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.528000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.532000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">23.540000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">23.560000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">23.564000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.572000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.576000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.584000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.588000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">23.596000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.600000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.628000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">23.636000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.640000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">23.648000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.652000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">23.660000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.668000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">23.676000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">23.680000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">24.724000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">24.732000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.736000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.744000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.748000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.756000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.760000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.768000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.796000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">24.800000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.808000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.812000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.820000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">24.828000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.836000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.840000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">24.848000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">24.868000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>[   <span class="hljs-number">24.872000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.880000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.884000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.892000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.896000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">24.904000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.908000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.936000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">24.944000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.948000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">24.956000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">32</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.964000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">24.972000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">6</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.976000</span>] <span class="hljs-symbol">AddTxSType</span>: already registered <span class="hljs-symbol">TxSType</span> (<span class="hljs-symbol">PID</span> = <span class="hljs-number">8</span>, <span class="hljs-symbol">Format</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">24.984000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">24.988000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br><span class="hljs-symbol">MASQUERADE</span>  all opt -- in * out eth1  <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">0</span>  -&gt; <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">0</span>  [<span class="hljs-number">24</span> bytes of unknown target data]<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>udhcpc (v1<span class="hljs-number">.22</span><span class="hljs-number">.1</span>) started<br>route: <span class="hljs-symbol">SIOCDELRT</span>: <span class="hljs-symbol">No</span> such process<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>[   <span class="hljs-number">27.408000</span>] br-lan: port <span class="hljs-number">2</span>(wlan0) entered forwarding state<br>[   <span class="hljs-number">27.412000</span>] br-lan: port <span class="hljs-number">2</span>(wlan0) entered forwarding state<br>[   <span class="hljs-number">27.420000</span>] br-lan: port <span class="hljs-number">1</span>(eth0) entered forwarding state<br>[   <span class="hljs-number">27.424000</span>] br-lan: port <span class="hljs-number">1</span>(eth0) entered forwarding state<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br><span class="hljs-symbol">MASQUERADE</span>  all opt -- in * out [   <span class="hljs-number">27.688000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>eth1  <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">0</span> [   <span class="hljs-number">27.700000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0x0</span><br>-&gt; <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">0</span>  [[   <span class="hljs-number">27.704000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br><span class="hljs-number">24</span> bytes of unknown target data]<br><span class="hljs-symbol">MASQUERADE</span>  all opt -- in * out eth1  <span class="hljs-number">192.168</span><span class="hljs-number">.62</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span>  -&gt; <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">0</span>  [<span class="hljs-number">24</span> bytes of unknown target data]<br>[   <span class="hljs-number">27.936000</span>] bhu_tc_send_q_tx: send skb failed, err=<span class="hljs-number">2</span><br>[   <span class="hljs-number">28.032000</span>] bhu_tc_send_q_tx: send skb failed, err=<span class="hljs-number">2</span><br>[   <span class="hljs-number">28.240000</span>] tx_kickout_fail_count = <span class="hljs-number">0</span><br>[   <span class="hljs-number">28.244000</span>] tx_timeout_fail_count = <span class="hljs-number">0</span><br>[   <span class="hljs-number">28.244000</span>] rx_receive_fail_count = <span class="hljs-number">0</span><br>[   <span class="hljs-number">28.248000</span>] alloc_cmd_msg = <span class="hljs-number">207</span><br>[   <span class="hljs-number">28.252000</span>] free_cmd_msg = <span class="hljs-number">207</span><br>[   <span class="hljs-number">28.260000</span>] br-lan: port <span class="hljs-number">2</span>(wlan0) entered disabled state<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>[   <span class="hljs-number">28.308000</span>] <span class="hljs-symbol">TX_BCN</span> <span class="hljs-symbol">DESC</span> a29d8000 size = <span class="hljs-number">320</span><br>[   <span class="hljs-number">28.312000</span>] <span class="hljs-symbol">RX</span>[<span class="hljs-number">0</span>] <span class="hljs-symbol">DESC</span> a29db000 size = <span class="hljs-number">1024</span><br>[   <span class="hljs-number">28.316000</span>] <span class="hljs-symbol">RX</span>[<span class="hljs-number">1</span>] <span class="hljs-symbol">DESC</span> a29dc000 size = <span class="hljs-number">1024</span><br>[   <span class="hljs-number">28.332000</span>] cfg_mode=<span class="hljs-number">9</span><br>[   <span class="hljs-number">28.332000</span>] cfg_mode=<span class="hljs-number">9</span><br>[   <span class="hljs-number">28.336000</span>] wmode_band_equal(): <span class="hljs-symbol">Band</span> <span class="hljs-symbol">Equal</span>!<br>[   <span class="hljs-number">28.340000</span>] <span class="hljs-symbol">AndesSendCmdMsg</span>: <span class="hljs-symbol">Could</span> not send in band command due to diable fRTMP_ADAPTER_MCU_SEND_IN_BAND_CMD<br>[   <span class="hljs-number">28.352000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.356000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.360000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">2</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.360000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">3</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.364000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">4</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.368000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">5</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.368000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">6</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.372000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">7</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.376000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">8</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.380000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">9</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.380000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">10</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.384000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">11</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.388000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">12</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.392000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">13</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.392000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">14</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.396000</span>] <span class="hljs-symbol">APSDCapable</span>[<span class="hljs-number">15</span>]=<span class="hljs-number">1</span><br>[   <span class="hljs-number">28.428000</span>] load fw image from fw_header_image<br>[   <span class="hljs-number">28.432000</span>] <span class="hljs-symbol">AndesMTLoadFwMethod1</span>(<span class="hljs-number">2182</span>)::pChipCap-&gt;fw_len(<span class="hljs-number">63888</span>)<br>[   <span class="hljs-number">28.440000</span>] <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Version</span>:<span class="hljs-number">20151201</span><br>[   <span class="hljs-number">28.444000</span>] <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Build</span> <span class="hljs-symbol">Date</span>:<span class="hljs-number">20151201183641</span><br>[   <span class="hljs-number">28.448000</span>] <span class="hljs-symbol">CmdReStartDLRsp</span>: <span class="hljs-symbol">WiFI</span> <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Download</span> <span class="hljs-symbol">Success</span><br>[   <span class="hljs-number">28.452000</span>] <span class="hljs-symbol">CmdAddressLenReq</span>:(ret = <span class="hljs-number">0</span>)<br>[   <span class="hljs-number">28.456000</span>] <span class="hljs-symbol">CmdFwStartReq</span>: override = <span class="hljs-number">1</span>, address = <span class="hljs-number">1048576</span><br>[   <span class="hljs-number">28.464000</span>] <span class="hljs-symbol">CmdStartDLRsp</span>: <span class="hljs-symbol">WiFI</span> <span class="hljs-symbol">FW</span> <span class="hljs-symbol">Download</span> <span class="hljs-symbol">Success</span><br>[   <span class="hljs-number">28.468000</span>] <span class="hljs-symbol">MtAsicDMASchedulerInit</span>(): <span class="hljs-symbol">DMA</span> <span class="hljs-symbol">Scheduler</span> <span class="hljs-symbol">Mode</span>=<span class="hljs-number">0</span>(<span class="hljs-symbol">LMAC</span>)<br>[   <span class="hljs-number">28.472000</span>] efuse_probe: efuse = <span class="hljs-number">10000012</span><br>[   <span class="hljs-number">28.476000</span>] <span class="hljs-symbol">RtmpChipOpsEepromHook</span>::e2p_type=<span class="hljs-number">2</span>, inf_Type=<span class="hljs-number">4</span><br>[   <span class="hljs-number">28.484000</span>] <span class="hljs-symbol">RtmpEepromGetDefault</span>::e2p_dafault=<span class="hljs-number">2</span><br>[   <span class="hljs-number">28.488000</span>] <span class="hljs-symbol">RtmpChipOpsEepromHook</span>: <span class="hljs-symbol">E2P</span> type(<span class="hljs-number">2</span>), <span class="hljs-symbol">E2pAccessMode</span> = <span class="hljs-number">2</span>, <span class="hljs-symbol">E2P</span> default = <span class="hljs-number">2</span><br>[   <span class="hljs-number">28.496000</span>] <span class="hljs-symbol">NVM</span> is <span class="hljs-symbol">FLASH</span> mode<br>[   <span class="hljs-number">28.500000</span>] <span class="hljs-number">1.</span> <span class="hljs-symbol">Phy</span> <span class="hljs-symbol">Mode</span> = <span class="hljs-number">14</span><br>[   <span class="hljs-number">28.660000</span>] <span class="hljs-symbol">Country</span> <span class="hljs-symbol">Region</span> from e2p = ffff<br>[   <span class="hljs-number">28.668000</span>] tssi_1_target_pwr_g_band = <span class="hljs-number">36</span><br>[   <span class="hljs-number">28.672000</span>] <span class="hljs-number">2.</span> <span class="hljs-symbol">Phy</span> <span class="hljs-symbol">Mode</span> = <span class="hljs-number">14</span><br>[   <span class="hljs-number">28.672000</span>] <span class="hljs-number">3.</span> <span class="hljs-symbol">Phy</span> <span class="hljs-symbol">Mode</span> = <span class="hljs-number">14</span><br>[   <span class="hljs-number">28.676000</span>] <span class="hljs-symbol">NICInitPwrPinCfg</span>(<span class="hljs-number">11</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">28.680000</span>] <span class="hljs-symbol">NICInitializeAsic</span>(<span class="hljs-number">651</span>): <span class="hljs-symbol">Not</span> support rtmp_mac_sys_reset () for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">28.688000</span>] mt_mac_init()--&gt;<br>[   <span class="hljs-number">28.692000</span>] <span class="hljs-symbol">MtAsicInitMac</span>()--&gt;<br>[   <span class="hljs-number">28.696000</span>] mt7628_init_mac_cr()--&gt;<br>[   <span class="hljs-number">28.700000</span>] <span class="hljs-symbol">MtAsicSetMacMaxLen</span>(<span class="hljs-number">1276</span>): <span class="hljs-symbol">Set</span> the <span class="hljs-symbol">Max</span> <span class="hljs-symbol">RxPktLen</span>=<span class="hljs-number">1024</span>!<br>[   <span class="hljs-number">28.704000</span>] &lt;--mt_mac_init()<br>[   <span class="hljs-number">28.708000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">1</span> info:<br>[   <span class="hljs-number">28.712000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x28000</span>/<span class="hljs-number">0</span><br>[   <span class="hljs-number">28.716000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">32</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">28.720000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">2</span> info:<br>[   <span class="hljs-number">28.724000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x40000</span>/<span class="hljs-number">0</span><br>[   <span class="hljs-number">28.728000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">64</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">28.732000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">3</span> info:<br>[   <span class="hljs-number">28.732000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x42000</span>/<span class="hljs-number">64</span><br>[   <span class="hljs-number">28.736000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">64</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">28.740000</span>]         <span class="hljs-symbol">WTBL</span> <span class="hljs-symbol">Segment</span> <span class="hljs-number">4</span> info:<br>[   <span class="hljs-number">28.744000</span>]                 <span class="hljs-symbol">MemBaseAddr</span>/<span class="hljs-symbol">FID</span>:<span class="hljs-number">0x44000</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">28.748000</span>]                 <span class="hljs-symbol">EntrySize</span>/<span class="hljs-symbol">Cnt</span>:<span class="hljs-number">32</span>/<span class="hljs-number">128</span><br>[   <span class="hljs-number">28.752000</span>] <span class="hljs-symbol">AntCfgInit</span>(<span class="hljs-number">2947</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">28.756000</span>] <span class="hljs-symbol">MCS</span> <span class="hljs-symbol">Set</span> = ff ff <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span><br>[   <span class="hljs-number">28.760000</span>] <span class="hljs-symbol">MtAsicSetChBusyStat</span>(<span class="hljs-number">861</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">31.416000</span>] =====================================================<br>[   <span class="hljs-number">31.420000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">1</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">254</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">4969</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.428000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">2</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">168</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">4130</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.436000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">3</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">208</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">3210</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.444000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">4</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">250</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">3656</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.452000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">5</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">280</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">8862</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.464000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">6</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">218</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">6476</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.472000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">7</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">432</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">6117</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.480000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">8</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">336</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">5338</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.488000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">9</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">366</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">9826</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.496000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">10</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">324</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">4860</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.504000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">11</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">598</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">9220</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">FALSE</span><br>[   <span class="hljs-number">31.512000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">12</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">248</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">6747</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">TRUE</span><br>[   <span class="hljs-number">31.520000</span>] <span class="hljs-symbol">Channel</span> <span class="hljs-number">13</span> : <span class="hljs-symbol">Dirty</span> = <span class="hljs-number">216</span>, <span class="hljs-symbol">False</span> <span class="hljs-symbol">CCA</span> = <span class="hljs-number">0</span>, <span class="hljs-symbol">Busy</span> <span class="hljs-symbol">Time</span> = <span class="hljs-number">7909</span>, <span class="hljs-symbol">Skip</span> <span class="hljs-symbol">Channel</span> = <span class="hljs-symbol">TRUE</span><br>[   <span class="hljs-number">31.528000</span>] =====================================================<br>[   <span class="hljs-number">31.536000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">31.544000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">1</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">31.548000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">2</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">31.556000</span>] [<span class="hljs-symbol">PMF</span>]ap_pmf_init:: apidx=<span class="hljs-number">3</span>, <span class="hljs-symbol">MFPC</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">MFPR</span>=<span class="hljs-number">0</span>, <span class="hljs-symbol">SHA256</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">31.560000</span>] <span class="hljs-symbol">MtAsicSetRalinkBurstMode</span>(<span class="hljs-number">3047</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">31.568000</span>] <span class="hljs-symbol">MtAsicSetPiggyBack</span>(<span class="hljs-number">796</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">31.596000</span>] reload <span class="hljs-symbol">DPD</span> from flash , <span class="hljs-number">0x9F</span> = [c600] doReload bit7[<span class="hljs-number">0</span>]<br>[   <span class="hljs-number">31.600000</span>] <span class="hljs-symbol">CmdLoadDPDDataFromFlash</span>: <span class="hljs-symbol">Channel</span> = <span class="hljs-number">2</span>, <span class="hljs-symbol">DoReload</span> = <span class="hljs-number">0</span><br>[   <span class="hljs-number">31.608000</span>] <span class="hljs-symbol">MtAsicSetTxPreamble</span>(<span class="hljs-number">3026</span>): <span class="hljs-symbol">Not</span> support for <span class="hljs-symbol">HIF_MT</span> yet!<br>[   <span class="hljs-number">31.616000</span>] <span class="hljs-symbol">The</span> <span class="hljs-number">4</span>-<span class="hljs-symbol">BSSID</span> mode is enabled, the <span class="hljs-symbol">BSSID</span> byte5 <span class="hljs-symbol">MUST</span> be the multiple of <span class="hljs-number">4</span><br>[   <span class="hljs-number">31.624000</span>] <span class="hljs-symbol">MtAsicSetPreTbtt</span>(): bss_idx=<span class="hljs-number">0</span>, <span class="hljs-symbol">PreTBTT</span> timeout = <span class="hljs-number">0xf0</span><br>[   <span class="hljs-number">31.628000</span>] <span class="hljs-symbol">Main</span> bssid = <span class="hljs-number">84</span>:<span class="hljs-number">82</span>:f4:<span class="hljs-number">38</span>:c0:<span class="hljs-number">15</span><br>[   <span class="hljs-number">31.632000</span>] &lt;==== rt28xx_init, <span class="hljs-symbol">Status</span>=<span class="hljs-number">0</span><br>[   <span class="hljs-number">31.636000</span>] @@@ ed_monitor_exit : ===&gt;<br>[   <span class="hljs-number">31.640000</span>] @@@ ed_monitor_exit : &lt;===<br>[   <span class="hljs-number">31.644000</span>] mt7628_set_ed_cca: <span class="hljs-symbol">TURN</span> <span class="hljs-symbol">OFF</span> <span class="hljs-symbol">EDCCA</span>  mac <span class="hljs-number">0x10618</span> = <span class="hljs-number">0xd7083f0f</span><br>[   <span class="hljs-number">31.652000</span>] <span class="hljs-symbol">WiFi</span> <span class="hljs-symbol">Startup</span> <span class="hljs-symbol">Cost</span> (wlan0): <span class="hljs-number">3.344</span>s<br>[   <span class="hljs-number">31.656000</span>] br-lan: port <span class="hljs-number">2</span>(wlan0) entered forwarding state<br>[   <span class="hljs-number">31.660000</span>] br-lan: port <span class="hljs-number">2</span>(wlan0) entered forwarding state<br>iptables: <span class="hljs-symbol">No</span> chain/target/match by that name.<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">No</span> such file or directory)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>serverctl: <span class="hljs-symbol">BHU</span> <span class="hljs-symbol">Tunnel</span> probably not started (<span class="hljs-symbol">Error</span>: <span class="hljs-symbol">Connection</span> refused)<br>[   <span class="hljs-number">33.928000</span>] led=<span class="hljs-number">43</span>, on=<span class="hljs-number">0</span>, off=<span class="hljs-number">1</span>, blinks=<span class="hljs-number">0</span>, rest=<span class="hljs-number">0</span>, times=<span class="hljs-number">0</span><br>[   <span class="hljs-number">33.984000</span>] led=<span class="hljs-number">42</span>, on=<span class="hljs-number">2</span>, off=<span class="hljs-number">5</span>, blinks=<span class="hljs-number">1</span>, rest=<span class="hljs-number">0</span>, times=<span class="hljs-number">1</span><br>wandetect: eth1 is running<br>wandetect: start pppoe_discovery_main thread ok.<br>wandetect: start dhcp detect thread ok.<br>udhcpc (v1<span class="hljs-number">.22</span><span class="hljs-number">.1</span>) started<br>wlan_ol_sta_online_proc: add sta <span class="hljs-number">74</span>:<span class="hljs-number">97</span>:<span class="hljs-number">81</span>:ab:<span class="hljs-number">06</span>:dd, count <span class="hljs-number">1</span><br>assoced:<span class="hljs-number">74</span>:<span class="hljs-number">97</span>:<span class="hljs-number">81</span>:ab:<span class="hljs-number">06</span>:dd<br>[   <span class="hljs-number">35.040000</span>] led=<span class="hljs-number">43</span>, on=<span class="hljs-number">2</span>, off=<span class="hljs-number">5</span>, blinks=<span class="hljs-number">1</span>, rest=<span class="hljs-number">0</span>, times=<span class="hljs-number">1</span><br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br><span class="hljs-symbol">No</span> lease, failing<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect: <span class="hljs-symbol">Timeout</span> waiting for <span class="hljs-symbol">PADO</span> packets<br>wandetect:<br><span class="hljs-symbol">HOSTNAME</span> login:<br><br>[<span class="hljs-symbol">END</span>] <span class="hljs-number">2021</span>/<span class="hljs-number">3</span>/<span class="hljs-number">4</span> <span class="hljs-number">21</span>:<span class="hljs-number">13</span>:<span class="hljs-number">04</span><br></code></pre></td></tr></table></figure></details><h2 id="breed"><a href="#breed" class="headerlink" title="breed"></a>breed</h2><p>使用恩山论坛的breed-mt7688-reset38.bin。不能正确识别内存大小，此外没什么问题。这个路由器内存为一片EM68B16CWQH-25H，64MB，breed中识别为128MB，可以在编译openwrt前修改dts设置内存为64MB。</p><h2 id="刷回原厂固件"><a href="#刷回原厂固件" class="headerlink" title="刷回原厂固件"></a>刷回原厂固件</h2><p>breed中刷入一次刚才导出的编程器固件，此步骤作用是恢复mac地址与eeprom。</p><h3 id="openwrt编译"><a href="#openwrt编译" class="headerlink" title="openwrt编译"></a>openwrt编译</h3><p>使用lean&#x2F;lede代码，选择MT76X8，GL.iNet VIXMINI配置。GL.iNet VIXMINI配置为MT7628NN 8+64，无USB，与必虎mini接近： <a href="https://www.gl-inet.cn/products/vixmini/">https://www.gl-inet.cn/products/vixmini/</a></p><h4 id="修改-lede-target-linux-ramips-mt76x8-base-files-etc-board-d-02-network"><a href="#修改-lede-target-linux-ramips-mt76x8-base-files-etc-board-d-02-network" class="headerlink" title="修改 lede&#x2F;target&#x2F;linux&#x2F;ramips&#x2F;mt76x8&#x2F;base-files&#x2F;etc&#x2F;board.d&#x2F;02_network"></a>修改 lede&#x2F;target&#x2F;linux&#x2F;ramips&#x2F;mt76x8&#x2F;base-files&#x2F;etc&#x2F;board.d&#x2F;02_network</h4><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-built_in">glinet,</span>microuter-n300|\<br><span class="hljs-built_in">glinet,</span>vixmini)<br>ucidef_add_switch <span class="hljs-string">&quot;switch0&quot;</span> \<br><span class="hljs-string">&quot;0:lan&quot;</span> <span class="hljs-string">&quot;6@eth0&quot;</span><br><span class="hljs-comment">;;</span><br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-built_in">glinet,</span>microuter-n300|\<br><span class="hljs-built_in">glinet,</span>vixmini)<br>ucidef_add_switch <span class="hljs-string">&quot;switch0&quot;</span> \<br><span class="hljs-string">&quot;4:lan&quot;</span> <span class="hljs-string">&quot;2:lan&quot;</span> <span class="hljs-string">&quot;0:wan&quot;</span> <span class="hljs-string">&quot;6@eth0&quot;</span><br><span class="hljs-comment">;;</span><br></code></pre></td></tr></table></figure><p>因为vixmini只有一个网口，我们需要自行添加2个网口，注意对应交换机的2和4。注意MT7628只有一个网卡（interface），内置5口交换机，通过VLAN划分WAN与LAN，WAN一般对应0号口，LAN需要自己测试，本例中为2和4。</p><h4 id="修改lede-target-linux-ramips-image-mt76x8-mk"><a href="#修改lede-target-linux-ramips-image-mt76x8-mk" class="headerlink" title="修改lede&#x2F;target&#x2F;linux&#x2F;ramips&#x2F;image&#x2F;mt76x8.mk"></a>修改lede&#x2F;target&#x2F;linux&#x2F;ramips&#x2F;image&#x2F;mt76x8.mk</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go">define Device/glinet_vixmini<br>  IMAGE_SIZE := <span class="hljs-number">7872</span>k<br>  DEVICE_VENDOR := GL.iNet<br>  DEVICE_MODEL := VIXMINI<br>  SUPPORTED_DEVICES += vixmini<br>endef<br>TARGET_DEVICES += glinet_vixmini<br></code></pre></td></tr></table></figure><p>修改为</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go">define Device/glinet_vixmini<br>  IMAGE_SIZE := <span class="hljs-number">16064</span>k<br>  DEVICE_VENDOR := GL.iNet<br>  DEVICE_MODEL := VIXMINI<br>  SUPPORTED_DEVICES += vixmini<br>endef<br>TARGET_DEVICES += glinet_vixmini<br></code></pre></td></tr></table></figure><p>VIXMINI闪存8M，不如此修改无法生成8M~16M大小的固件。</p><h4 id="修改lede-target-linux-ramips-dts-mt7628an-glinet-vixmini-dts"><a href="#修改lede-target-linux-ramips-dts-mt7628an-glinet-vixmini-dts" class="headerlink" title="修改lede&#x2F;target&#x2F;linux&#x2F;ramips&#x2F;dts&#x2F;mt7628an_glinet_vixmini.dts"></a>修改lede&#x2F;target&#x2F;linux&#x2F;ramips&#x2F;dts&#x2F;mt7628an_glinet_vixmini.dts</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-comment">// SPDX-License-Identifier: GPL-2.0-or-later OR MIT</span><br><span class="hljs-keyword">/dts-v1/</span><span class="hljs-punctuation">;</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;mt7628an_glinet_vixmini_microuter.dtsi&quot;</span></span><br><br><span class="hljs-title class_">/</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">compatible</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;glinet,vixmini&quot;</span>, <span class="hljs-string">&quot;mediatek,mt7628an-soc&quot;</span><span class="hljs-punctuation">;</span><br><span class="hljs-attr">model</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;GL.iNet VIXMINI&quot;</span><span class="hljs-punctuation">;</span><br><br><span class="hljs-title class_">memory@0</span> <span class="hljs-punctuation">&#123;</span><br>device_<span class="hljs-attr">type</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;memory&quot;</span><span class="hljs-punctuation">;</span><br><span class="hljs-attr">reg</span> <span class="hljs-operator">=</span> <span class="hljs-params">&lt;<span class="hljs-number">0x0</span> <span class="hljs-number">0x4000000</span>&gt;</span><span class="hljs-punctuation">;</span><br><span class="hljs-punctuation">&#125;;</span><br><span class="hljs-punctuation">&#125;;</span><br><br><span class="hljs-variable">&amp;led_power_blue</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">label</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;vixmini:blue:power&quot;</span><span class="hljs-punctuation">;</span><br><span class="hljs-punctuation">&#125;;</span><br><br><span class="hljs-variable">&amp;led_wlan_white</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">label</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;vixmini:white:wlan&quot;</span><span class="hljs-punctuation">;</span><br><span class="hljs-punctuation">&#125;;</span><br><br><span class="hljs-variable">&amp;firmware_part</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">reg</span> <span class="hljs-operator">=</span> <span class="hljs-params">&lt;<span class="hljs-number">0x50000</span> <span class="hljs-number">0xfb0000</span>&gt;</span><span class="hljs-punctuation">;</span><br><span class="hljs-punctuation">&#125;;</span><br></code></pre></td></tr></table></figure><p>其中，</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">memory<span class="hljs-meta">@0</span> &#123;<br>device_type = <span class="hljs-string">&quot;memory&quot;</span>;<br>reg = <span class="hljs-variable">&lt;0x0 0x4000000&gt;</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><p>这一段是自己加的，本来内存容量应该由BootLoader获取传递给openwrt，不过由于breed识别错误，所以自己手动指定参数。</p><p>经过以上修改后就可以编译固件了，然而由于MT7628开源WIFI驱动贫弱的表现，你很可能会不满意，如此可以继续阅读：</p><h2 id="刷GL-iNet-GL-MT300N-V2固件"><a href="#刷GL-iNet-GL-MT300N-V2固件" class="headerlink" title="刷GL-iNet GL-MT300N-V2固件"></a>刷GL-iNet GL-MT300N-V2固件</h2><p>在GL-iNet官网下载:<a href="http://download.gl-inet.com/firmware/">http://download.gl-inet.com/firmware/</a></p><p>GL-iNet应该是主打外贸的国内路由器厂商，路由器固件均基于openwrt，包含MTK私有驱动，WIFI表现良好，实测穿2道非承重墙非常轻松。</p><p>GL-MT300N-V2固件初始WIFI密码goodlife，管理页面登录密码admin。首次设置需要通过WIFI连接，通过SSH访问修改<code>/etc/config/network</code>，将vlan为1的交换机端口修改成以下的样子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">config switch_vlan<br>        <span class="hljs-keyword">option</span> device <span class="hljs-string">&#x27;switch0&#x27;</span><br>        <span class="hljs-keyword">option</span> vlan <span class="hljs-string">&#x27;1&#x27;</span><br>        <span class="hljs-keyword">option</span> ports <span class="hljs-string">&#x27;2 4 6t&#x27;</span><br></code></pre></td></tr></table></figure><p>对应2和4。之后执行<code>/etc/init.d/network restart</code>LAN口就可用了。</p><h1 id="下步折腾计划"><a href="#下步折腾计划" class="headerlink" title="下步折腾计划"></a>下步折腾计划</h1><p>恩山上看见有人通过刮U露出针脚的方式自己加焊了USB接口……查了下资料MT7628NN的Pin61，62分别对应USB_DP和USB_DM，如果这两个针脚在主板上已经引出就简单了，有空时拿万用表测下。</p><ul><li><a href="/2021/03/23/bhu-dc/MT7628_datasheet.pdf" title="MT7628NN Datasheet">MT7628NN Datasheet</a></li><li><a href="/2021/03/23/bhu-dc/breed-mt7688-reset38.bin" title="breed文件">breed文件</a></li><li><a href="/2021/03/23/bhu-dc/25b5h4.bin" title="编程器固件（必虎原厂）">编程器固件（必虎原厂）</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>必虎</tag>
      
      <tag>路由器</tag>
      
      <tag>openwrt</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>必虎路由器原厂固件探索</title>
    <link href="/2021/03/23/bhu_tour/"/>
    <url>/2021/03/23/bhu_tour/</url>
    
    <content type="html"><![CDATA[<p>在<code>/usr/share/www</code>中发现<em>debug.html</em>页面，访问<a href="http://192.168.62.1/debug.html">http://192.168.62.1/debug.html</a> :</p><p>可用命令</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">webportal_user_status<br>pppstatus<br>dhcpcstatus<br>dhcpstalist<br>dhcpdetect<br>wlanstatus<br>wlanscan<br>wlankickoff<br>sysinfo<br>diskinfo<br>sysdebug<br>syscap<br>hwinfo<br>delayreboot<br>st<span class="hljs-built_in">a_stats</span><br>syslice<br>upnp_nat<br>if_stat<br>arp<br>route<br>reboot<br>save<br>mode<br>restore_factory<br>net_speed_test<br>wandetect<br>dpi<br>user_stat<br>if_rate_info<br>firmware_upgrade<br>wifi_schedule<br>dat<span class="hljs-built_in">a_stats</span><br>pppoe_pass_hack<br>clear_reset_flag<br></code></pre></td></tr></table></figure><p><code>sysinfo</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;?xml <span class="hljs-attribute">version</span>=<span class="hljs-string">&quot;1.0&quot;</span> <span class="hljs-attribute">encoding</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;&lt;return&gt;&lt;ITEM <span class="hljs-attribute">index</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attribute">cmd</span>=<span class="hljs-string">&quot;sysinfo&quot;</span> <span class="hljs-attribute">uptime</span>=<span class="hljs-string">&quot;5:17:13&quot;</span> <span class="hljs-attribute">memory</span>=<span class="hljs-string">&quot;22835200/62578688&quot;</span> <span class="hljs-attribute">cpu_usage</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attribute">average_load</span>=<span class="hljs-string">&quot;0.12/0.13/0.14&quot;</span> <span class="hljs-attribute">firmware_version</span>=<span class="hljs-string">&quot;AP902P07V1.6.0Build798_TU&quot;</span> <span class="hljs-attribute">sn</span>=<span class="hljs-string">&quot;BN212GH600045AA&quot;</span> <span class="hljs-attribute">sys_name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">sys_description</span>=<span class="hljs-string">&quot;uRouter series wireless AP. Support 802.11b/g/n. 300Mbps, 2T2R.&quot;</span> <span class="hljs-attribute">sys_model</span>=<span class="hljs-string">&quot;uRouter mini SJBY&quot;</span> <span class="hljs-attribute">ap_vendor</span>=<span class="hljs-string">&quot;BHU&quot;</span> <span class="hljs-attribute">uplink_interface_mac</span>=<span class="hljs-string">&quot;84:82:f4:38:bd:3b&quot;</span> <span class="hljs-attribute">hardware_version</span>=<span class="hljs-string">&quot;Z05&quot;</span> <span class="hljs-attribute">ip</span>=<span class="hljs-string">&quot;0.0.0.0&quot;</span> <span class="hljs-attribute">netmask</span>=<span class="hljs-string">&quot;0.0.0.0&quot;</span> <span class="hljs-attribute">gateway</span>=<span class="hljs-string">&quot;0.0.0.0&quot;</span> <span class="hljs-attribute">firmware_name</span>=<span class="hljs-string">&quot;kochab&quot;</span> <span class="hljs-attribute">longitude</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">latitude</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">cpu_type</span>=<span class="hljs-string">&quot;MIPS 24KEc V5.5&quot;</span> <span class="hljs-attribute">mem_type</span>=<span class="hljs-string">&quot;DDR2&quot;</span> <span class="hljs-attribute">mem_size</span>=<span class="hljs-string">&quot;61112&quot;</span> <span class="hljs-attribute">flash_size</span>=<span class="hljs-string">&quot;16384&quot;</span> <span class="hljs-attribute">sys_net_id</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">primary_dns</span>=<span class="hljs-string">&quot;114.114.114.114&quot;</span> <span class="hljs-attribute">second_dns</span>=<span class="hljs-string">&quot;0.0.0.0&quot;</span> <span class="hljs-attribute">location</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">systime</span>=<span class="hljs-string">&quot;13:17:13&quot;</span> <span class="hljs-attribute">saved_config</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">build_info</span>=<span class="hljs-string">&quot;2017-11-03-09:13 Revision: 798&quot;</span> <span class="hljs-attribute">config_model_ver</span>=<span class="hljs-string">&quot;V3&quot;</span> <span class="hljs-attribute">config_mode</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attribute">work_mode</span>=<span class="hljs-string">&quot;router-ap&quot;</span> <span class="hljs-attribute">dev_mac</span>=<span class="hljs-string">&quot;84:82:f4:38:bd:38&quot;</span> <span class="hljs-attribute">bmc_status</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attribute">status</span>=<span class="hljs-string">&quot;done&quot;</span>/&gt;&lt;/return&gt;<br></code></pre></td></tr></table></figure><p><code>ifrate</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;&lt;<span class="hljs-keyword">return</span>&gt;&lt;ITEM index=<span class="hljs-string">&quot;1&quot;</span> cmd=<span class="hljs-string">&quot;ifrate&quot;</span> status=<span class="hljs-string">&quot;done&quot;</span>&gt;&lt;ifrate_sub&gt;&lt;SUB <span class="hljs-keyword">interface</span>=&quot;<span class="hljs-symbol">wlan3</span>&quot; <span class="hljs-symbol">tx_pkts</span>=&quot;<span class="hljs-symbol">490</span>&quot; <span class="hljs-symbol">rx_pkts</span>=&quot;<span class="hljs-symbol">367</span>&quot; <span class="hljs-symbol">tx_bytes</span>=&quot;<span class="hljs-symbol">38872</span>&quot; <span class="hljs-symbol">rx_bytes</span>=&quot;<span class="hljs-symbol">56368</span>&quot; <span class="hljs-symbol">tx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot;/&gt;&lt;<span class="hljs-symbol">SUB</span> <span class="hljs-symbol">interface</span>=&quot;<span class="hljs-symbol">wlan2</span>&quot; <span class="hljs-symbol">tx_pkts</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_pkts</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">tx_bytes</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_bytes</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">tx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot;/&gt;&lt;<span class="hljs-symbol">SUB</span> <span class="hljs-symbol">interface</span>=&quot;<span class="hljs-symbol">wlan1</span>&quot; <span class="hljs-symbol">tx_pkts</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_pkts</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">tx_bytes</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_bytes</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">tx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot;/&gt;&lt;<span class="hljs-symbol">SUB</span> <span class="hljs-symbol">interface</span>=&quot;<span class="hljs-symbol">wlan0</span>&quot; <span class="hljs-symbol">tx_pkts</span>=&quot;<span class="hljs-symbol">485</span>&quot; <span class="hljs-symbol">rx_pkts</span>=&quot;<span class="hljs-symbol">161</span>&quot; <span class="hljs-symbol">tx_bytes</span>=&quot;<span class="hljs-symbol">75992</span>&quot; <span class="hljs-symbol">rx_bytes</span>=&quot;<span class="hljs-symbol">50581</span>&quot; <span class="hljs-symbol">tx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot;/&gt;&lt;<span class="hljs-symbol">SUB</span> <span class="hljs-symbol">interface</span>=&quot;<span class="hljs-symbol">eth1</span>&quot; <span class="hljs-symbol">tx_pkts</span>=&quot;<span class="hljs-symbol">2023</span>&quot; <span class="hljs-symbol">rx_pkts</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">tx_bytes</span>=&quot;<span class="hljs-symbol">686136</span>&quot; <span class="hljs-symbol">rx_bytes</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">tx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot;/&gt;&lt;<span class="hljs-symbol">SUB</span> <span class="hljs-symbol">interface</span>=&quot;<span class="hljs-symbol">eth0</span>&quot; <span class="hljs-symbol">tx_pkts</span>=&quot;<span class="hljs-symbol">44410</span>&quot; <span class="hljs-symbol">rx_pkts</span>=&quot;<span class="hljs-symbol">49873</span>&quot; <span class="hljs-symbol">tx_bytes</span>=&quot;<span class="hljs-symbol">34125041</span>&quot; <span class="hljs-symbol">rx_bytes</span>=&quot;<span class="hljs-symbol">18727781</span>&quot; <span class="hljs-symbol">tx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot; <span class="hljs-symbol">rx_rate</span>=&quot;<span class="hljs-symbol">0</span>&quot;/&gt;&lt;/<span class="hljs-symbol">ifrate_sub</span>&gt;&lt;/<span class="hljs-symbol">ITEM</span>&gt;&lt;/<span class="hljs-symbol">return</span>&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>必虎</tag>
      
      <tag>路由器</tag>
      
      <tag>openwrt</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇文章</title>
    <link href="/2021/03/23/first-post/"/>
    <url>/2021/03/23/first-post/</url>
    
    <content type="html"><![CDATA[<p>其实并不是第一篇。之前在<a href="https://anynode.net/">anyNode</a>VPS上搭建过typecho博客，不过不够稳定遂关停了。数据应该备份过，有空时翻翻。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>start</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
